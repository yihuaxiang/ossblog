path is https://playground.z.wiki/comment/list?path=/life/sanguo.html
三国里的台词\n\n<VideoPlayer src=\"https://z.wiki/autoupload/20230521/Zes2.三国.mp4\" />: \"值得学习\",\n: \"学到了。\",
life/sanguo
path is https://playground.z.wiki/comment/list?path=/life/decorate.html
---\nmeta:\n - name: description\n content: 家庭装修注意事项\n - name: keywords\n content: 橱柜,装修,家装,敖武,厨房,注意事项\n---\n# 装修注意事项\n\n最近搬家后想把厨房进行简单的装修，虽然这辈子已经第二次装修了，但是还是有很多坑不认得、没规避好，故写此总结，避免下次吃亏\n\n### 价格忽悠\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/c4427c2310d940d6a2d5eaf03b691f58.image.png\" />\n\n价格忽悠：谈的时候直说一延米的价格，其实还有很多其他的，加一块价格翻倍了（荷叶、拉手、抽屉、等等都要收费），有些费用看着少，加一起特别多，比如：\n\n- 荷叶10块钱，30个需要300块\n- 抽屉一个100，三个300块\n- 开口费（灶台、水池）一个一百\n- 拉手：240块\n- 等等\n\n我只能说，套路太多了，防不胜防但是不得不防。\n\n### 预付金\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/7df0114137e1466095c93867c75f31e5.image.png\" />\n\n预付金一定不要交太多，卖家都是身经百战、各种玩弄顾客，让顾客交尽可能多的预付金，一旦钱交出去了你的底线就没了，所以一定要少交点预付金，比如：60%、70%。\n一旦对方安装的东西有问题我们还有武器可以保护自己。\n\n> 第一次装修的时候就吃了这个亏，橱柜安装后油烟机装不上去，只能拆了一点橱柜，可惜当时没有留足够的本钱。\n\n### 交钱时机\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/85648f7245804b3eb801dafdc2ad2898.image.png\" />\n\n交钱时机，争取算出总价后再交钱，避免先交几百定金后再出总价，自己没有回旋的余地，也避免等你交了押金后没有了降价空间。\n\n\n### 主动出击\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/671090dd9d8d4cd3b70c6544ee39834c.image.png\" />\n\n找毛病，安装好后大胆的挑毛病，避免闷声被坑，对不良商家千万不能心慈手软。\n\n\n### 留好证据\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/662b22ddc9df4e3db8ab77992c168c21.image.png\" />\n\n商定好型号、规格、颜色之后，排好照片避免后期被偷换东西、降低品质\n\n\n### 其他\n\n<ImgView title=\"装修注意事项\" url=\"https://7.z.wiki/autoupload/2022-09-05/539a37f5857a4157b2855b08d2e2f5af.image.png\" />\n\n网上找攻略、方案，避免一头蒙坐等被坑，同时了解其他人遇到过的问题，同时了解橱柜相关的概念，增加基础知识、收费标准等。\n\n
life/decorate
path is https://playground.z.wiki/comment/list?path=/life/the-winter-olympics.html
冬奥有我\n\n2022-01-30 朝阳公园\n\n### 滑雪车\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/01bf5f5414aa4ca8b2965a6b90aa0a82.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/ba161b45e49c498c8b2092e91ddb9dcd.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/10a94949122d4e82a951eb14dd1a0d74.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/cec281f6766047439e39d734342093fc.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/51f676804a5f4c6b93c1d30faa751056.png\" />\n\n### 冰雪美人\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://9.z.wiki/images/20220130/a8535ba2fdbe4fda8cafd280b3d470ea.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://4.z.wiki/images/20220130/368cfffcec644a659bddaee808b09509.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://4.z.wiki/images/20220130/c036535ba9ef4a5695d5215d6f6661c8.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://4.z.wiki/images/20220130/9f2678c04d0745d0881ea6d9bb4eaace.png\" />\n\n<ImgView title=\"朝阳公园滑冰\" url=\"https://8.z.wiki/images/20220130/9d0c174772234c08a6442a8486499911.png\" />\n: \"羡慕博主的生活 :smile:\",\n: \"<p>哪儿了</p>\n\",\n: \"<p>好美</p>\n\",\n: \"<p>博主是个下姐姐？</p>\n\",
life/the-winter-olympics
path is https://playground.z.wiki/comment/list?path=/life/climbing.html
---\nmeta:\n - name: description\n content: 敖武的爬山新装备\n - name: keywords\n content: 敖武的爬山新装备,登山杖\n---\n# 爬山新装备\n\n上周末刚爬[完香山](https://z.wiki/life/july-xiangshan.html)，这周对爬山的热情迟迟无法消退。\n\n### 登山杖\n\n趁着热情尚未退却，多买点装备多爬几次山。在京东上买了两个登山杖（一个开拓者、一个探路者）。\n\n\n<ImgPlayer :imgs=\"[\n{url: 'https://z.wiki/autoupload/2022-08-05/54c711d6757647559f9e7c3fe0636fcc.image.png', title: '登山杖', desc: '通过小包背上登山杖'},\n{url: 'https://z.wiki/autoupload/2022-08-05/4b274768ed564b6f9390bf22222fd7d0.image.png', title: '登山杖', desc: '拿登山杖做武器'},\n{url: 'https://z.wiki/autoupload/2022-08-05/78af92173640404a99effd2cb0f923e5.image.png', title: '登山杖', desc: '使用登山杖'},\n]\" />\n\n### 为什么\n\n1. 登山杖在爬山过程中可以很好的缓解腿部压力（特别是负重的情况下）\n2. 登山杖可以辅助保持身体平衡\n3. 加快爬山速度\n4. 下坡时减轻落地的震动，保护膝盖\n\n### 登山杖指北\n\n#### 直柄与T柄\n\n<ImgView title=\"登山杖类型：直柄 T柄\" url=\"https://1.z.wiki/autoupload/2022-08-06/b2e8fd1fc1f244ae8e77b8cfe957c1bb.image.png\" />\n\n`T`柄又叫拐杖柄，适合腿脚不便的人群，其他人群则适合直柄。\n\n#### 折叠与伸缩\n\n<ImgView title=\"登山杖类型：折叠 伸缩\" url=\"https://2.z.wiki/autoupload/2022-08-06/cfb53a5936df4c9aaf1902e54cb1d6e5.image.png\" />\n\n折叠型特点：\n\n折叠型结构类似帐篷杆，由一根杖芯线（弹力索）连接三到四节空心管，折叠后体积较小、易于收纳。\n\n伸缩型特点：\n\n由粗细不同的多节（三节、四节）嵌套，通过扣锁固定，方便调整整体长度。\n\n#### 内锁与外锁\n\n<ImgView title=\"登山杖内锁、外锁\" url=\"https://3.z.wiki/autoupload/2022-08-06/a2888077ff344c1093dc79dc72df5479.image.png\" />\n\n伸缩登山杖主要有内锁和外锁两种锁，内锁是通过膨胀栓锁定，外锁是通过锁扣拉紧来固定。\n\n#### 材质\n\n常见的登山杖有铝合金、钛合金、碳纤维等材质，铝合金材质较重，但不容易折断，碳纤维较轻但也较脆，另外碳纤维材质的价格略贵。\n\n重量：碳纤维 < 钛合金 < 铝合金\n\n#### 重量与长度\n\n登山杖一版都`200g`以内，和材质有关系，铝合金较重、碳纤维较轻。折叠起来后长度大约`65cm`以内，折叠型更短。\n\n<ImgView title=\"登山杖长度\" url=\"https://4.z.wiki/autoupload/2022-08-06/fba29704a46944d48ec0df8313f7a961.image.png\" />\n\n#### 其他\n\n1. 两根同时使用，为保证身体左右平衡，建议同时使用两个，毕竟四条腿远比三条腿稳定（doge）。
life/climbing
path is https://playground.z.wiki/comment/list?path=/life/tianjin-2.html
---\nmeta:\n - name: description\n content: 天津 旅游 美女\n - name: keywords\n content: 天津 旅游 美女\n---\n# 海边的她\n\n\n<ImgView title=\"天津旅游\" url=\"https://7.z.wiki/autoupload/20240203/4RUh.2131X1600-IMG_6444.JPG\" />\n\n\n<ImgView title=\"天津旅游\" url=\"https://5.z.wiki/autoupload/20240203/Lc2E.3840X2880-IMG_4929.JPG\" />\n\n\n<ImgView title=\"天津旅游\" url=\"https://1.z.wiki/autoupload/20240203/0HSw.2875X2878-IMG_4900.JPG\" />\n: \"好看\",
life/tianjin-2
path is https://playground.z.wiki/comment/list?path=/life/olympic-tower.html
北京奥林匹克塔\n\n北京奥林匹克塔`2016`年`3`月`15`日，位于奥林匹克公园的最高建筑物终于有了名字。\n\n\n`2016`年`6`月`12`日，北京诞生了一个新地标——坐落在中轴线上的奥林匹克塔，永久性奥运五环标志也于塔顶落成。\n国际奥委会主席托马斯·巴赫在当日的仪式上表示，奥林匹克标志将奥林匹克精神重新带回北京民众中间，\n相信这也将激励中国做好`2022`年冬奥会筹办工作。\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/eaa279156ab1496bb8d9d69cd4680a9b.IMG_0966.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/f6d7cc5e455942589556ca4e7ed213a2.IMG_1007.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/2dcd9a103de8411999feaeaf623ac9dc.IMG_1006.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/d7e9e74b09fa4fbdb0c2e971370624bb.IMG_1005.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/89cc34f975b84c42b82cc666be4428b5.IMG_0995.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://4.z.wiki/autoupload/2022-11-19/d06eba7f56be46c4aee5e14f88a4d0c5.IMG_1004.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/f44504d224cd430cb5233932b1e6a083.IMG_0998.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/c2faa0e488d443998dfecb5ad8f5d749.IMG_0996.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/6e423c3abc29424cb1874943aa3bb0c8.IMG_0992.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/6f780bce91ac414286768271e8994f54.IMG_0987.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/6c9bf1abd18d49538c6f8f9e7e9c3354.IMG_0991.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://7.z.wiki/autoupload/2022-11-19/c7a14b88c75e4912b7d45774e84f77bc.IMG_0999.HEIC.jpg\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://8.z.wiki/autoupload/2022-11-19/3398763361b441b286c6be412cc26d4f.IMG_1003.JPG\" />\n\n<ImgView title=\"北京奥林匹克塔\" url=\"https://8.z.wiki/autoupload/2022-11-19/7e891276eb504ddea81912b69fc13207.IMG_0990.HEIC.jpg\" />: \"帅哥🤵\",
life/olympic-tower
path is https://playground.z.wiki/comment/list?path=/life/youth.html
青春\n\n### YOUTH\n\nby Samuel Ullman\n\nYouth is not a time of life; it is a state of mind; it is not a matter of rosy cheeks, red lips and supple knees; it is a matter of the will, a quality of the imagination, a vigor of the emotions; it is the freshness of the deep springs of life.\n\nYouth means a temperamental predominance of courage over timidity, of the appetite for adventure over the love of ease. This often exists in a man of 60 more than a boy of 20. Nobody grows old merely by a number of years. We grow old by deserting our ideals.\n\nYears may wrinkle the skin, but to give up enthusiasm wrinkles the soul. Worry, fear, self-distrust bows the heart and turns the spirit back to dust.\n\nWhether 60 or 16, there is in every human being’s heart the lure of wonder, the unfailing child-like appetite of what’s next and the joy of the game of living. In the center of your heart and my heart there is a wireless station: so long as it receives messages of beauty, hope, cheer, courage and power from men and from the Infinite, so long are you young.\n\nWhen the aerials are down, and your spirit is covered with snows of cynicism and the ice of pessimism, then you are grown old, even at 20, but as long as your aerials are up, to catch waves of optimism, there is hope you may die young at 80.\n\n### 青春\n\n塞缪尔.厄尔曼 作\n\n青春不是年华，而是心境；青春不是桃面、丹唇、柔膝，而是深沉的意志，恢宏的想象，炙热的恋情；青春是生命的深泉在涌流。\n\n青春气贯长虹，勇锐盖过怯弱，进取压倒苟安。如此锐气，二十后生而有之，六旬男子则更多见。年岁有加，并非垂老，理想丢弃，方堕暮年。\n\n岁月悠悠，衰微只及肌肤；热忱抛却，颓废必致灵魂。忧烦，惶恐，丧失自信，定使心灵扭曲，意气如灰。\n\n无论年届花甲，拟或二八芳龄，心中皆有生命之欢乐，奇迹之诱惑，孩童般天真久盛不衰。\n\n人人心中皆有一台天线，只要你从天上人间接受美好、希望、欢乐、勇气和力量的信号，你就青春永驻，风华常存。\n\n一旦天线下降，锐气便被冰雪覆盖，玩世不恭、自暴自弃油然而生，即使年方二十，实已垂垂老矣；然则只要树起天线，捕捉乐观信号，你就有望在八十高龄告别尘寰时仍觉年轻。: \"测试下敏感词过滤：***\",\n: \"测试下敏感词过滤：大**\",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/wink.png\" /> \",
life/youth
path is https://playground.z.wiki/comment/list?path=/life/firstsnow.html
---\nmeta:\n - name: description\n content: 北京大雪，北京2021年初雪，望京下雪啦~\n - name: keywords\n content: 北京,望京,大雪,初雪,美女\n---\n# 2021年初雪\n\n\n\n一年有四个季节，每个季节都有不同的景色，而我最喜欢冬天下雪时的壮丽景色。冬天，大雪纷飞人们好象来到了一个幽雅恬静的境界，来到了一个晶莹透剔的童话般的世界。松的那清香，白雪的那冰香，给人一种凉莹莹的抚慰。一切都在过滤，一切都在升华，连我的心灵也在净化，变得纯洁而又美好。\n\n\n\n[comment]: <> (![]&#40;./IMG_6307.JPG&#41;)\n\n[comment]: <> (![]&#40;./IMG_6313.JPG&#41;)\n\n[comment]: <> (![]&#40;./IMG_6314.JPG&#41;)\n\n[comment]: <> (![]&#40;./IMG_6351.JPG&#41;)\n\n[comment]: <> (![]&#40;./IMG_6343.jpg&#41;)\n\n\n\n\n白雪纷飞\n<ImgView title=\"北京下雪\" url=\"https://1.z.wiki/images/20211115/73de228197a245d1b8e62397da94353d.png\" />\n\n她在丛中笑\n<ImgView title=\"北京下雪\" url=\"https://2.z.wiki/images/20211115/eb6e95cc912b46ca8e0a792ee9463089.png\" />\n\n\n仙女散花\n<ImgView title=\"北京下雪\" url=\"https://1.z.wiki/images/20211115/13034135a12344f7898e47c91eb3cfb4.png\" />\n\n\n厚厚的白雪\n<ImgView title=\"北京下雪\" url=\"https://1.z.wiki/images/20211115/ef6464e0b6814de5b9e1cbd532669b5d.png\" />\n\n\n滚雪球\n<ImgView title=\"北京下雪\" url=\"https://4.z.wiki/images/20211115/ea8b8e028b3a4510b8318b07616da99b.png\" />\n\n\n大雪球\n<ImgView title=\"北京下雪\" url=\"https://4.z.wiki/images/20211115/4edba0a5c39b4a52b5f57e6645574cc3.png\" />\n: \"<p><a class=\"at\" href=\"#619384c683ad7a74a1bbad89\">@摄影师阿杰 </a> , 怎么出道？😀😀</p>\n\",\n: \"<p>小姐姐考虑出道吗 <img alt=\"think\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/30/2018new_sikao_org.png\"/></p>\n\",\n: \"<p>小姐姐考虑出道吗 <img alt=\"think\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/30/2018new_sikao_org.png\"/></p>\n\",\n: \"<p>哇，小姐姐好美</p>\n\",\n: \"<p>下雪啦~</p>\n\",
life/firstsnow
path is https://playground.z.wiki/comment/list?path=/life/bombomspace.html
弹力猩球·超级运动中心\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/2ed66c837cd841dca53c16e62c0ac2fc.png\" />\n\n\n机场那边有个 [斯普瑞斯奥特莱斯](https://www.gaode.com/place/B000A87IPS) ，之前简单逛过，然而没人带无法得其要领啊\n\n![01d8fe2cc8a32778ebc5f635f73b1e4e.gif](https://z.wiki/images/20220212/03d5993fbf7d4d1496e5ba2d07d030f0.gif)\n\n今天和老婆的姐姐一块去了，想着顺便帮姐姐带带孩子😶‍🌫️😶‍🌫️，然鹅，被现实教育了😂，被两个小孩带着完了半天\n\n![de4acbc2dab24b4768e7a9aacafa1b4c.gif](https://z.wiki/images/20220212/4d13e0aea5114879bb35fc75d6bfb495.gif)\n\n进入奥特莱斯直奔[弹力猩球](https://www.gaode.com/detail/B0H2O5EUV5?citycode=110000) \n\n![5ab439715bce72caf9e135a9a47cbb92.gif](https://z.wiki/images/20220212/7158467b890d4f2d9a7252844deadae0.gif)\n\n小哥哥小姐姐们前面走\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220403/ea41e7254fa349cab72893d081908ab4.png\" />\n\n\n后面跟着如此帅气的我😂\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220403/e18d0f88923f41a084240a8502700e24.png\" />\n\n\n\n进去直接拖鞋穿袜子，痛快畅玩~\n\n\n寻宝专线-3号洞\n<VideoPlayer src=\"https://z.wiki/autoupload/2022-11-15/59e55417e3e644f499d1dc4b2edee7b0.爬出山洞---.mp4\" />\n\n儿童滑梯？\n<VideoPlayer src=\"https://z.wiki/autoupload/2022-11-15/f6652f746a574af383b59d46fdf5828a.儿童滑梯---.mp4\" />\n\n蹦床篮球？\n<VideoPlayer src=\"https://z.wiki/autoupload/2022-11-15/f8d09e10fa474bca8204e542f695efc8.篮球--.mp4\" />\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/80b2b6e8a8f349eea84c48014b64f08e.png\" />\n\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/e808f75f0c3d41af98bd251217728984.png\" />\n\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/e1ee2b878939466ba92ea8e57c5c2c7c.png\" />\n\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/a54a6f5a355248eba32fa3a6813e67d4.png\" />\n\n\n偶遇几个小朋友，非要按气球怼我😅\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/554691f2332649adb9c8b48cb25b22c7.png\" />\n\n\n去儿童滑梯的路上\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/4af73a2920f845e8913fb78699788ccd.png\" />\n\n\n钻洞😂，真累，感觉和爬山有的一比，以后减肥不爬山了，来弹力猩球 🌚\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/7f33e3b269a0414eafe2fa934f27e662.png\" />\n\n\n价格也不贵，单人次卡平均每次一百多（三小时时长），看来以后得常来玩\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/14b4fbf5a64c479eb012908b10849000.png\" />\n\n\n\n# 弹力猩球简介\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/ea9778210a7e4dde8c5cdd325a6a4dc2.png\" />\n\n\n\n弹力猩球是一家室内综合运动中心，集潮流运动、休闲娱乐、餐饮、零售等为一体，其场馆占地约3000平，划分为运动主题探索区、派对团建区、零售周边区和亲子运动餐厅，其中运动主题探索区包括蹦床、攀爬、速滑、未来科技等六大主题。\n\n弹力猩球目前的运动娱乐产品库中拥有上百种项目，大部分项目是将传统体育项目进行了mini化和趣味化，品牌将根据具体选址进行挑选，每家会有20-30种项目。考虑到主要消费群体为年轻群体，70%的消费者为亲子家庭，因此场馆在项目选择上也更偏向于服务亲子人群，提供体育启蒙的场地，让儿童可以进行兴趣的选择和尝试，让家长可以陪伴孩子共同成长。\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/0d3286f1885147338e601e56810a71d4.png\" />\n\n\n目前，弹力猩球正在营业的门店分别为上海南翔印象城MEGA店、上海太阳宫店和北京斯普瑞斯奥莱店，全部为购物中心店。\n\n目前弹力猩球单家门店能同时接待400人，单月人流量约1.5万人次，年营收约3000万，每家门店均已实现单店盈利，2019年和2020年全年公司均已实现盈利。在已有门店的基础上，弹力猩球正计划在一线和新一线城市加快开店速度，预计到明年底将开业15家门店。基于弹力猩球的多模块体育运动，品牌也将计划开设专项卫星小店，形成“一站式大店+专项小店”的模式。\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/2ff64d08f3fa49529487bc9257107156.png\" />\n\n\n<ImgView title=\"弹力猩球\" url=\"https://z.wiki/images/20220212/6c69eebcb02142528982f5757dc09938.gif\" />\n\n
life/bombomspace
path is https://playground.z.wiki/comment/list?path=/life/tianjin.html
面朝大海\n\n<ImgView title=\"面向大海\" url=\"https://0.z.wiki/autoupload/20230811/jmH5.2875X2878-IMG_4900.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://5.z.wiki/autoupload/20230811/aiQu.2880X3840-IMG_4893.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://0.z.wiki/autoupload/20230811/8ng2.3425X2880-IMG_4905.jpg\" />\n\n<ImgView title=\"面向大海\" url=\"https://7.z.wiki/autoupload/20230811/HWjq.3024X4032-IMG_4914.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://7.z.wiki/autoupload/20230811/Kslj.3024X4032-IMG_4917.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://9.z.wiki/autoupload/20230811/QFA3.3840X2880-IMG_4929.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://5.z.wiki/autoupload/20230811/3MYe.3124X2878-IMG_4932.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://6.z.wiki/autoupload/20230811/0uEU.3596X2652-IMG_4935.jpg\" />\n\n<ImgView title=\"面向大海\" url=\"https://8.z.wiki/autoupload/20230811/3DMs.3586X2578-IMG_4989.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://2.z.wiki/autoupload/20230811/ECPJ.1356X1535-IMG_5073.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://8.z.wiki/autoupload/20230811/wwMO.2661X1439-IMG_5074.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://8.z.wiki/autoupload/20230811/st8V.3562X2475-IMG_5075.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://5.z.wiki/autoupload/20230811/MFp7.3692X2771-IMG_5076.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://0.z.wiki/autoupload/20230811/Rzjt.3836X2880-IMG_5077.JPG\" />\n\n<ImgView title=\"面向大海\" url=\"https://7.z.wiki/autoupload/20230811/n4se.4096X3276-IMG_5078.JPG\" />\n: \"回复:\"美女单身吗\"\n\n------------\n\n不单身，9个娃的妈妈了\",\n: \"美女单身吗\",\n: \"test\",\n: \"1\",\n: \"Nice!\",\n: \"<p> <img alt=\"punch\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/86/2018new_quantou_thumb.png\"/> <img alt=\"punch\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/86/2018new_quantou_thumb.png\"/> <img alt=\"punch\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/86/2018new_quantou_thumb.png\"/> <img alt=\"punch\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/86/2018new_quantou_thumb.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/></p>\n\",\n: \"<p><a class=\"at\" href=\"#6264bdb11c11246b6f352cd7\">@三月 </a> , 😄😄</p>\n\",\n: \"<p>三月去比较好</p>\n\",\n: \"<p>Looks amazing!</p>\n\",\n: \"<p>厉害</p>\n\",\n: \"<p>什么</p>\n\",\n: \"<p>请问这是哪儿</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187fd23d8fdcf4cc72764b8\">@事实上 </a> , 888</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187fce442a99e0d68ad4da3\">@666 </a> , 777</p>\n\",\n: \"<p>😂😂</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187fce442a99e0d68ad4da3\">@666 </a> , 777</p>\n\",\n: \"<p>Just go go</p>\n\",\n: \"<p>尺寸规格高</p>\n\",\n: \"<p>比比皆是</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187f2a4d8fdcf4cc7275eb6\">@Anonymous </a> , asdfasdfasdf</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187f25242a99e0d68ad47a4\">@Anonymous </a> , 😂</p>\n\",\n: \"<p><a class=\"at\" href=\"#6187f25242a99e0d68ad47a4\">@Anonymous </a> , 😂</p>\n\",\n: \"<p>下雪啦~</p>\n\",
life/tianjin
path is https://playground.z.wiki/comment/list?path=/life/food.html
---\nmeta:\n - name: description\n content: 敖武的美食之家\n - name: keywords\n content: 敖武,美食,鲜肉包,炒饭,排骨,肉饼,红烧牛肉,意面,酱肉包,抄手,锅巴土豆,水煮肉,猪蹄儿\n---\n# 美食之家\n\n# 2021年的美食\n\n### 鲜肉包的肉馅\n<ImgView title=\"鲜肉包的肉馅\" url=\"https://1.z.wiki/images/20211115/b5eedd312dd14327bd8bbe5b3731dfd5.png\" />\n\n### 炒饭\n<ImgView title=\"炒饭\" url=\"https://2.z.wiki/images/20211115/349a8c4c0b2943348dcc1889894edd63.png\" />\n\n### 鲜肉包\n<ImgView title=\"鲜肉包\" url=\"https://4.z.wiki/images/20211115/3603e6bf0d5f4b00b0f91907b88f4878.png\" />\n\n<ImgView title=\"鲜肉包\" url=\"https://1.z.wiki/images/20211115/8c91d102052e4d2280e64ffe0b8b13fc.png\" />\n\n\n<ImgView title=\"鲜肉包\" url=\"https://4.z.wiki/images/20211115/f6e53308df394601814a80bfa083f863.png\" />\n\n### 红烧土豆排骨 \n<ImgView title=\"红烧土豆排骨\" url=\"https://8.z.wiki/images/20220527/7465e0686155470a8c36859548774d5f.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n### 五福家庭餐\n<ImgView title=\"五福家庭餐\" url=\"https://2.z.wiki/images/20220527/b55d1426a130495a803c41b34cbac356.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n\n### 韭菜盒子\n<ImgView title=\"韭菜盒子\" url=\"https://4.z.wiki/images/20211115/feec2a95768240db9af62e61f9126806.png\" />\n\n### 肉饼\n<ImgView title=\"肉饼\" url=\"https://1.z.wiki/images/20220527/eccb310476634de6900a61d3dda3a77e.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n### 红烧牛肉\n<ImgView title=\"红烧牛肉\" url=\"https://4.z.wiki/images/20220525/e15842ad0ef442c3bef0137ca8f2663f.png\" />\n\n<ImgView title=\"红烧牛肉\" url=\"https://4.z.wiki/images/20220525/1d1da3e67ffb44f08891071581dd61fb.png\" />\n\n### 水煮鱼\n<ImgView title=\"水煮鱼\" url=\"https://2.z.wiki/images/20220527/f8f65a0485814e31999f01aa8e3357cb.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n\n<ImgView title=\"水煮鱼\" url=\"https://2.z.wiki/images/20211115/737a463fd47f4cde9980137cfe5e2e21.png\" />\n\n\n<ImgView title=\"水煮鱼\" url=\"https://2.z.wiki/images/20211115/4743a5bc7a0f4442afcd08f8e81ac847.png\" />\n\n### 卤猪蹄\n<ImgView title=\"卤猪蹄\" url=\"https://4.z.wiki/images/20211115/0a8c4079982544b6964a5cf7b9d39476.png\" />\n\n### 抄手\n<ImgView title=\"抄手\" url=\"https://1.z.wiki/images/20211115/e52d6f60fff24f3fa7b1f26922786fe9.png\" />\n\n### 羊肉汤\n<ImgView title=\"羊肉汤\" url=\"https://1.z.wiki/images/20211115/648bf09933cc428f817fa06bba8fcf34.png\" />\n\n\n# 2022年的美食\n\n### 锅巴土豆\n<ImgView title=\"锅巴土豆\" url=\"https://1.z.wiki/images/20220213/3b6e7d8755684b5ab8c63bc45854d73a.png\" />\n\n### 咖喱鸡 && others\n<ImgView title=\"咖喱鸡 && others\" url=\"https://1.z.wiki/images/20220213/42a981907a6744c38155dc5357b31cc2.png\" />\n\n### 酱肉包\n<ImgView title=\"酱肉包\" url=\"https://4.z.wiki/images/20220213/eef59dfcbe32498faa3d4ae3860f50fa.png\" />\n\n<ImgView title=\"酱肉包\" url=\"https://2.z.wiki/images/20220213/e70995bb005549c2b1797eaec13a7191.png\" />\n\n### 意面\n\n<ImgView title=\"意面\" url=\"https://9.z.wiki/images/20220219/e509255f14384acc81f72576d69821e5.png\" />\n: \"<p>没想到博主还是个大厨呢</p>\n\",\n: \"<p>愣是给看饿了</p>\n\",\n: \"<p>想吃</p>\n\",\n: \"<p>博主手艺不错👍</p>\n\",\n: \"<p>看着不错啊</p>\n\",\n: \"<p>美食之家啊</p>\n\",
life/food
path is https://playground.z.wiki/comment/list?path=/life/christmas-of-2022.html
2022年圣诞节\n\n### 玲娜贝儿-星黛露\n\n<ImgView title=\"圣诞节\" url=\"https://1.z.wiki/autoupload/20221225/6qEG.4032X3024-IMG_1726.JPG\" />\n\n<ImgView title=\"圣诞节\" url=\"https://1.z.wiki/autoupload/20221225/1eqm.3840X2880-IMG_1797.JPG\" />\n\n<ImgView title=\"圣诞节\" url=\"https://1.z.wiki/autoupload/20221225/nQPI.2977X2194-IMG_1805.JPG\" />\n\n### 金汤肥牛\n\n<ImgView title=\"圣诞节\" url=\"https://1.z.wiki/autoupload/20221225/PbKX.4032X3024-IMG_1809.JPG\" />\n\n<ImgView title=\"圣诞节\" url=\"https://1.z.wiki/autoupload/20221225/5OEa.3024X4032-IMG_1811.JPG\" />\n\n### 好柿连连\n\n<ImgView title=\"圣诞节\" url=\"https://2.z.wiki/autoupload/20221225/N8La.3024X4032-IMG_1785.JPG\" />\n\n### 东小口城市休闲公园\n\n<ImgView title=\"圣诞节\" url=\"https://2.z.wiki/autoupload/20221225/UOW7.4032X3024-IMG_1803.JPG\" />: \"好吃好看好乖\",
life/christmas-of-2022
path is https://playground.z.wiki/comment/list?path=/life/friendship.html
交情如何才能长远\n\n前一阵子有朋友提到了这个问题，我也思考了一些，感觉交情要想长远得满足以下几点或一点：\n\n### 兴趣爱好\n\n<ImgView title=\"交情\" url=\"https://z.wiki/autoupload/20230122/ulcF.511X700-image.png\" />\n\n\n工作上的忙碌导致生活上的兴趣不会很多，一但有这种聊得来、玩的到一起的朋友往往可以不频繁但能长远的朋友。\n\n周末一块钓鱼、一块爬山、一块锻炼等等。\n\n### 利益关系\n\n<ImgView title=\"交情\" url=\"https://z.wiki/autoupload/20230122/Zjy5.656X820-image.png\" />\n\n\n> 张口闭口都是利益确实显示人太功利，然而“穷在闹市无人问，富在深山有远亲”却有万千真实的案例。\n\n工作后往往不想上学时那么纯粹，成年人是讲利益的，工作就是为了挣钱，而且往往应付工作就很疲惫了，没有些利益关系很难天天联系，\n\n比如：\n\n1. 工作上需要相互支持\n2. 生活上需要相互照顾\n\n### 亲情关系\n\n<ImgView title=\"交情\" url=\"https://z.wiki/autoupload/20230122/XD7m.367X550-image.png\" />\n\n\n亲情最难割舍，也无法割舍，平时也会相互照应，这种没有什么深仇大恨也都能长久下去，即使平时没有联系有事儿了一个电话也都能聚到一起。\n\n### 深刻的交情\n\n<ImgView title=\"交情\" url=\"https://z.wiki/autoupload/20230122/pYle.643X1200-image.png\" />\n\n\n如同上学时最要好的朋友，可能在不同的城市，平时联系少，但会互相挂念、互相惦记。\n\n### 共同的圈子\n\n<ImgView title=\"交情\" url=\"https://z.wiki/autoupload/20230122/zz0W.480X480-image.png\" />\n\n\n拥有共同的圈子也容易友谊地久天长，不然一群人聚在一起，你聊你的别墅、他聊他的仕途、我聊我的网贷，\n除了泛黄的曾经的共同记忆其他的真聊不到一起。
life/friendship
path is https://playground.z.wiki/comment/list?path=/life/dayidu.html
---\nmeta:\n - name: description\n content: 北京元大都遗址公园\n - name: keywords\n content: 北京,元大都,遗址公园,赏花\n---\n# 元大都遗址公园\n\n### 出发看花\n\n元大都城垣遗址公园内有海棠花溪，种植了西府海棠、贴梗海棠、金星海棠、垂丝海棠等。\n公园的海棠花节是与香山植物园的桃花节、玉渊潭的樱花节并称的北京春天的三大花节之一。\n\n临渊羡鱼不如退而结网，出发赏花~\n\n<ImgView title=\"元大都遗址公园\" url=\"https://9.z.wiki/autoupload/2022-09-10/b5234fbd424c4634bd68da042e7f11e7.image.png\" />\n\n### 遗址公园入口\n\n刚入公园就看到公园的介绍\n\n> 元大都城垣始建于 1267 年...，元大都城垣遗址公园，西起京藏高速，东至京城高速...。\n\n<ImgView title=\"元大都城垣\" url=\"https://9.z.wiki/images/20220417/a31fa9c0439748329093a296747b2774.png\" />\n\n### 赏花\n\n不太走运，今天天气有点阴，另外花期将过（还有我其烂无比的拍照技术+审美）\n\n<ImgView title=\"赏花\" url=\"https://9.z.wiki/images/20220417/ed457ea07f104e9597abcc7de6a8774a.png\" />\n\n<ImgView title=\"赏花\" url=\"https://9.z.wiki/images/20220417/b42023e06afc49a29fa6c8c50b3725a1.png\" />\n\n<ImgView title=\"赏花\" url=\"https://9.z.wiki/images/20220417/6e2b479ed2184a02bfb0977f2bcfba8b.png\" />\n\n<ImgView title=\"赏花\" url=\"https://8.z.wiki/images/20220417/d05c1bcffe8a4c9189e2120454883661.png\" />\n\n<ImgView title=\"赏花\" url=\"https://8.z.wiki/images/20220417/e35c47501e3d42d0aee33833f6e0215a.png\" />\n\n<ImgView title=\"赏花\" url=\"https://8.z.wiki/images/20220417/2935566c861a4d09a10cf1e513784352.png\" />\n\n<ImgView title=\"赏花\" url=\"https://8.z.wiki/images/20220417/81c3513665754a2cb715f24cfc2b7fed.png\" />\n\n<ImgView title=\"赏花\" url=\"https://7.z.wiki/images/20220417/4fca6ac834454c42ac0bbb791610c3b4.png\" />\n\n<ImgView title=\"赏花\" url=\"https://7.z.wiki/images/20220417/1c7db4fe2bc7410ca721238552f39bd8.png\" />\n\n<ImgView title=\"赏花\" url=\"https://7.z.wiki/images/20220417/f7acb79841e5494fbe26d829acc5cddd.png\" />\n\n<ImgView title=\"赏花\" url=\"https://7.z.wiki/images/20220417/95b0900a1308447aa22a648b3af1859a.png\" />\n\n<ImgView title=\"赏花\" url=\"https://6.z.wiki/images/20220417/d6b0c1b7f25e473fa327a6bff1f75381.png\" />\n\n### 遗址\n\n循着路标，前往\"元大都城石碑\"\n\n<ImgView title=\"元大都遗址\" url=\"https://6.z.wiki/images/20220417/c9bf460b6889412fb55e64f9ecf7c4c8.png\" />\n\n城石碑算是公园内为数不多的遗迹了，也就从这些遗迹能感觉到遗址公园里的一点点\"遗址\"感，毕竟700多年过去了，能保留下一些就很幸运了。\n\n<ImgView title=\"元大都遗址\" url=\"https://6.z.wiki/images/20220417/afe3cc7ac11d4fcb981afe9391392c34.png\" />\n\n第一眼看到石碑，我就好奇上面会不会有文字？有的话时什么文字呢？毕竟是蒙古人的都城。\n\n<ImgView title=\"元大都遗址\" url=\"https://6.z.wiki/images/20220417/ffb039decd1e47a8ae41abf4a1ceede4.png\" />\n\n果然，还真有文字，才应该是蒙文+汉文。（不过和故宫里面牌匾上的满文有点像，满文是参考蒙文创造的）\n\n不远处的角落里还有带有\"大元盛世\"的柱子。\n\n<ImgView title=\"元大都遗址\" url=\"https://5.z.wiki/images/20220417/96fb2587f7294f3aae82bd570876ad2c.png\" />\n\n元大都城布局图\n\n<ImgView title=\"元大都遗址\" url=\"https://5.z.wiki/images/20220417/6ab58d57c3b94d48bdf970ac086ff8ab.png\" />\n\n### 土城\n\n\"北土城\"、\"西土城\"中的\"土城\"就是下面这些\"土城\"（土城墙遗址）\n\n<ImgView title=\"土城\" url=\"https://5.z.wiki/images/20220417/72b1478888354146bb8695400317f687.png\" />\n\n<ImgView title=\"土城\" url=\"https://5.z.wiki/images/20220417/aba867aa006b4a2d9af00274709a1519.png\" />\n\n<ImgView title=\"土城\" url=\"https://5.z.wiki/images/20220417/e99fe9c942154fcf87370b4996c0e8ac.png\" />\n\n<ImgView title=\"土城\" url=\"https://4.z.wiki/images/20220417/ab8a9481055d41218c724745bf578169.png\" />\n\n\"土城\"最初为元大都的北城墙，朱元璋攻克元大都后，北城墙逐步废弃但并未拆除，至今已变为一座座土山、土墙，既：土城。\n\n### 好奇\n\n好奇这些土城墙该如何保护呢？常年的风水雨淋难道不会像南城墙一样沦为土丘、逐渐消失吗？🤔\n\n<TheEnd />\n: \"北京的公园挺多的啊\",
life/dayidu
path is https://playground.z.wiki/comment/list?path=/life/aosen.html
---\nmeta:\n - name: description\n content: 北京 奥林匹克森林公园 鸳鸯\n - name: keywords\n content: 北京 奥林匹克森林公园 鸳鸯\n---\n# 奥林匹克森林公园\n\n\n<ImgPlayer :imgs=\"[\n 'https://z.wiki/autoupload/2022-11-05/94d3d8a6c8194b7ebf9c75ef95bb432f.IMG_8925.HEIC.jpg',\n 'https://z.wiki/autoupload/2022-11-05/2c534f5540ec4e5eaa3a4ae0d1b32d68.IMG_8910.HEIC.jpg',\n 'https://z.wiki/autoupload/2022-11-05/58b6f46c8cd84568b42449160c212481.IMG_8909.HEIC.jpg',\n 'https://z.wiki/autoupload/2022-11-05/f54b9120b11c4b7bb584b9969933416a.IMG_8908.HEIC.jpg',\n 'https://z.wiki/autoupload/2022-11-05/a5ab31b0a4664d139a6eebff4e7c17e3.IMG_8907.HEIC.jpg',\n 'https://z.wiki/autoupload/2022-11-05/23f1dea1a3044161b888da74b82005fa.IMG_8906.HEIC.jpg',\n]\" />\n: \"这鸭子拍得好清晰啊\",\n: \"\",\n: \"好玩儿吗\",
life/aosen
path is https://playground.z.wiki/comment/list?path=/life/covid-19-positive.html
这就阳了？\n\n周五晚上有点渴，回家后喝了不少水，周六感觉有点热，测了体温不算发烧（`37.2℃`），周六晚上就不行了，起来拉肚子好几次😌，今天发烧（`38℃`以上），哎\n\n找我姐借了几个抗原试剂，这是弱阳性？🤔，第二条线特别不明显哎\n\n<ImgView title=\"抗原弱阳性？\" url=\"https://3.z.wiki/autoupload/20221211/HwCu.IMG_9100.HEIC.jpg\" />\n\n果然，阳了。\n\n<ImgView title=\"COVID-19 阳性\" url=\"https://3.z.wiki/autoupload/20221212/BlZJ.IMG_9101.HEIC.jpg\" />
life/covid-19-positive
path is https://playground.z.wiki/comment/list?path=/life/moha.html
---\nmeta:\n - name: description\n content: 苟利国家生死以\n - name: keywords\n content: 苟利国家生死以\n---\n# 苟利国家生死以\n\n苟利国家生死以 岂因祸福避趋之\n\n<ImgView title=\"苟利国家生死以 岂因祸福避趋之\" url=\"https://z.wiki/autoupload/20221201/nqk5.230X220-image.png\" />: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/smile.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/smile.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/desire.png\" /> \",\n: \"回复:&quot;图片挂了&quot;\n\n------------\n\n是的 你说的对。\",\n: \"\",\n: \"\",\n: \"回复:\"回复:\"回复:\"回复:\"回复:\"回复:\"图片挂了\"\n\n------------\n\n我知道\"\n\n------------\n\n哦\"\n\n------------\n\n\n哦😲\"\n\n------------\n\nu诶额呵呵呵呵\"\n\n------------\n\n额家电及弟弟的家电家\"\n\n------------\n\n宝贵资源也就越来越重要啊这\",\n: \"回复:\"回复:\"回复:\"回复:\"回复:\"图片挂了\"\n\n------------\n\n我知道\"\n\n------------\n\n哦\"\n\n------------\n\n\n哦😲\"\n\n------------\n\nu诶额呵呵呵呵\"\n\n------------\n\n额家电及弟弟的家电家\",\n: \"回复:\"回复:\"回复:\"回复:\"图片挂了\"\n\n------------\n\n我知道\"\n\n------------\n\n哦\"\n\n------------\n\n\n哦😲\"\n\n------------\n\nu诶额呵呵呵呵\",\n: \"回复:\"回复:\"回复:\"图片挂了\"\n\n------------\n\n我知道\"\n\n------------\n\n哦\"\n\n------------\n\n\n哦😲\",\n: \"回复:\"回复:\"图片挂了\"\n\n------------\n\n我知道\"\n\n------------\n\n哦\",\n: \"回复:\"图片挂了\"\n\n------------\n\n我知道\",\n: \"图片挂了\",
life/moha
path is https://playground.z.wiki/comment/list?path=/life/2024-new-year.html
2024年春节\n\n大年初一前往[峨眉山](https://baike.baidu.com/item/%E5%B3%A8%E7%9C%89%E5%B1%B1/2676)。\n\n<ImgView title=\"峨眉山\" url=\"https://6.z.wiki/autoupload/20240211/HaA0.IMG_8309.heic.jpg\" />\n\n<ImgView title=\"峨眉山\" url=\"https://2.z.wiki/autoupload/20240211/AB9B.IMG_8310.heic.jpg\" />\n\n<ImgView title=\"峨眉山\" url=\"https://1.z.wiki/autoupload/20240211/qlzF.3024X4032-IMG_8307.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://5.z.wiki/autoupload/20240211/QHvB.3024X4032-IMG_8289.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://5.z.wiki/autoupload/20240211/QhC8.3024X4032-IMG_8268.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://4.z.wiki/autoupload/20240211/iwK1.3024X4032-IMG_8241.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://9.z.wiki/autoupload/20240211/TdNZ.IMG_8317.heic.jpg\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://1.z.wiki/autoupload/20240211/8wM6.3024X4032-IMG_8316.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://6.z.wiki/autoupload/20240211/UC5s.3024X4032-IMG_8315.JPG\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://1.z.wiki/autoupload/20240211/jEby.3135X2820-IMG_8314.jpg\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://8.z.wiki/autoupload/20240211/r01Q.IMG_8313.HEIC.jpg\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://9.z.wiki/autoupload/20240211/3hl4.1924X1440-image.png\" />\n\n\n<ImgView title=\"峨眉山\" url=\"https://4.z.wiki/autoupload/20240211/QJzt.4032X3024-IMG_8311.JPG\" />\n\n\n\n\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/amorousness.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/amorousness.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> \",\n: \"风景真美\",\n: \"🙄🙄🙄🙄🙄🙄🙄🙄🙄\",\n: \"真美🤩\",\n: \"可惜没看到峨眉山的猴子🐒\",
life/2024-new-year
path is https://playground.z.wiki/comment/list?path=/life/snow.html
---\nmeta:\n - name: description\n content: 在望京堆雪球\n - name: keywords\n content: 在望京堆雪球\ntags: [\"敖武\", \"大雪\", \"堆雪球\"]\n---\n# 大雪球\n\n\n堆了一个大雪球，直径一米多😄\n\n<ImgView title=\"敖武和大雪球\" url=\"https://1.z.wiki/images/20211115/2e459a4752f748349c069c401da7431c.png\" />\n\n\n<ImgView title=\"敖武和大雪球\" url=\"https://2.z.wiki/images/20211115/a644329c6c714c35af481426615f07d6.png\" />: \"回复:\"<p>第一个雪球好大 <img alt=\"surprise \" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/49/2018new_chijing_org.png\"/></p>\n\"\n\n------------\n\n是啊。直径一米多\",\n: \"<p>第一个雪球好大 <img alt=\"surprise \" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/49/2018new_chijing_org.png\"/></p>\n\",\n: \"<p> <img alt=\"haha\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/8f/2018new_haha_thumb.png\"/>y <img alt=\"haha\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/8f/2018new_haha_thumb.png\"/>😂 <img alt=\"kiss\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/2c/2018new_qinqin_thumb.png\"/></p>\n\",
life/snow
path is https://playground.z.wiki/comment/list?path=/life/zy-smooth4.html
重见天日的稳定器\n\n雪藏两年的稳定器，在今天终于再次受到我的宠幸了🤗\n\n曾经以为再也不会拿起的稳定器，打脸了\n\n<ImgView title=\"稳定期\" url=\"https://1.z.wiki/images/20220205/52b18a2ce0e94cdbb204fa11882210d5.gif\" />\n\n<ImgView title=\"稳定期\" url=\"https://2.z.wiki/images/20220205/53cfdc8e5ef6431eb3d7d14daa72a253.gif\" />\n\n\n今天突然发现，用这货拍一些延迟摄影还是不错的📸\n\n<ImgView title=\"稳定期\" url=\"https://1.z.wiki/images/20220205/b9eec1c7fb5d4bb68f02003114db3d62.gif\" />\n\n\n以下是稳定器本器的尊荣😼\n\n<ImgView title=\"稳定期\" url=\"https://2.z.wiki/images/20220205/9911a2b6eba9417f9b41a7bdbbd8a98d.png\" />\n\n\n明天晚上去前门大街体验体验~(*❦ω❦)\n\n\n# 夕阳西下的场景\n\n<VideoPlayer src=\"https://z.wiki/autoupload/2022-11-15/d738f36334cf4bebaf5a80c5e8126e39.asdfasdfasdf.mp4\" />\n\n<VideoPlayer src=\"https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/2022-11-15/79608fdb284e49a48989ae639e113198.the-setting-sun.mp4\" />\n\n哎，明天又要上班了\n\n<ImgView title=\"稳定期\" url=\"https://4.z.wiki/images/20220206/33083f05267d4440a202ed8e74cae0fa.gif\" />: \"又要上班了\",
life/zy-smooth4
path is https://playground.z.wiki/comment/list?path=/life/weight.html
近一个月的体重\n\n<PhoneSnapshot url=\"https://1.z.wiki/autoupload/20230924/yJhr.2688X1242-IMG_0872.PNG\" title=\"近一个月的体重\" alt=\"近一个月的体重\" />: \"回复:\"姑娘，没道理啊，我看你的身材不可能170斤啊， 应该是87.99斤吧？\"\n\n------------\n\n称坏了吧\",\n: \"称坏了吧\",\n: \"估计妹子称坏了\",\n: \"姑娘，没道理啊，我看你的身材不可能170斤啊， 应该是87.99斤吧？\",\n: \"姑娘，没道理啊，我看你的身材不可能170斤啊， 应该是87.99斤吧？\",
life/weight
path is https://playground.z.wiki/comment/list?path=/life/beijing-wildlife-park.html
---\nmeta:\n - name: description\n content: 北京野生动物园\n - name: keywords\n content: 北京野生动物园\n---\n# 北京野生动物园\n\n`2023`年元旦，和朋友自驾前往北京野生动物园，人生中第一次去野生动物园，尤其自驾游可以近距离接触动物😄😄\n\n### 卯时太阳\n\n<ImgView title=\"北京野生动物园\" url=\"https://1.z.wiki/autoupload/20230102/MfX8.3024X4032-IMG_1885%202.JPG\" />\n\n### 门口合照\n\n今天的阳光格外明媚\n\n<ImgView title=\"北京野生动物园\" url=\"https://2.z.wiki/autoupload/20230102/hG2v.3072X4096-IMG_2195.JPG\" />\n\n### 投喂猛兽\n\n`50`块钱买了一盒肉，做着猛兽区专车投喂猛兽。\n\n<ImgView title=\"北京野生动物园\" url=\"https://3.z.wiki/autoupload/20230102/KjtO.4032X3024-IMG_2183.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://4.z.wiki/autoupload/20230102/JNW4.3024X4032-IMG_2202%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://5.z.wiki/autoupload/20230102/9Nu4.3024X4032-IMG_2137%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://6.z.wiki/autoupload/20230102/LcTD.3024X4032-IMG_2165%202.JPG\" />\n\n### 近距离接触\n\n下次去一定自带一些青菜，景区卖的太贵了🤦🤦🤦\n\n<ImgView title=\"北京野生动物园\" url=\"https://7.z.wiki/autoupload/20230102/LQoa.3646X3008-IMG_2179.jpg\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://8.z.wiki/autoupload/20230102/kZi9.2777X3471-IMG_2175%202.jpg\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://9.z.wiki/autoupload/20230102/IJgn.3024X4032-IMG_2176%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://0.z.wiki/autoupload/20230102/kC6M.3024X4032-IMG_2182.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://1.z.wiki/autoupload/20230102/HDKu.3024X4032-IMG_2196%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://2.z.wiki/autoupload/20230102/jJmE.4032X3024-IMG_2197%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://3.z.wiki/autoupload/20230102/yTHE.4032X3024-IMG_2207.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://4.z.wiki/autoupload/20230102/wnYF.4032X3024-IMG_2211%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://5.z.wiki/autoupload/20230102/qimJ.3024X4032-IMG_1920.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://6.z.wiki/autoupload/20230102/tkb1.3024X4032-IMG_1944%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://7.z.wiki/autoupload/20230102/7bsp.3024X4032-IMG_1928%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://8.z.wiki/autoupload/20230102/DakS.3024X4032-IMG_2208%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://9.z.wiki/autoupload/20230102/E7Se.3024X4032-IMG_2099%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://0.z.wiki/autoupload/20230102/f8qg.3024X4032-IMG_1964%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://1.z.wiki/autoupload/20230102/e05U.3024X4032-IMG_2167%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://2.z.wiki/autoupload/20230102/iSTG.3024X4032-IMG_1947%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://3.z.wiki/autoupload/20230102/TxpO.IMG_2200.HEIC.jpg\" />\n\n### 自拍\n\n<ImgView title=\"北京野生动物园\" url=\"https://4.z.wiki/autoupload/20230102/d87K.2880X2880-IMG_2198%202.JPG\" />\n\n<ImgView title=\"北京野生动物园\" url=\"https://5.z.wiki/autoupload/20230102/ik7f.2784X3712-IMG_2201%202.JPG\" />\n\n### 游乐场\n\n<ImgView title=\"北京野生动物园\" url=\"https://6.z.wiki/autoupload/20230102/h4Xo.4032X3024-IMG_2188.JPG\" />\n: \"羡慕啦\",
life/beijing-wildlife-park
path is https://playground.z.wiki/comment/list?path=/life/bento.html
---\ntags: [\"午餐\", \"便当\", \"美食\"]\n---\n\n# 明日便当\n\n健康又营养的减肥餐\n\n<ImgView title=\"减肥餐\" url=\"https://2.z.wiki/images/20220301/6396f306e73847c1af914f762148922f.png\" />: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/think.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/think.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/greddy.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/greddy.png\" /> 好看好吃，羡慕\",\n: \"回复:\"<p>看着真好吃，请问哪家</p>\n\"\n\n------------\n\n自己做的\",\n: \"<p>想吃😋</p>\n\",\n: \"<p>看着真好吃，请问哪家</p>\n\",
life/bento
path is https://playground.z.wiki/comment/list?path=/life/chrome-keychain.html
chrome 与 keychain\n\n`Chrome`从`45`版本开始便无法将密码存储到`keychain`。\n\n<ImgView title=\"chrome与keychain\" url=\"https://1.z.wiki/autoupload/20230121/1vOq.313X421-image.png\" />\n\n自此我一直生活在某种痛苦中：\n我的一部分密码在`Google`的密码服务里面，\n一部分在苹果的服务里面，\n而且在国内访问谷歌又不方便，一但有紧急情况需要登录某系统的时候就只能通过电脑来操作。\n\n<ImgView title=\"chrome与keychain\" url=\"https://1.z.wiki/autoupload/20230121/DyIT.390X392-image.png\" />\n\n所以我很长一段时间都在使用`1password`来实现全平台密码共享。但是架不住`1password`收费太贵了，每月`2.99`美元。\n\n<ImgView title=\"chrome与keychain\" url=\"https://1.z.wiki/autoupload/20230121/ggy0.524X810-image.png\" />\n\n\n今天突然发现`safari`有从`Chrome`同步密码的功能，解决了我很大的痛苦:\n所有的密码我都可以很方便的通过`keychain`获取，无论是在电脑上、手机上、平板上。\n\n<ImgView title=\"chrome与keychain\" url=\"https://1.z.wiki/autoupload/20230121/ZoYZ.1012X1222-image.png\" />\n\n<ImgView title=\"chrome与keychain\" url=\"https://1.z.wiki/autoupload/20230121/ZHA5.498X966-image.png\" />
life/chrome-keychain
path is https://playground.z.wiki/comment/list?path=/life/flowercountry.html
---\nmeta:\n - name: description\n content: 欢乐谷半日游\n - name: keywords\n content: 北京,欢乐谷,游玩,观光,夏日\ntags: [\"欢乐谷\", \"北京\", \"夏日\"]\n---\n# 花花世界\n\n21年在欢乐谷\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/e9e8317f343c4280997e53e92b3e7364.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/765f8c3667d4423cb9c696cffdebf34c.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/05da6123aae346b2b8edc0a8b0f71385.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/7bb77609e0924ab9b4ec388bf4c5aea9.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://4.z.wiki/images/20211128/fa04fe5a9c7d48a096cf6e0439762b34.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/6c9b7d5cd6f34a87b5c530b0b6d33a01.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://1.z.wiki/images/20211128/361a53f279df444faa1652ad25efea39.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://2.z.wiki/images/20211128/c727cb5b1abb48feab5c4c40d79870ef.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://2.z.wiki/images/20211128/b45399cbeb1343cbbed83ab0a2c94a46.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://4.z.wiki/images/20211128/7e97dec87b6744dea003edbc377a6d84.png\" />\n\n\n<ImgView title=\"北京欢乐谷\" url=\"https://2.z.wiki/images/20211128/3c1f6e5f6c934dc88a3d487c9ae89af0.png\" />\n\n
life/flowercountry
path is https://playground.z.wiki/comment/list?path=/life/turtledove.html
喜遇斑鸠\n\n从西溪园区出来，往地铁口走，忽然看到路边一只小斑鸠\n\n<ImgView title=\"斑鸠\" url=\"https://2.z.wiki/autoupload/20231125/zi2V.2282X1712-image.png\" />\n\n<ImgView title=\"斑鸠\" url=\"https://2.z.wiki/autoupload/20231125/liP4.2282X1712-image.png\" />\n\n胆子真大，居然不害怕我\n\n<ImgView title=\"斑鸠\" url=\"https://2.z.wiki/autoupload/20231125/m44P.2282X1712-image.png\" />\n\n<ImgView title=\"斑鸠\" url=\"https://7.z.wiki/autoupload/20231125/ApX4.2282X1712-image.png\" />: \"回复:&quot;这么幸运吗？&quot;\n\n------------\n\n羡慕博主\",\n: \"回复:&quot;这么幸运吗？&quot;\n\n------------\n\n是的，就是这么幸运～\",\n: \"这么幸运吗？\",
life/turtledove
path is https://playground.z.wiki/comment/list?path=/life/feeling.html
握不住的感觉\n\n你平时会有那种握不住的感觉吗？\n\n就像你的爱情一样，一开始你以为很稳固，但是后来感觉对方比你进步快，越来越不同频了，你被落下去了，\n然后你就越来越愤怒，“他有了新朋友，有了新的成绩”，\n你全都很愤怒，一开始你有这种感觉，你也觉得很可笑，很不理性，但是后来越来越强烈，无法控制住自己，\n当你被这种愤怒和恐惧支配了之后，你会做出很多伤害这段关系的行为，不管是猜忌还是言语上的攻击，\n在本来良好的关系上戳了一个有一个伤口，最后再也回不去了。
life/feeling
path is https://playground.z.wiki/comment/list?path=/life/zhuhai.html
---\nmeta:\n - name: description\n content: 珠海 旅游 美女\n - name: keywords\n content: 珠海 旅游 美女\n---\n# 冬日暖暖的海边\n\n\n<ImgView title=\"珠海旅游\" url=\"https://6.z.wiki/autoupload/20240203/TNuR.47EA10A0-26DF-415D-A87A-0B403DFCB295.heic.jpg\" />\n\n<ImgView title=\"珠海旅游\" url=\"https://5.z.wiki/autoupload/20240203/oeWl.591CD2DA-7D04-45A9-A407-C8DEF7AE9B1C.heic.jpg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://3.z.wiki/autoupload/20240203/wULN.342654BF-8449-4CFB-99AE-9A2CD93ABDE9.heic.jpg\" />\n\n\n\n<ImgView title=\"珠海旅游\" url=\"https://4.z.wiki/autoupload/20240203/X0XR.4032X3024-CDFE56F8-25AC-4CC4-9784-53F62E0B9D84.jpeg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://7.z.wiki/autoupload/20240203/69ZO.3829X2878-F2004F26-0F26-478B-8DDC-5CA9744A9E1E.jpeg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://7.z.wiki/autoupload/20240203/O7D1.77EB1107-E27A-46F8-960F-306256C8CAFF.heic.jpg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://0.z.wiki/autoupload/20240203/0ivg.4032X3024-EDD4EB70-9B70-4021-B659-AF8295C6F4A4.jpeg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://5.z.wiki/autoupload/20240203/EMEy.2634X3785-195A93D6-96DC-41F1-89D2-BB5F220F90BD.jpeg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://5.z.wiki/autoupload/20240203/dyaf.3024X4032-879B0C13-FBA3-446C-8308-C07A40B86A6A.jpeg\" />\n\n\n<ImgView title=\"珠海旅游\" url=\"https://7.z.wiki/autoupload/20240203/Zebj.4032X3024-EDD4EB70-9B70-4021-B659-AF8295C6F4A4.jpeg\" />\n: \"😄\",
life/zhuhai
path is https://playground.z.wiki/comment/list?path=/life/index.html
这里是我的生活记录\n\n\n这里是生活相关记录，点击以下链接看详细内容吧(*❦ω❦)\n\n<LastPost :random=\"true\" prefix=\"/life\" :number=\"10\"/>\n\n[青岛之旅](/life/tsingtao.html)\n\n<ImgView title=\"青岛之旅\" url=\"https://1.z.wiki/images/20211117/b5a2c24586c04159a9ba0468d8ac2917.png\" />\n\n[健身环之初体验](/life/switchfitness.html)\n\n<ImgView title=\"健身环之初体验\" url=\"https://2.z.wiki/images/20211117/6ac15f3a27dc42039f5567b10fa151a3.png\" />\n\n\n[万圣节](/life/halloween.html)\n\n<ImgView title=\"万圣节\" url=\"https://4.z.wiki/images/20211117/4e601049387d4a9fbdbfb1b8f4e67a71.png\" />\n\n\n[大雪球](/life/snow.html)\n\n<ImgView title=\"大雪球\" url=\"https://3.z.wiki/images/20211117/2ab4074a25094e999adab9dcbde2e502.png\" />\n: \"我**能不能搜到这个评论\n\",\n: \"<p> <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",\n: \"<p> <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",\n: \"<p> <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",\n: \"<p> <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",
life/index
path is https://playground.z.wiki/comment/list?path=/life/playground.html
游乐园\n\n游乐园第一版上线啦，在线链接 [敖武的游乐园](https://playground.z.wiki/)\n\n<ImgView title=\"游乐园\" url=\"https://3.z.wiki/images/20220320/edcd158bc489438e8c37dc430de6083e.png\" />\n\n预览图：\n\n<ImgView title=\"游乐园\" url=\"https://3.z.wiki/autoupload/2022-05-02/88ed1478031a4ae9894289b25534e7d1.image.png\" />\n\n\n\n: \"有点意思\",
life/playground
path is https://playground.z.wiki/comment/list?path=/life/ai.html
---\nmeta:\n - name: description\n content: 敖武的 AI 助手\n - name: keywords\n content: 敖武的 AI 助手\ntags: [\"AI\", \"助手\", \"敖武\"]\n---\n\n# 敖武的 AI 助手\n\n<ImgView title=\"敖武的 AI 助手\" url=\"https://7.z.wiki/autoupload/20231209/pB7B.2688X1242-IMG_1280.PNG\" />\n\n关注 敖武的公众号 来体验以下吧🤣\n\n<ImgView title=\"敖武的 AI 助手\" url=\"https://1.z.wiki/autoupload/20231209/2Vsb.1164X1122-IMG_1279.JPG\" />: \"已关注\",\n: \"已关注\",\n: \"已关注\",\n: \"已关注\",\n: \"已关注。\",\n: \"已关注。\",
life/ai
path is https://playground.z.wiki/comment/list?path=/life/COVID-19.html
新冠第三年\n\n新冠疫情爆发的第三年了，北京每天上千例感染，而且政府要放开管制的样子了\n\n\n<ImgView title=\"北京疫情\" url=\"https://4.z.wiki/autoupload/20221207/r6EV.972X1170-IMG_9056.JPG\" />\n\n<ImgView title=\"北京疫情\" url=\"https://4.z.wiki/autoupload/20221207/9k8h.1080X1516-IMG_9055.JPG\" />\n
life/COVID-19
path is https://playground.z.wiki/comment/list?path=/life/the-tomb-sweeping-day.html
清明出游\n\n### 清明爬香山\n\n清明第二天，出发爬香山，\(^o^)/\n\n<ImgView title=\"清明爬香山\" url=\"https://9.z.wiki/images/20220404/73406f1d2b0842368b52b6d75ee7e0bf.png\" />\n\n\n下了地铁转成西郊线\n\n<ImgView title=\"清明爬香山\" url=\"https://9.z.wiki/images/20220404/554158de6a3b43fc965e12222925f3d1.png\" />\n\n<ImgView title=\"清明爬香山\" url=\"https://9.z.wiki/images/20220404/ada98fee81514e8c826e1a451b7fb9bc.png\" />\n\n\n天啦噜，为什么去香山的人这么多呢？\n\n<ImgView title=\"清明爬香山\" url=\"https://9.z.wiki/images/20220404/bd215ed8c744487890e7bb7f35677e8c.png\" />\n\n<ImgView title=\"清明爬香山\" url=\"https://9.z.wiki/images/20220404/23953d55461f4031898bf2cbad2ada93.png\" />\n\n根据我的 [降维理论](https://z.wiki/life/involution.html),香山人多我就去别的地方。机智如我🧐，用理论指导实践。\n\n<ImgView title=\"清明爬香山\" url=\"https://0.z.wiki/images/20220404/b68fd905022648578a900124fd2bc953.png\" />\n\n### 转战圆明园\n\n出发去圆明园~\n\n<ImgView title=\"转战圆明园\" url=\"https://0.z.wiki/images/20220404/e3dce0db34b9402984ed0d46264db5f9.png\" />\n\n果然，降维打击是对的🤩，圆明园人还不多。\n\n<ImgView title=\"转战圆明园\" url=\"https://0.z.wiki/images/20220404/510e70480683420c81d209ad2e73279e.png\" />\n\n曾经有\"万园之园\"之称的大型皇家园林，如今已面目全非。\n\n### 偶遇黑天鹅\n\n<ImgView title=\"偶遇黑天鹅\" url=\"https://0.z.wiki/images/20220404/381402601c3649c9808591ffdd00bcb8.png\" />\n\n<ImgView title=\"偶遇黑天鹅\" url=\"https://7.z.wiki/images/20220404/62f8da9a8e254bc7a0df74cde32f43be.png\" />\n\n<ImgView title=\"偶遇黑天鹅\" url=\"https://7.z.wiki/images/20220404/cb9b0e2c4b5d44d69f118f75938676cf.png\" />\n\n（貌似我这破手机该换了😓）\n\n### 西洋楼遗址\n\n曾在课本上见过的。\n\n英法联军火烧圆明园时，中式建筑由于木质材质的原因，全部损毁，西洋楼由于大多使用石柱材质，部分得以保留，但长期的抢掠盗窃（木劫、石劫），导致如今仅有部分断壁残垣。\n\n\n\n<ImgView title=\"西洋楼遗址\" url=\"https://7.z.wiki/images/20220404/186e449ca43040cfa8a3939ebfb93066.png\" />\n\n\n
life/the-tomb-sweeping-day
path is https://playground.z.wiki/comment/list?path=/life/zelda.html
---\nmeta:\n - name: description\n content: 塞尔达传奇 旷野之息 塞尔达公主\n - name: keywords\n content: 塞尔达传奇 旷野之息 塞尔达公主\n---\n# 塞尔达公主\n\n<ImgView title=\"塞尔达公主\" url=\"https://1.z.wiki/autoupload/20230727/1sm6.1544X2750-image.png\" />: \"可爱！\",
life/zelda
path is https://playground.z.wiki/comment/list?path=/life/thatgirl.html
---\nmeta:\n - name: description\n content: 长在四川现居北京的小美女\n - name: keywords\n content: 长在四川现居北京的小美女\ntags: [\"四川\", \"雅安\", \"美女\", \"北京\"]\n---\n# 有脾气的二货\n\n这个有脾气的二货\n\n<ImgView title=\"小美女\" url=\"https://9.z.wiki/images/20211117/0cb0c9fa0b484145b883a8781ecdf9c1.png\" />\n\n<ImgView title=\"小美女\" url=\"https://9.z.wiki/images/20211117/176d60855ed54860b208a01d1ccba3ea.png\" />\n\n<ImgView title=\"小美女\" url=\"https://9.z.wiki/images/20211117/4e02f70668dc418fb69ba3aa7289a5c4.png\" />\n\n<ImgView title=\"小美女\" url=\"https://9.z.wiki/images/20211117/7f046c2d601b49f587e7dc9fa81c173a.png\" />\n\n<ImgView title=\"小美女\" url=\"https://4.z.wiki/images/20211117/8ddf87a9750344d494532dc760bd8c22.png\" />\n\n\n: \"<p>Beautiful 😍 </p>\n\",\n: \"<p>妹妹挺好看啊 <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/></p>\n\",
life/thatgirl
path is https://playground.z.wiki/comment/list?path=/life/sea.html
我和大海\n\n<ImgWithTitle :img=\"{url: 'https://z.wiki/images/20211115/4b7a6d9eaf484b0fb8a37f7108a7c503.png', title: '我和大海', desc: '我和大海的合影', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n<ImgWithTitle :img=\"{url: 'https://z.wiki/images/20211115/061ca814483748e69d34db89f2223237.png', title: '我和沙滩', desc: '踩沙滩啊踩沙滩', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://z.wiki/images/20211115/507b01ecf6244ad1900215c53edd8e2e.png', title: '我和沙滩', desc: '踩沙滩啊踩沙滩', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://z.wiki/images/20211115/48d6639c2f184883aeedaff9796b1116.png', title: '我和岩石', desc: '坐在岩石上', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://4.z.wiki/images/20211115/987167155d294809a7385169d5cd1b9c.png', title: '我和军舰', desc: '坐船去看军舰', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://5.z.wiki/images/20211115/9ca53ec475dd489c833c85ffd6562436.png', title: '我和战斗机', desc: '在船上看战斗机', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://6.z.wiki/images/20211115/3fd2b48af19d43a4ad8b140d6f0ad563.png', title: '我和沙滩', desc: '踩沙滩啊踩沙滩', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://7.z.wiki/images/20211115/37f71893a3ef4393a130391a0e205db2.png', title: '大海它自己', desc: '大海它自己', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://8.z.wiki/images/20211115/e76bdd73eca14ab284b030185af6770a.png', title: '我和岩石', desc: '坐在岩石上', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n\n<ImgWithTitle :img=\"{url: 'https://9.z.wiki/images/20211115/62d77799c21d424b8a95f0b2d1cea100.png', title: '我和沙滩', desc: '踩沙滩啊踩沙滩', bgColor: 'rgb(186 186 186 / 83%)'}\" />\n<br /> <br />\n\n: \"回复:\"<p>小姐姐可以给个联系方式吗</p>\n\"\n\n------------\n\n166妖977九四零4\",\n: \"回复:\"<p>美女哪个学校的</p>\n\"\n\n------------\n\n家里蹲大学的\",\n: \"<p>美女哪个学校的</p>\n\",\n: \"<p>博主这是哪里</p>\n\",\n: \"<p>博主加个v呀</p>\n\",\n: \"<p>小姐姐可以给个联系方式吗</p>\n\",
life/sea
path is https://playground.z.wiki/comment/list?path=/life/da-wangjing-gongyuan.html
---\nmeta:\n - name: description\n content: 北京大望京公园游玩\n - name: keywords\n content: 北京,大望京,公园,观光,游玩\ntags: [\"大望京公园\", \"北京\", \"夏日\", \"朝阳区\"]\n---\n\n# 大望京公园\n\n大望京公园半日游\n\n<ImgView title=\"小雏菊\" url=\"https://z.wiki/images/20220612/ecba6dc96c1342caa1042f9096068ac5.jpg\" />\n\n如意湖\n\n<ImgView title=\"如意湖\" url=\"https://z.wiki/images/20220612/d2688853bb2941edba82105220c3007f.jpg\" />\n\n<ImgView title=\"如意湖的位置\" url=\"https://z.wiki/images/20220612/da1a5feb81cd4154ac14401132502029.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n<ImgView title=\"荷花\" url=\"https://z.wiki/images/20220612/e728aa20ef2940ec8e18aa557056c242.jpg\" />\n\n<ImgView title=\"草坪\" url=\"https://4.z.wiki/images/20220612/09000d53987f4e4087217d489f489a77.jpg\" />\n\n<ImgView title=\"傻姑\" url=\"https://z.wiki/images/20220612/db2be3faafb94478a9126b2010abe980.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://1.z.wiki/images/20220612/6e97537393e54981af0899b3c9dfb33f.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://2.z.wiki/images/20220612/5bb69e4f47234ba2b792aa8af4ffd3e7.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://3.z.wiki/images/20220612/5f2ad1c6c2b6443e9e8adcfd4d7090ad.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://4.z.wiki/images/20220612/ecea8256f93541d0945780002a2f3f48.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://5.z.wiki/images/20220612/b332a8ad525441f0b3574177cb5478a1.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://6.z.wiki/images/20220612/d7ddd2219e394003bc657b08639a227a.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://8.z.wiki/images/20220612/af1e231d70534bca84c6bb2a4e1d3367.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://0.z.wiki/images/20220612/9d89b816e2034fd49cccaf28192bce99.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://4.z.wiki/images/20220612/142b9734943f4bbe932ec430315852a0.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://1.z.wiki/images/20220612/50d302357b214b828b0fc7259ebbcd8f.jpg\" />\n\n<ImgView title=\"大望京公园\" url=\"https://2.z.wiki/images/20220612/687047281e7d49359d6a87e5e805c7f4.jpg\" />\n\n### 月季花\n\n月季花, 被称为花中皇后，又称“月月红”，是常绿、半常绿低矮灌木，四季开花﹐一般为红色﹐或粉色、偶有白色和黄色﹐可作为观赏植物，也可作为药用植物，亦称月季。有三个自然变种，现代月季花型多样，有单瓣和重瓣，还有高心卷边等优美花型；其色彩艳丽、丰富，不仅有红、粉、黄、白等单色，还有混色、银边等品种；多数品种有芳香。月季的品种繁多，世界上已有近万种，中国也有千种以上。\n\n<ImgView title=\"大望京公园\" url=\"https://3.z.wiki/images/20220612/395096fdc4d74117b0c80ef4b14f8491.jpg\" />\n: \"望京是个好地方。\",
life/da-wangjing-gongyuan
path is https://playground.z.wiki/comment/list?path=/life/openai.html
OpenAI\n\n<ImgView title=\"OpenAI\" url=\"https://3.z.wiki/autoupload/20221209/IFYM.1854X1766-image.png\" />\n\n貌似可以用`openAI`来辅助写论文😂😂
life/openai
path is https://playground.z.wiki/comment/list?path=/life/google-search-console.html
---\nmeta:\n - name: description\n content: Google Search Console 谷歌 站长\n - name: keywords\n content: Google Search Console 谷歌 站长\n---\n# 网站搜索情况\n\n前几天注册了 [Google Search Console](https://search.google.com/search-console/performance/search-analytics) ，看了下数据，还真有搜索 PV，惊喜\n\n<ImgView title=\"Google Search Console\" url=\"https://3.z.wiki/autoupload/20240124/hi5Q.2346X3422-image.png\" />\n\n### 关键词\n\n<br />\n<ImgView title=\"Google Search Console\" url=\"https://6.z.wiki/autoupload/20240127/ssWe.1418X1484-image.png\" />\n\n\n1. uuid 长度\n2. adcode 查询\n3. nginx 缓存配置\n\n这几个关键词的搜索结果都在前五名\n\n\n<ImgView title=\"Google Search Console\" url=\"https://9.z.wiki/autoupload/20240127/kJHc.386X352-image.png\" />\n\n<ImgView title=\"Google Search Console\" url=\"https://0.z.wiki/autoupload/20240131/Qd43.2026X1238-image.png\" />: \"厉害，以后就是大V了\",\n: \"居然有一些流量，没想到啊！\",
life/google-search-console
path is https://playground.z.wiki/comment/list?path=/life/july-xiangshan.html
---\nmeta:\n - name: description\n content: 初秋朏，香山游\n - name: keywords\n content: 敖武,爬山,香山,游记,敖武的博客,北京,海淀,分享\ntags: [\"敖武\", \"七月\", \"爬香山\", \"北京\", \"香山红叶\", \"昭庙\", \"索道\", \"爬山\", \"西郊\", \"风景\"]\n---\n\n# 初秋朏，香山游\n\n\n七月初三，适逢周末，完成下[清明未完成的愿望](https://z.wiki/life/the-tomb-sweeping-day.html)吧，去爬香山~\n\n### 全副武装\n\n<ImgWithTitle :img=\"{\n url: 'https://1.z.wiki/autoupload/2022-07-31/de9cd11d6bf7475282c23f47a864f0b0.image.png',\n title: '全副武装的敖武',\n desc: '防晒帽、墨镜、防晒口罩、吸汗围巾、防晒衣、防晒霜应有尽有.',\n darkInfo: true\n}\" />\n\n\n防晒帽、墨镜、防晒口罩、吸汗围巾、防晒衣、防晒霜应有尽有，夏天的太阳，我会怕你吗？\n\n\n### 香山征程\n\n从望京到香山，主要有三段路：\n\n1. `132`路公交车\n2. 地铁`10`号线\n3. 西郊线\n\n<PhoneSnapshot url=\"https://2.z.wiki/autoupload/2022-07-31/a181579399b34a29acc9568f4d616378.image.png\" title=\"导航规划图\" alt=\"导航规划图\" />\n\n全程预计一小时二十八分钟。这也是香山对比其他山（八大处、西山等）的优势：地铁直达。\n\n想起上次，到了巴沟转西郊线的时候才发现，排队的人爆满。。这次得提前看下（也好提前撤退🕶），果然，西郊线目前满载率`50%`，看来人不会太多，毕竟天气这么热。\n\n <PhoneSnapshot url=\"https://3.z.wiki/autoupload/2022-07-31/cbecbe5bf66f4408957dcdca63f18a06.image.png\" title=\"地铁满载率\" alt=\"地铁满载率\" />\n\n`10`分钟到达了太阳宫、`47`分钟后到达巴沟、`1`小时`12`分钟到达香山地铁站。不得不说，西郊线沿途的风景确实不错~\n\n\n<ImgPlayer :imgs=\"[\n{url: 'https://4.z.wiki/autoupload/2022-07-31/a9a29c692df34692b0498ef6fbf26fb3.image.png', title: '在地铁上', desc: '刚到达太阳宫地铁', bgColor: '#eeeeee73'},\n{url: 'https://5.z.wiki/autoupload/2022-07-31/8599edf8f83342c589be02f77f337041.image.png', title: '换乘西郊线', desc: '从10好像下车，转乘西郊线', darkInfo: true},\n{url: 'https://6.z.wiki/autoupload/2022-07-31/0efc782cba4a466cb7573a0dca262ee5.image.png', title: '换乘西郊线', desc: '从10好像下车，转乘西郊线', darkInfo: true},\n{url: 'https://7.z.wiki/autoupload/2022-07-31/8c5b35fe218d4e2697d2b43736e32c13.image.png', title: '坐上西郊线', desc: '看西郊线外的绿化'},\n{url: 'https://8.z.wiki/autoupload/2022-07-31/ad20f44c53df437a85514347a0ff46ab.image.png', title: '圆明园附近', desc: '圆明园附近的河流'},\n{url: 'https://9.z.wiki/autoupload/2022-07-31/f4bd19b268714e06af3a33697814d30a.image.png', title: '沿途站点', desc: '沿途站点'},\n{url: 'https://0.z.wiki/autoupload/2022-07-31/761bce9a045f4ddbb3a39f26892f0e00.image.png', title: '香山路', desc: '香山路路牌'},\n{url: 'https://1.z.wiki/autoupload/2022-07-31/1eca927cfe65436799fad70184ef5e21.image.png', title: '香山站', desc: '到达香山站'}\n]\" />\n\n\n到达香山地铁站后需不行前往香山公园，距离`700+`米，预计行程`11`分钟，整体下来一小时二十二分钟，和[高德地图](http://amap.com/)预估的一小时二十八分钟还是很相近的。\n\n <PhoneSnapshot url=\"https://1.z.wiki/autoupload/2022-07-31/5ad0473ee3084599b9cabb3004548bc4.image.png\" title=\"步行走到香山公园\" alt=\"步行走到香山公园\" />\n\n沿途有绿化、有遗址、有小吃店，心情还是满怀期待~\n\n<ImgPlayer :imgs=\"[\n'https://1.z.wiki/autoupload/2022-07-31/8711b3d435054943a03d12c795ca5346.image.png',\n'https://1.z.wiki/autoupload/2022-07-31/330b1ae8efc7415e9eb041cafff7e047.image.png',\n'https://1.z.wiki/autoupload/2022-07-31/6066297060da40779ae4a62affa79a79.image.png'\n]\" />\n\n\n### 香山，我来啦\n\n走过人烟稀稀拉拉的买卖街便到了香山公园，__香山，我来了！__\n\n<ImgPlayer :imgs=\"[\n{url: 'https://1.z.wiki/autoupload/2022-07-31/a2f428b193a94d439c2e49deb3cd7786.image.png', title: '香山门口', desc: '矿泉水为证，我在香山门口。', darkInfo: true},\n{url: 'https://1.z.wiki/autoupload/2022-07-31/09c2957bf9b242fbbeabeb2a597f4db6.image.png', title: '香山门口', desc: '矿泉水为证，我在香山门口。', darkInfo: true}\n]\" />\n\n\n### 香山征程\n\n检过我在高德上买的门票，开启我的香山征程。\n\n\n走过钟灵毓秀门便来到了勤政殿\n\n\n<ImgPlayer :imgs=\"[\n'https://1.z.wiki/autoupload/2022-07-31/7d831db7438049bba31e7957c3b890e6.image.png',\n'https://1.z.wiki/autoupload/2022-07-31/5d00c0323f964e26b5dfcafbf0c91311.image.png',\n'https://2.z.wiki/autoupload/2022-07-31/4b2703df435b4df7af675d8c46f6b054.image.png',\n'https://2.z.wiki/autoupload/2022-07-31/1700939745dd426889d4668360ccef39.image.png',\n'https://2.z.wiki/autoupload/2022-07-31/62777fd33db34e7da26026671bc64a81.image.png'\n]\" />\n\n\n静宜园勤政殿始建于公元`1745`年，景区有正殿、配殿、朝房、假山、月牙河等组成。毀于`1860`年。`2002`年始在原上复建，`2003`年`7`月竣工。正殿为单檐歇山式建筑，殿宽五楹，外饰金龙和玺，内铺二尺金砖，为静宜园二十八景之第一景，是清代皇帝在香山静宜园跸期向处理政务和接见臣工的场所。南北配殿各五楹，原是王公大臣豆休息的地方。\n\n\n\n#### 目标-香炉峰\n\n走过勤政殿，看到一个路牌，看到香炉峰是最远的地方，想必也是最值得去的地方了，好，那就向香炉峰出发！\n\n <img loading=\"lazy\" src=\"https://2.z.wiki/autoupload/2022-07-31/bacc8c3cc98547aea8c67c000441e242.image.png\" title=\"指示牌-瞄准香炉峰\" alt=\"指示牌-瞄准香炉峰\" />\n\n规划导航，开始征程！\n\n <PhoneSnapshot url=\"https://2.z.wiki/autoupload/2022-07-31/591b0b7eb9ad44fcae7b928aa088a818.image.png\" title=\"开始导航，前往香炉峰\" alt=\"开始导航，前往香炉峰\" />\n\n#### 致远斋\n\n没走几步便到了致远斋\n\n<ImgPlayer :imgs=\"[\n{url: 'https://2.z.wiki/autoupload/2022-07-31/35fd18a9b2ca44c98dc3c6cfc4e6889b.image.png', title: '致远斋', desc: '致远斋介绍' , darkInfo: true},\n{url: 'https://2.z.wiki/autoupload/2022-07-31/1d82a77e8a4e44d1b000e1440b221b20.image.png', title: '致远斋', desc: '致远斋大堂门口', darkInfo: true}\n]\" />\n\n\n致远斋是香山静宜园在京城西北郊”三山五园”中相地最胜，规格最高，是融自然、历史人文景观于一体，独具山林特色的皇家园林典范。\n致远斋始建于清乾隆十三年 (`1748`)，与勤政殿、虛朗斋及丽瞩楼同为静宜园皇家宫殿区，庭院占地面积 3,430 平方米，建筑面积 `723` 平方米，由致远斋、韵琴斋和听雪轩等建筑组成，其名取自“非澹泊无以明志，非宁静无以致远”，为乾隆皇帝治国理政的重要场所。\n\n\n#### 镇芳楼 镇南房\n\n镇芳楼原为香山慈幼院董事会、院务会办公地。镇南房原为香山慈幼院男校教室。`1949`年`3`月`25`日，中共中央机关进驻香山后，此处为中共中央办公厅机要处办公居住地。\n\n<ImgPlayer :imgs=\"[\n'https://3.z.wiki/autoupload/2022-07-31/e3417395572a4bd9b98f93a8b1204034.image.png',\n'https://3.z.wiki/autoupload/2022-07-31/392daebe3fc64c24911e26bb292d79ab.image.png'\n]\" />\n\n进入镇芳楼最大的感受就是：凉快啊~，毕竟空调屋，然而，革命尚未成功，同志们仍需努力！\n\n\n#### 知松园\n\n\n<ImgPlayer :imgs=\"[\n{url: 'https://3.z.wiki/autoupload/2022-07-31/8e9e63fad4574badb7f81e6e22d2f61f.image.png', title: '知松园', desc: '知松园于1987年建成,占地2公顷,有100余株古松柏.', darkInfo: true},\n{url: 'https://3.z.wiki/autoupload/2022-07-31/0ff673f2d3754164a9c39621ce7ce211.image.png', title: '百年古树', desc: '源自清朝的百年古松柏', darkInfo: true},\n{url: 'https://3.z.wiki/autoupload/2022-07-31/320eeb25eb4743749f327cecb932fabb.image.png', title: '百年古树', desc: '源自清朝的百年古松柏', darkInfo: true}\n]\" />\n\n\n#### 剩余进度：2.8千米\n\n<ImgWithTitle :img=\"{\n url: 'https://3.z.wiki/autoupload/2022-07-31/96a5fab7968c4dd383812e3dfa38b2db.image.png',\n title: '指路牌',\n desc: '距离香炉峰2.8千米',\n darkInfo: true\n}\" />\n\n\n#### 并蒂\n\n并蒂：两朵花或两个果子共一蒂。\n\n> 叫连体婴儿是不是更合适？（手动奸笑）\n\n\n<ImgPlayer :imgs=\"[\n{url: 'https://3.z.wiki/autoupload/2022-07-31/d47e0df4ca044c279ddf30819e19217f.image.png', title: '并蒂', desc: '指两朵花并排地长在同一个茎上。', darkInfo: true},\n{url: 'https://3.z.wiki/autoupload/2022-07-31/5c6ae529139c48f8ab3cb414d5101a05.image.png', title: '并蒂', desc: '指两朵花并排地长在同一个茎上。', darkInfo: true},\n{url: 'https://4.z.wiki/autoupload/2022-07-31/b54e67ede45f4c51b4e772b9cf989e33.image.png', title: '并蒂', desc: '指两朵花并排地长在同一个茎上。', darkInfo: true}\n\n\n]\" />\n\n\n#### 沿途风景\n\n<ImgPlayer :imgs=\"[\n'https://4.z.wiki/autoupload/2022-07-31/5540106aed7e4186aefb4ed19cd499f6.image.png',\n'https://4.z.wiki/autoupload/2022-07-31/72fdca82f30e4593b976a63ed5c6d5f4.image.png',\n'https://4.z.wiki/autoupload/2022-07-31/2a364bc48a3f47b1af09199d67f920d2.image.png'\n]\" />\n\n#### 昭庙\n\n平地路走了一段，右侧便有一个小山坡，爬上去，第一次冲锋！\n\n<ImgPlayer :imgs=\"[\n'https://4.z.wiki/autoupload/2022-07-31/2a364bc48a3f47b1af09199d67f920d2.image.png',\n'https://4.z.wiki/autoupload/2022-07-31/5dbdf108bdad4496ab78835fe2d067ae.image.png',\n'https://4.z.wiki/autoupload/2022-07-31/b800c8703f5248f5b82ef121f14f4ed1.image.png'\n]\" />\n\n\n邂逅小鸟\n\n<ImgPlayer :imgs=\"[\n'https://5.z.wiki/autoupload/2022-07-31/b4bcada147d84579a192152d4b7a259f.image.png',\n'https://5.z.wiki/autoupload/2022-07-31/393421a2013d4bc7aaf3ccadf30df3d5.image.png'\n]\" />\n\n宏伟的建筑（昭庙）\n\n<ImgPlayer :imgs=\"[\n'https://5.z.wiki/autoupload/2022-07-31/a840261c2e4e487998a27f010a7a42de.image.png',\n'https://5.z.wiki/autoupload/2022-07-31/af718e0b0df147c2a62c18a6fc96ce34.image.png',\n'https://5.z.wiki/autoupload/2022-07-31/175fd3e0f4034a08a8e324fd96f80890.image.png',\n'https://5.z.wiki/autoupload/2022-07-31/1ae8e0ae9e134547b1ac0c209645bd50.image.png',\n'https://5.z.wiki/autoupload/2022-07-31/4e687a23a79340ad989a25b9970ad6e4.image.png'\n]\" />\n\n红白相间的风格，有点像西藏的布达拉宫，走到介绍牌子发现，果然是西藏的风格，红白相间，类似于红宫白宫。\n\n> 昭庙的全称为宗镜大昭之庙，建于乾隆四十五年（`1780`年），它是为迎接西藏班禅六世进京而特地建造的一座行宫，仿照西藏日咯则扎十伦布寺建造。昭庙先后于1860年、1900年遭到英法联军和八国联军焚毁。\n\n本以为昭庙已经逛完了，等走开后才发现，诶，后面还有一个塔诶？\n\n<ImgPlayer :imgs=\"[\n'https://6.z.wiki/autoupload/2022-08-01/d3fd93791ce849168c0323590cdf271d.image.png',\n'https://6.z.wiki/autoupload/2022-08-01/19c795dfb7644d31889ce960338930e9.image.png',\n'https://6.z.wiki/autoupload/2022-08-01/a41b0d685ae2415d95ed488b38e8c377.image.png',\n'https://6.z.wiki/autoupload/2022-08-01/a0e65898ac394cd2a5958e960a4ff6f7.image.png',\n'https://6.z.wiki/autoupload/2022-08-01/6930cef73577465c94dd4bc53f85d6da.image.png'\n]\" />\n\n> 琉璃万寿塔（俗称琉璃塔），建于清乾隆四十五年（`1780`年），是西藏六世班禅额尔德尼罗桑贝丹益希的行宫—宗镜大昭之庙的最后一组建筑。琉璃塔为七层密檐式实心塔，高约`30`米，塔基八角形须弥座，塔身表面八十座琉璃佛龛，檐端缀有铜铃，微风徐来，铃声悦耳。塔下由八面伞型的瓦顶建筑承托，内筑石雕拱门，石壁上镌雕八尊佛像及佛八宝等。召庙在1860年遭英法联军焚烧，琉璃塔的木建筑及石佛像均遭破坏。`1965`年进行了重新修缮，使之再现佳境。琉璃万寿塔现为香山公园标志性建筑。\n\n站在琉璃塔，整个昭庙尽收眼底。\n\n<ImgWithTitle :img=\"{\n url: 'https://6.z.wiki/autoupload/2022-08-01/0bb1010658a44cf285d942e3c4fd0208.image.png',\n title: '俯视昭庙',\n desc: '站在琉璃塔旁边，俯视昭庙，整个昭庙尽收眼底。',\n darkInfo: true,\n}\" />\n\n\n\n#### 沿途风景\n\n<ImgPlayer :imgs=\"[\n'https://6.z.wiki/autoupload/2022-08-01/28d2815c66d04fb9b422061e158d0653.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/c9753fd1f8a3419db46a34cce00ac20b.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/e385f306e0414b19aa72810647f8d44c.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/a389c3a58b9047c0bf0eabe984fcc3c2.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/7b17d6c918b44ddebb9bbd38e0c97c79.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/7313ab210c4f435ab8b7f73052c412b2.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/531b9773a3484b85a88d7502022dd30a.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/a3f3db67a0ea47a18b8ae78061f9b26e.image.png',\n'https://7.z.wiki/autoupload/2022-08-01/49d1edd5e0d14db9a3dd75d1a4bed01f.image.png'\n]\" />\n\n沿着别垣墙走，有一段路特别陡峭、特别陡峭。\n\n#### 飞累了的小蝴蝶\n\n<ImgPlayer :imgs=\"[\n{url: 'https://8.z.wiki/autoupload/2022-08-01/6aa3d0ecb9504abda5846756cdb2afad.image.png', title: '小蝴蝶', desc: '偶遇的小蝴蝶', darkInfo: true},\n{url: 'https://8.z.wiki/autoupload/2022-08-01/320e00f87e7d47f496986eba3eb26ad9.image.png', title: '小蝴蝶', desc: '你是不是也飞累了？', darkInfo: true}\n]\" />\n\n小蝴蝶叶飞累了吗？🤔🤔\n\n\n#### 休息一下\n\n\n香山海拔四百多比，在北京算是海拔一般的山吧，最矮的的百望山，二百多米。\n\n> 思考：能有什么手段看到我的海拔呢？之前用我的苹果手表可以，不过手表坏了一直没修，手机可以吗？好像不行诶。\n\n\n\n<ImgPlayer :imgs=\"[\n'https://8.z.wiki/autoupload/2022-08-01/c81fb01f1feb431a932dc3bd3931becf.image.png',\n'https://8.z.wiki/autoupload/2022-08-01/3ad4f136b3ed4f5db35d5304cabeb822.image.png'\n]\" />\n\n\n#### 小凳子\n\n在小凳子上做了一会，这个小凳子就是我的救命恩人，再见了小凳子。\n\n<ImgPlayer :imgs=\"[\n{url: 'https://8.z.wiki/autoupload/2022-08-01/0f4fa985276842aa8d10ac2677df41d5.image.png', title: '拨云见日', desc: '拨云见日，遇到了一个小凳子，顿时满是欣喜。', darkInfo: true},\n{url: 'https://8.z.wiki/autoupload/2022-08-01/b2d42586a7de41409c9112d5dbf7ab67.image.png', title: '小凳子', desc: '在小凳子上做了一会，这个小凳子就是我的救命恩人。', darkInfo: true},\n{url: 'https://8.z.wiki/autoupload/2022-08-01/478c6354ecce424b8992ad881c9358fd.image.png', title: '再见了小凳子', desc: '这个小凳子就是我的救命恩人，再见了小凳子。', darkInfo: true}\n]\" />\n\n\n#### 沿途风景\n\n<ImgPlayer :imgs=\"[\n'https://8.z.wiki/autoupload/2022-08-01/08abc7eba260468c9d77fb8f6e3be42d.image.png',\n'https://9.z.wiki/autoupload/2022-08-01/26ff1bbf404e4a0d8d48befb285e6a1a.image.png',\n'https://9.z.wiki/autoupload/2022-08-01/c4e1bc0fe2ed41d08e297ea9502b18d9.image.png',\n'https://9.z.wiki/autoupload/2022-08-01/689fa5ac666748cd9d425dcf127de080.image.png',\n'https://9.z.wiki/autoupload/2022-08-01/3c1ed49804db4c8ca90aa545a9af3c3c.image.png',\n'https://9.z.wiki/autoupload/2022-08-01/c16866fa55394ac1b223632bf836c0b6.image.png'\n]\" />\n\n西山晴雪？管不了那么多了，我得继续爬山，特别期待继续网上会有卖水的吗？最好还有买黄瓜的，让我啃两个黄瓜痛快一下。\n\n\n#### 剩余进度：444米\n\n <PhoneSnapshot url=\"https://9.z.wiki/autoupload/2022-08-01/23ec27c3a566457f861bf48acddf5a83.image.png\" title=\"高德地图，距离目的地444米\" alt=\"高德地图，距离目的地444米\" />\n\n距离目的地还有`444`米，这段路程有点艰难啊。\n\n休息休息\n\n<ImgWithTitle :img=\"{url: 'https://0.z.wiki/autoupload/2022-08-01/363c037f9d00446c827d0ad9a1aca31d.image.png', title: '中途休息下', desc: '一路上遇到很多人都坐在台阶上休息，俺也不例外。', darkInfo: true}\" />\n\n\n#### 中途俯视北京\n\n据说，天气好的话能看到整个北京。\n\n <img loading=\"lazy\" src=\"https://0.z.wiki/autoupload/2022-08-01/19ad310697bc4e34bf5c3e023ae7d6a4.image.png\" title=\"遥望北京城\" alt=\"遥望北京城\" />\n\n#### 汗如雨下\n\n坐下一小会，头稍一低下就滴答滴答没完。今天的活动量非常足！！\n\n <ImgWithTitle :img=\"{url: 'https://0.z.wiki/autoupload/2022-08-01/6525719b88c9492cba5f8f0da9a82ea0.xiangshan.gif', title: '汗如雨下', desc: '看我的汗，流的真痛快！！！！', darkInfo: true}\" />\n\n\n#### 拨云见日\n\n最后以百米足足走了十分钟，好在最终上来了✌🏻✌🏻✌🏻\n\n<ImgPlayer :imgs=\"[\n'https://0.z.wiki/autoupload/2022-08-01/a06f113405784091afdc3a8df23ab1b3.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/0318b13d837648f3b5df0fe5e4d670ef.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/ce7f8727f9dd40b182418411cecdab79.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/098c87eed4a34b25836080208de535d4.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/3d3f6286cfbe44f9a566ac5527899d93.image.png'\n]\" />\n\n香炉峰海拔`575`米，形似香鼎，阳光照耀时 山谷中云蒸霞蔚，宛如香烟升腾，故此得名。 又因地势陡峭，攀登艰难而俗称鬼见愁。 清代为乾隆皇帝重阳登高之所，称 “重阳亭” 。乾隆曾六度于重阳登香山赋诗。 现峰顶主体建筑“重阳阁”建于`1983`年，是眺望京城的绝佳之处。\n\n\n#### 归途\n\n在香炉峰上休息休息、吃吃喝喝、逛逛风景，准备下去，坐索道下去。\n\n香山索道始建于`1982`年，它是我国自行研究、制造的全国第一条大型固 定抱索器式客运索道。下去费用`80`元。\n\n> 游览索道北起公园北门，沿山直达香炉峰顶（俗称“鬼 见愁”）全长`1400`米，高差`431`米，沿线有`15`个支架，`168`只 吊椅，吊椅宽`1.4`米，距地面最高处`21`米，最低处`1.2`米，索道 由`144`千瓦直流电机驱动，运行速度为`1.35`米/秒，单程运行 时间`17`分钟，每小时可运送`600`人，采用双路供电、安全可靠。 乘坐香山游览索道，平稳舒适，视野开阔，可饱览香山全 。南赏层峦叠翠、流云塔影：北览碧云寺、金刚宝座塔： 东眺玉泉山、万寿山、昆明湖及京城美景：西望香炉峰、踏 云亭、观景台，使人心旷神怡，流连忘返。\n\n\n<ImgPlayer :imgs=\"[\n'https://0.z.wiki/autoupload/2022-08-01/4650ec12c9bc4eae8b94ef5f03097f3e.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/ea16236dd52d4367940b02fb61095149.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/b1c21d96b757407588efcb8189c9e37e.image.png',\n'https://0.z.wiki/autoupload/2022-08-01/ee7145b930204999882da24bfcbcef58.image.png',\n'https://1.z.wiki/autoupload/2022-08-01/04a8a3563d0f43f8b01305fa27ac05d5.image.png',\n'https://1.z.wiki/autoupload/2022-08-01/88fed813b2e6487c8457eec589999299.image.png',\n'https://1.z.wiki/autoupload/2022-08-01/ab2aab46c9464648a64260f2fb9c49eb.image.png'\n]\" />\n\n在索道上还能看到眼镜湖、琉璃塔、昭庙、凤栖松、等景点，从高空中看确实又不一样的味道、不一样的视野，就像我们的人生，当我们的思想上升一个境界后才能看到我们当下的美丽或缺陷。\n\n\n#### 再见香山\n\n<ImgPlayer :imgs=\"[\n{url: 'https://1.z.wiki/autoupload/2022-08-01/1587a1269f004a298e22c5b0bf39b147.image.png', title: '再见香山', desc: '向香山门口挥手再见', darkInfo: true},\n{url: 'https://3.z.wiki/autoupload/2022-08-01/3e884ed0d06840d2bb6c49c8c9b3172a.image.png', title: '再见香山', desc: '向香山门口门口的大石头挥手再见', darkInfo: true}\n]\" />\n\n\n<TheEnd />: \"勇气可嘉 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/clap.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/clap.png\" /> \",
life/july-xiangshan
path is https://playground.z.wiki/comment/list?path=/life/first-snow-in-2022.html
2022年的第一场雪\n\n意面镇楼\n\n<ImgView title=\"番茄意面\" url=\"https://z.wiki/images/20220123/19944f72b67a41c8ab540f84a9f92c90.png\" />\n\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/f414e7c48b83488bbaa01c306fa813d3.png\" />\n\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/f6b7f5cec4ff4013a3883727e8a880c5.png\" />\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/2aa5f7747b9544a2bf721f12d8863acc.png\" />\n\n<ImgView title=\"大雪\" url=\"https://4.z.wiki/images/20220123/da52c0aecde248fa85eb2566623d37e4.png\" />\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/f3d39c796f374c7d827cf682fd8cd6b7.png\" />\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/357104453c74447da1bedf364125d5c7.png\" />\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/8223759e6285409a8e063660ba3ab5de.png\" />\n\n<ImgView title=\"大雪\" url=\"https://z.wiki/images/20220123/57c0091219a0465899257da8b0050a86.png\" />\n\n<ImgView title=\"大雪\" url=\"https://4.z.wiki/images/20220123/9e1ba343387f4b31b4621735622315e2.png\" />\n: \"下雪啦\",\n: \"<p>下雪啦~</p>\n\",
life/first-snow-in-2022
path is https://playground.z.wiki/comment/list?path=/life/horrible-lift-well.html
恐怖电梯间\n\n😱😱😱\n\n从将近`30`层走下去，足足走了`5`分钟，而且越往下越阴暗😱😱😱 \n\n<VideoPlayer src=\"https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/20221123/cNXf.恐怖电梯间.mp4\" />
life/horrible-lift-well
path is https://playground.z.wiki/comment/list?path=/life/email.html
自己的邮箱\n\n搞了一个自己的邮箱服务😀😀
life/email
path is https://playground.z.wiki/comment/list?path=/life/communication.html
良好的沟通\n\n> 内容来自 [作家 李鲆](https://weibo.com/u/1226157155)\n\n### 良好的沟通，可以解决80%以上的问题。\n\n沟通可以分为高效沟通和高情商沟通，但二者并非泾渭分明。只是因时、因事、因人侧重不同。\n\n简单来说，沟通有8项原则：\n\n### 清晰明了。\n想明白，再去说。\n想明白自己想要表达什么，简洁、清晰、有层次、有重点地表述出来，避免含混、歧异。\n可以先写出来，反复修改，直到确认清晰、无误，再去沟通。\n想明白自己沟通的目的是什么，自己想要什么。围绕这个目的去沟通。\n\n![](https://z.wiki/images/20220702/ecbbba46278a40dd9c53eabafe98e21a.png?x-oss-process=image/resize,w_800/quality,q_80)\n\n\n### 重点前置。\n最好先说结论，再做解释。但有时候也需要先把结论隐藏起来，通过故事、逻辑、事实，得出结论。\n最好分层次，用首先其次再次，或一二三四。但这容易给人公事公办的感觉，有些场合并不适用。\n最好一次只沟通一个问题，一个问题只谈三点。\n\n\n\n### 勿带情绪。\n沟通是为了解决问题，而非制造、激化矛盾。\n沟通出问题，往往出在情绪上。\n要先解决情绪，再解决问题。\n要先解决自己的情绪，再解决对方的情绪。\n\n### 换位思考。\n习惯站在对方的角度，了解对方的想法。\n照顾对方的情绪。\n照顾对方的利益。\n帮对方挖掘他的真实需求。\n\n![](https://z.wiki/images/20220702/063f542392154bd8adc558d6f8169e38.png?x-oss-process=image/resize,w_800/quality,q_80)\n\n\n### 肯定对方。\n先让对方说，多让对方说。\n多听少说，也是肯定。\n神情专注，身体微微前倾，点头，用肢体语言肯定。\n不断说“嗯”、“对”、“然后呢？”\n用“挺好的，另一个角度是”来代替“你错了”。\n\n![](https://z.wiki/images/20220702/b4f9dac095d24d9095cf5454423e0e08.png?x-oss-process=image/resize,w_800/quality,q_80)\n\n\n### 互相复述\n对方表达完之后，复述对方的内容，“您的意思是……我有没有理解错误？”\n最好也请对方复述一下你的意思。\n\n### 因人而异。\n以上对下、内部沟通、沟通对象非常优质，可以少照顾情绪，坦诚说出心中所想，就是所谓高效沟通。\n反之，需要更多照顾情绪，需要更多沟通技巧，就是高情商沟通。\n沟通困难，又没有价值的，就离远点，尽量不要沟通。\n\n### 文字确认。\n这是非常好的习惯。\n在电话沟通或面谈前，先用文字发沟通要点给对方，然后一一对照，避免遗漏。\n每次沟通后，先口头做个总结，再形成文字备忘，双方确认。\n\n![](https://z.wiki/images/20220702/34f61371cf874b328d0e84555c4b1f22.png?x-oss-process=image/resize,w_800/quality,q_80)\n
life/communication
path is https://playground.z.wiki/comment/list?path=/life/girl-in-spring-of-2022.html
春日出游\n\n### 海棠花\n\n（请自动忽略臭水沟\n<ImgPlayer :imgs=\"[\n 'https://z.wiki/images/20220411/11fd0953186043fda7bf577c04f7dd8c.png',\n 'https://z.wiki/images/20220411/b66313a265664a38a2426e043dcb2bc3.png',\n 'https://z.wiki/images/20220411/233721b11c8a438da4567f2583372eb5.png',\n 'https://z.wiki/images/20220411/0f3bec81bb1a4ee68bef186589fc8472.png'\n]\" />\n\n\n\n### 花下姑娘\n\n嗯？花姑娘？哦不，花下姑娘。。\n<ImgPlayer :imgs=\"[\n'https://4.z.wiki/images/20220411/607e03f3ea6748409a8d771d431a1dac.png',\n'https://z.wiki/images/20220411/d93844443d894dcea6cd32a498a8119a.png',\n'https://z.wiki/images/20220411/4980dc03b93445838763eda01b713f0b.png',\n'https://z.wiki/images/20220411/5b30c7640473434f839a939fba242282.png',\n'https://z.wiki/images/20220411/8e8f808e1ecb48ddbf6727ae6ad596be.png',\n'https://4.z.wiki/images/20220411/6b8b9be7595b4cc3ad05bf4ae977b8ae.png',\n]\" />\n\n\n\n### 奥林匹克公园\n\n（咳咳，P图过头了\n<ImgPlayer :imgs=\"[\n'https://z.wiki/images/20220411/8339350e2ed944599b1033608d0c112c.png',\n'https://z.wiki/images/20220411/a0e676d11d32479db51fbb286727226c.png',\n'https://z.wiki/images/20220411/63d01ba7c54342c4b91e0d48ae81ec0a.png',\n'https://z.wiki/images/20220411/a5f217fab28b4837a488a12d32f426cb.png',\n]\" />\n: \"回复:\"<p>花姑娘好看 <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\"\n\n------------\n\n好看\",\n: \"<p>花姑娘好看 <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",
life/girl-in-spring-of-2022
path is https://playground.z.wiki/comment/list?path=/life/spring-2023.html
2023年春节\n\n<ImgView title=\"2023年春节\" url=\"https://1.z.wiki/autoupload/20230204/Iwh4.1082X1732-IMG_2375.JPG\" />\n\n<ImgView title=\"2023年春节\" url=\"https://1.z.wiki/autoupload/20230204/pldQ.4032X3024-IMG_2403.JPG\" />\n\n<ImgView title=\"2023年春节\" url=\"https://1.z.wiki/autoupload/20230204/pzDR.3025X4032-IMG_2466.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://1.z.wiki/autoupload/20230204/Z9w4.4032X2885-IMG_2472.jpg\" />\n\n<ImgView title=\"2023春节\" url=\"https://1.z.wiki/autoupload/20230204/qpqu.3419X2321-IMG_2475.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://1.z.wiki/autoupload/20230204/S4Rp.2457X3024-IMG_2511.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/25de.3024X4032-IMG_2516.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/yeVy.4032X3024-IMG_2517.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/i5ql.3071X2728-IMG_2519.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/GK6N.4160X2773-IMG_2520.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/olhq.4160X2340-IMG_2544.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://2.z.wiki/autoupload/20230204/j9Yp.903X1023-IMG_2548.jpg\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/wQc2.3024X4032-IMG_2572.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/5c2Z.3024X4032-IMG_2573.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/5Nqn.3001X2250-IMG_2600.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/Cagv.4160X3120-IMG_2607.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/ylDF.4160X3617-IMG_2608.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://8.z.wiki/autoupload/20230204/tGkL.4160X2773-IMG_2609.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://5.z.wiki/autoupload/20230204/OqP3.3024X4032-IMG_2410.JPG\" />\n\n<ImgView title=\"2023春节\" url=\"https://5.z.wiki/autoupload/20230204/eJpn.3383X2815-IMG_2518.JPG\" />: \"有点意思🤔\",\n: \"时间过得真快\",
life/spring-2023
path is https://playground.z.wiki/comment/list?path=/life/2022-labour-day.html
---\ntags: [\"敖武\", \"劳动节\", \"美食\"]\n---\n\n# 22年劳动节\n\n犒劳下自己，劳动节，劳动者最光荣~\n\n<ImgPlayer :imgs=\"[\n 'https://z.wiki/images/20220502/4d23a8bd7be64133a8ee36b673709ad1.png',\n 'https://z.wiki/images/20220503/936e5f71f29b42e38d0b5bc9a2bec35d.png',\n 'https://z.wiki/images/20220503/e6eb17b26c01431388f4a58a93618580.png',\n 'https://z.wiki/images/20220503/8476f77fb47448a8bfe151431ccc044d.png',\n 'https://4.z.wiki/images/20220503/31b3eb689d6d4a9a84e7e9e028b264e1.png'\n]\" />
life/2022-labour-day
path is https://playground.z.wiki/comment/list?path=/life/involution.html
如何避开内卷 --- 风中的厂长\n\n内容来自[风中的厂长](https://weibo.com/u/6169408204)\n\n<ImgView title=\"如何避免内卷\" url=\"https://1.z.wiki/images/20220213/b2ea1225154a4ab59af3340ad7a161df.png\" />\n\n\n如何避开内卷，有一个词叫**降维**，意思是避开高手，降低竞争维度，就是蓝海。\n\n降维分为好几种：\n\n### 城市降维\n\n比如大城市的人才去小城市发展。只要选对行业，几乎没有对手。\n\n<ImgView title=\"如何避免内卷\" url=\"https://1.z.wiki/images/20220213/b70180a3ca4a40b98f1c7be645cc66fd.png\" />\n\n### 学历降维\n\n比如大学生去工厂从流水线做起。凭借自己的知识结合生产，上升很快。我也上过流水线，所以后来开发产品，避开许多坑，一个爆款一套房。\n\n<ImgView title=\"如何避免内卷\" url=\"https://1.z.wiki/images/20220213/c32a98765a984bffbcedc4f4829dd6f3.png\" />\n\n\n### 技能降维\n\n某项技能，你的水平跟高手比差了几条街，但教小白足够了，那就去教小白，利用网络平台，流量放大一万倍。\n\n<ImgView title=\"如何避免内卷\" url=\"https://1.z.wiki/images/20220213/1db081b73679400d84b5c56d3dd0a3e6.png\" />\n\n\n### 国家降维\n\n把国外最新的产品或模式搬到国内。或者把国内先进的产品（特别是互联网）搬到国外。\n\n<ImgView title=\"如何避免内卷\" url=\"https://1.z.wiki/images/20220213/d66e01a87258410691d53567ca408daa.png\" />\n\n\n### 思维降维\n\n把你从竞争中学来的的商业思维，流量思维拿到农村去发挥。 比如现在抖音发力农村市场，很多卖课的转型教农民兄弟开直播，他们也不卖课了，卖声卡赚到飞起。\n\n<ImgView title=\"如何避免内卷\" url=\"https://2.z.wiki/images/20220213/568ba3e51fdf4737b5b0b3e5997c79f6.png\" />\n\n\n### 颜值降维\n\n帅哥美女去卖烧饼。一下子就火了。前几天有个摆摊的小哥上了热搜。\n\n<ImgView title=\"如何避免内卷\" url=\"https://4.z.wiki/images/20220213/fbdd65d488cf47dc83d21f219cffbf5d.png\" />\n\n\n### 穿越降维\n\n现代人带着高科技穿越到古代。\n\n<ImgView title=\"如何避免内卷\" url=\"https://4.z.wiki/images/20220213/25410159771d4bbc830292ace2729be7.png\" />\n\n\n[//]: # (![]&#40;https://z.wiki/images/20220213/13d87c2808ef45e89232cf1bbc726798.png): \"<p> <img alt=\"pick nose\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/9a/2018new_wabi_thumb.png\"/>说得很有道理</p>\n\",
life/involution
path is https://playground.z.wiki/comment/list?path=/life/tianmen.html
我和我的祖国\n\n### 2021年十月一日\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/d11a9449987b47a6892e6b335fd51755.png\" />\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/da6897c3d65342f0b7220dcf4a086706.png\" />\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/2de94318948d4ac9b594936aaa8b5a72.png\" />\n\n\n### 2020年十月一日\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/0bc7c002f7e04961a8a56b8a5fac5455.png\" />\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/3cf619e3ebbb4d5cbe689fe1ab59098a.png\" />\n\n<ImgView title=\"天安门\" url=\"https://8.z.wiki/images/20211116/adef7b3b96ea44148f98fd26e04c84e9.png\" />\n\n### 2019年十月一日\n\n<ImgView title=\"天安门\" url=\"https://7.z.wiki/images/20211116/cadfa2e9412b4846a865462f7f1a1363.png\" />\n\n<ImgView title=\"天安门\" url=\"https://7.z.wiki/images/20211116/806dd52cf2c449429556cd0ce2417288.png\" />\n\n<ImgView title=\"天安门\" url=\"https://7.z.wiki/images/20211116/049395df9a2e49828b1900f05880bec0.png\" />\n\n<ImgView title=\"天安门\" url=\"https://4.z.wiki/images/20211116/0037302aa5a7458e91fb9568b2a56a2b.png\" />: \"好几年，每年都去天安门广场。👍\",
life/tianmen
path is https://playground.z.wiki/comment/list?path=/life/ukraine.html
波兰？\n\n[俄称波兰准备吞并西乌克兰，专家：各国有隐秘意图，有这种可能](https://www.163.com/dy/article/HNH19JA10515CCSC.html)\n\n<ImgView title=\"波兰\" url=\"https://5.z.wiki/autoupload/20221201/1yVo.1564X1786-image.png\" />\n\n[俄媒：俄情报高官称波兰拟在乌克兰西部举行全民公投，以实现吞并](https://www.163.com/dy/article/HNGTCKG00514R9OJ.html)\n\n<ImgView title=\"波兰\" url=\"https://5.z.wiki/autoupload/20221201/eZfe.1414X1812-image.png\" />
life/ukraine
path is https://playground.z.wiki/comment/list?path=/life/switch.html
---\nmeta:\n - name: description\n content: 超级马力欧：奥德赛\n - name: keywords\n content: switch游戏机,超级马力欧,奥德赛\ntags: [\"switch\", \"游戏机\", \"超级马力欧\", \"奥德赛\"]\n---\n# 超级马力欧：奥德赛\n\n超级马里奥奥德赛（`Super Mario Odyssey`）是一款由任天堂开发的动作冒险游戏，于 `2017` 年发布。\n游戏中，玩家扮演马里奥，在不同的世界中收集宝石并解决难题，最终打败最终`boss`。超级马里奥奥德赛收到了广泛好评，\n被认为是马里奥系列游戏中的经典作品之一。\n\n<ImgView title=\"超级马力欧奥德赛\" url=\"https://8.z.wiki/images/20211115/981c23a9878d481d8c703edd0569c34a.png\" />\n\n\n<ImgView title=\"超级马力欧奥德赛\" url=\"https://9.z.wiki/images/20211115/570520d0680d4a6fbc26023db887063d.png\" />\n\n\n<ImgView title=\"超级马力欧奥德赛\" url=\"https://7.z.wiki/images/20211115/cf5e19bdc6ca4719a7b0925f86f2b652.png\" />\n\n\n\n\n\n\n: \"<p><a class=\"at\" href=\"#6191e25d83ad7a74a1b9d784\">@小凡 </a> , 哦哦，加油，好玩儿</p>\n\",\n: \"<p><a class=\"at\" href=\"#6191d02583ad7a74a1b9c73b\">@新新 </a> , 不知道 打死了大boss 不过还能继续玩呢</p>\n\",\n: \"<p><a class=\"at\" href=\"#6191d02583ad7a74a1b9c73b\">@新新 </a> , 不知道 打死了大boss 不过还能继续玩呢</p>\n\",\n: \"<p>闯关了吗，我也玩儿完了这个</p>\n\",\n: \"<p>闯关了吗，我也玩儿完了这个</p>\n\",\n: \"<p>厉害了</p>\n\",
life/switch
path is https://playground.z.wiki/comment/list?path=/life/procreate.html
procreate\n\n### 2023/01/29\n\n#### 花蕊\n\n<ImgView title=\"花蕊\" url=\"https://3.z.wiki/autoupload/20230129/D5Jv.1668X2388-未命名作品_2.jpg\" />\n\n### 2023/01/24\n\n#### 菠萝\n\n<ImgView title=\"菠萝\" url=\"https://3.z.wiki/autoupload/20230125/Xwak.1668X2388-IMG_0083.PNG\" />\n\n#### 小熊\n\n<ImgView title=\"小熊\" url=\"https://3.z.wiki/autoupload/20230125/vHP9.1668X2388-IMG_0082.PNG\" />\n\n#### 小树\n\n<ImgView title=\"小树\" url=\"https://3.z.wiki/autoupload/20230125/DzFu.1668X2388-IMG_0081.PNG\" />\n\n#### 小蘑菇\n\n<ImgView title=\"小蘑菇\" url=\"https://3.z.wiki/autoupload/20230125/JzJZ.1668X2388-IMG_0080.PNG\" />\n\n#### 小墨鱼\n\n<ImgView title=\"小墨鱼\" url=\"https://4.z.wiki/autoupload/20230125/5CgH.1668X2388-IMG_0079.PNG\" />: \"好评\",\n: \"挺好看的加一\",\n: \"挺好看的\",
life/procreate
path is https://playground.z.wiki/comment/list?path=/life/baike.html
---\nmeta:\n - name: description\n content: 敖武与百度百科\n - name: keywords\n content: 敖武,百度百科,物业,收费\n---\n# 我的百度百科\n\n下月公司就要搬到新总部了，我也准备着搬到新家里面，对环境不太熟悉的情况下一般都会通过网络来了解下新地方，正好访问到了 [北方明珠](https://baike.baidu.com/item/%E5%8C%97%E6%96%B9%E6%98%8E%E7%8F%A0%E5%B0%8F%E5%8C%BA/108730) 的百科。\n\n### 百科中的错误\n\n看到物业费部分，震惊地发现，物业费：1.8元/平方米*日 \n\n<ImgView title=\"北方明珠的物业费\" url=\"https://1.z.wiki/autoupload/2022-08-22/3f99cd0bc88b4bc8b7aad63c7e47139f.image.png\" />\n\n\n由于平时对物业费完全没概念，简单算下，如果房子`100`平米，每年的物业费：`1.8 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 100 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 365 = 65700`\n\n<ImgView title=\"百科\" url=\"https://2.z.wiki/autoupload/2022-08-22/679c0ace3e5d4d49908d2aa98ae7b038.image.png\" />\n\n\n一年`6`万的物业费，我陷入了深思\n\n<ImgView title=\"百科\" url=\"https://2.z.wiki/autoupload/2022-08-22/f9864bab631149c58a861e6857af38e9.image.png\" />\n\n\n### 物业费标准\n\n物业收费到底应该怎么收呢？根据“百度一下，你就知道”的理念，哦不，是“`Google`一下，你就知道”的理念，我开始了物业探索之路。\n\n根据搜到的头部链接，进入了[北京市发展和改革委员会](http://fgw.beijing.gov.cn/fgwzwgk/zcgk/bwqtwj/201912/t20191226_1505991.htm)的网站。\n\n京发改〔`2005`〕`2662`号 文件显示：\n\n\n> 为规范我市物业服务收费行为，保障业主和物业管理企业的合法权益，根据《中华人民共和国价格法》、《物业管理条例》和《物业服务收费管理办法》，经市政府同意，现将《北京市物业服务收费管理办法（试行）》（以下简称《办法》）和《北京市经济适用住房小区物业服务收费政府指导价收费标准》予以发布，自2006年1月1日起施行。\n> 在《办法》实施前应执行《北京市普通居住小区物业管理服务收费暂行办法》的住宅区，在未成立业主大会前，物业服务收费标准从其约定；物业服务收费标准没有约定的，按不高于现行收费标准执行。物业管理企业购买物业共用部位、共用设施设备及公众责任保险，或者提供住宅安全防范设施设备、消防设施设备运行维护服务的，可以参照经济适用住房相关服务内容测算费用。\n 按房改政策出售公有住宅的单位、购买安居（康居）住宅的职工所在单位和房改、安居（康居）购房人物业服务费用的承担，从其约定。\n> 特此通告。\n> 二〇〇五年十二月十九日\n\n\n继续沉思\n\n<ImgView title=\"百科\" url=\"https://2.z.wiki/autoupload/2022-08-22/f9864bab631149c58a861e6857af38e9.image.png\" />\n\n原来北京并未规定明确的物业收费标准。\n\n\n那就只能从经验值中获取真值了\n\n### 原来如此\n\n貌似 [这里](https://zhuanlan.zhihu.com/p/479115652) 总结的不错。\n\n> 小区物业费收取标准分为一级、二级、三级、四级四个标准。但是每个地方的收取标准有点差异，具体的物业费收取标准要按当地物价局公布。这四个标准的收费依次大概为1.00元/月/平方米、0.75元/月/平方米、0.5元/月/平方米、0.35元/月/平方米（已包含税、费）。\n\n虽然价格不同，不过单位都一样，都是“元/月*平米”，那就是：北方明珠的物业费是“`1.8`元/平米*月\"\n\n### 修改百科\n\n本着”有问题就改正“的原则，随手给百科提交了一版\n\n<ImgView title=\"百科\" url=\"https://2.z.wiki/autoupload/2022-08-22/d30077e1723041a68c8293fbdcb55362.image.png\" />\n\n哟吼，第二天就审批通过了。\n\n<PhoneSnapshot url=\"https://z.wiki/autoupload/2022-08-22/1aea9f36256246ba8fedd6ebf82668fb.IMG_8089.PNG\" title=\"百度百科\" alt=\"百度百科\" />\n\n<ImgView title=\"百科\" url=\"https://3.z.wiki/autoupload/2022-08-23/ed38929a23bc4a3fa07df7dce9b0c62a.image.png\" />\n\n\n### 恍然大悟\n\n<ImgView title=\"百科\" url=\"https://3.z.wiki/autoupload/2022-08-22/17e20ff21842439bbe4264ea588c2e13.image.png\" />\n\n正当我叉腰自豪的时候突然意识到，我直接`Google`下北方明珠的物业费不就行了？折腾这么久干什么？！！我是脑子进水了吗？？？\n\n<ImgView title=\"百科\" url=\"https://3.z.wiki/autoupload/2022-08-22/eb77e75f45c849aa84c3e842133af82c.image.png\" />\n\n<ImgView title=\"百科\" url=\"https://3.z.wiki/autoupload/2022-08-22/278aaa14a54a4bbfaf90e332c9032b41.image.png\" />
life/baike
path is https://playground.z.wiki/comment/list?path=/life/switchfitness.html
---\ntags: [\"敖武\", \"健身环\", \"体验\"]\n---\n\n# 健身环之初体验\n\n吃灰数月的健身环终于迎来了光明\n\n![开箱体验下~](https://z.wiki/images/20220224/333aca20032a4ba6af161636ea188f47.gif)\n\n找到箱子，清理下灰尘\n<ImgView title=\"健身环大冒险\" url=\"https://1.z.wiki/images/20211115/1776c19703754adca16266c8e1c5e938.png\" />\n\n\n\n撕开壳子，很让人期待~\n<ImgView title=\"健身环大冒险\" url=\"https://2.z.wiki/images/20211115/ab986773155d479fbb0fd714b4436739.png\" />\n\n\n\n哇，这里面装的就是游戏卡吧\n<ImgView title=\"健身环大冒险\" url=\"https://3.z.wiki/images/20211115/08c2c4fff5a940469f969bcfe9b7e401.png\" />\n\n\n我擦！！卡呢？？？为什么是一个空壳子\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/ac6cc67d695b4eb29a4b35953823e5b1.png\" />\n\n\n哦哦哦，看了下说明，原来是数字版的游戏😂\n\n健身环~\n<ImgView title=\"健身环大冒险\" url=\"https://1.z.wiki/images/20211115/ce823ad7080946f6b8e31b7771fd7e0f.png\" />\n\n\n下载游戏啦~~~\n<ImgView title=\"健身环大冒险\" url=\"https://2.z.wiki/images/20211115/086afd199a7146178991bbb1f0b4389f.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://3.z.wiki/images/20211115/b5cb6cd7adf0448fa5533e0fbef8b872.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/4746091d8e354df4af728b3bec461b9d.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://5.z.wiki/images/20211115/a82138a3f63640b8974ff780b20ebb58.png\" />\n\n\n很快就下载好了，(*❦ω❦)，3个G的游戏，这么快就下载好了啊👏👏👏\n\n打开游戏，刚开始是安装流程，吧啦吧啦~\n<ImgView title=\"健身环大冒险\" url=\"https://5.z.wiki/images/20211115/74b6085a251c4cf7b5661fd63dddc35c.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://1.z.wiki/images/20211115/dc538cd940ef49339f1c645a720f1bcb.png\" />\n\n\n原来光有健身环还不行，还得配合 joy con 一起玩啊，୧(๑•̀◡•́๑)૭\n\n更新手柄中~\n<ImgView title=\"健身环大冒险\" url=\"https://2.z.wiki/images/20211115/d7921cd899124701bbb6a9541ed3f15b.png\" />\n\n\n准备开始啦😍\n<ImgView title=\"健身环大冒险\" url=\"https://3.z.wiki/images/20211115/41c7645f36cb444fa5281fd105d8ddb5.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/984a329b70cb4786a6f5d341d5489dcf.png\" />\n\n\n果然是健身游戏，真累啊😂\n\n\n该小仙女上场了,看起来很认真的样子 ┓( ´∀` )┏\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/4b15d6780eb24ce38f193239da407245.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/fb13ad144932422ebcca81e8360fc9da.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/711a86de2a71475b948628be4e2b8501.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/905fa146414d4e4cb8fa9875420da645.png\" />\n\n<ImgView title=\"健身环大冒险\" url=\"https://4.z.wiki/images/20211115/4808ba5bf87f46c1a46b83fdd3ecdab4.png\" />\n\n\n\n\n\n: \"<p><a class=\"at\" href=\"#619378f683ad7a74a1bba33b\">@Sheet </a> , 不行，得和switch一起用</p>\n\",\n: \"<p>运动环？可以单独用吗</p>\n\",\n: \"<p><a class=\"at\" href=\"#619384f183ad7a74a1bbada3\">@Anonymous </a> , switch+健身环</p>\n\",\n: \"<p>这多少钱啊</p>\n\",\n: \"<p><a class=\"at\" href=\"#619384f183ad7a74a1bbada3\">@Anonymous </a> , 两千多吧，公司发的😂，不是很了解价格</p>\n\",\n: \"<p>这多少钱啊</p>\n\",\n: \"<p>这多少钱啊</p>\n\",\n: \"<p>运动环？可以单独用吗</p>\n\",\n: \"<p>switch 的好玩儿么，准备入手</p>\n\",\n: \"<p>感觉以后周末都不用出去了😂</p>\n\",\n: \"<p>哇 博主和小仙女太棒了</p>\n\",
life/switchfitness
path is https://playground.z.wiki/comment/list?path=/life/us-visa.html
申请美国签证\n\n申请了美国签证，面签居然要等三个月🤣\n\n<ImgView title=\"美国签证\" url=\"https://6.z.wiki/autoupload/20231217/JHg4.948X1516-image.png\" />\n\n<ImgView title=\"美国签证\" url=\"https://1.z.wiki/autoupload/20231217/LE1M.1234X1926-image.png\" />\n\n<ImgView title=\"美国签证\" url=\"https://0.z.wiki/autoupload/20231217/8gJJ.154X544-image.png\" />\n\n> PS: 一千多的面签费，还不一定过，期待上帝保佑吧🙏: \"这么贵？\",
life/us-visa
path is https://playground.z.wiki/comment/list?path=/life/halloween.html
---\ntags: [\"北京\", \"欢乐谷\", \"万圣节\"]\n---\n\n# 万圣节\n\n<SolidImgPlayer :imgs=\"[\n 'https://1.z.wiki/images/20211115/e3bfdd8f81ae49c490eb4399f94401b0.png',\n 'https://2.z.wiki/images/20211115/846433804f5743e191001e740749da96.png',\n 'https://4.z.wiki/images/20211115/9d5e193c25b54604bb2f20cee11c9a2e.png',\n 'https://1.z.wiki/images/20211115/6a88416f20e245a580d6dc3a6cea8c9f.png',\n 'https://2.z.wiki/images/20211115/07056df0262a46caa9d78dc2fa79384a.png',\n 'https://4.z.wiki/images/20211115/ea78efda3c574052871f2db0538a2d3e.png',\n 'https://4.z.wiki/images/20211115/ca7bbbd49d29438b897091999b51e2ef.png',\n 'https://4.z.wiki/images/20211115/f5504c25b1234831bcfd90c28a3f0ddf.png'\n]\" />\n\n\n\n\n\n\n\n古拉古拉: \"啦啦啦\",\n: \"<p>哇，小姐姐好美啊</p>\n\",\n: \"<p>厉害了姐 <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/></p>\n\",\n: \"<p>博主看着憨憨的</p>\n\",\n: \"<p>太棒了吧</p>\n\",\n: \"<p>羡慕</p>\n\",\n: \"<p>🙊</p>\n\",\n: \"<p>Just go go</p>\n\",
life/halloween
path is https://playground.z.wiki/comment/list?path=/life/pad-pasting.html
防窥膜\n\n在淘宝上`15`块钱买了一个防窥膜，刚取到货😝\n\n<ImgView title=\"防窥膜\" url=\"https://1.z.wiki/autoupload/20230130/1KnL.IMG_9546.HEIC.jpg\" :ext-style=\"{display: 'block', margin: '0 auto', width: '300px'}\" />\n\n打开包装，经典的四件套：按板、擦拭巾、软垫、防窥膜\n\n<ImgPlayer width=\"300px\" :imgs=\"[\n 'https://2.z.wiki/autoupload/20230130/f0y8.IMG_9548.HEIC.jpg',\n 'https://1.z.wiki/autoupload/20230130/vZ21.IMG_2635.HEIC.jpg',\n]\" />\n\n摆好手机，开干！！！\n\n<ImgView title=\"防窥膜\" url=\"https://2.z.wiki/autoupload/20230130/Vcca.IMG_2636.HEIC.jpg\" :ext-style=\"{display: 'block', margin: '0 auto', width: '300px'}\" />\n\n\n犹抱琵琶半遮面的防窥膜\n\n<ImgView title=\"防窥膜\" url=\"https://3.z.wiki/autoupload/20230130/S2HP.IMG_2637.HEIC.jpg\" :ext-style=\"{display: 'block', margin: '0 auto', width: '300px'}\" />\n\n先擦干净手机屏幕\n\n<ImgView title=\"防窥膜\" url=\"https://4.z.wiki/autoupload/20230130/C3nI.IMG_2638.HEIC.jpg\" :ext-style=\"{display: 'block', margin: '0 auto', width: '300px'}\" />\n\n\n按上防窥膜\n\n<ImgView title=\"防窥膜\" url=\"https://1.z.wiki/autoupload/20230130/G9BH.IMG_2639.HEIC.jpg\" :ext-style=\"{display: 'block', margin: '0 auto', width: '300px'}\" />\n\n压紧\n\n<ImgPlayer width=\"300px\" :imgs=\"[\n'https://2.z.wiki/autoupload/20230130/gBZE.IMG_2641.HEIC.jpg',\n'https://3.z.wiki/autoupload/20230130/5m5C.IMG_2642.HEIC.jpg',\n'https://4.z.wiki/autoupload/20230130/e0K3.IMG_2645.HEIC.jpg',\n'https://1.z.wiki/autoupload/20230130/L7vF.IMG_2649.HEIC.jpg',\n]\" />\n\n\n没有丝毫气泡，再把防窥膜擦干净，完美\n\n<ImgPlayer width=\"300px\" :imgs=\"[\n'https://2.z.wiki/autoupload/20230130/ScM4.IMG_2650.HEIC.jpg',\n'https://4.z.wiki/autoupload/20230130/PZSQ.IMG_2651.HEIC.jpg',\n]\" />\n\n我这手艺！！！等我失业了取路边摆摊贴膜！！！\n\n<ImgView title=\"防窥膜\" url=\"https://1.z.wiki/autoupload/20230131/f7Gk.221X164-image.png\" />\n: \"羡慕\",\n: \"回复:\"博主也是手艺人啊👍👍\"\n\n------------\n\n厉害了\",\n: \"博主也是手艺人啊👍👍\",
life/pad-pasting
path is https://playground.z.wiki/comment/list?path=/life/love.html
李峋之昌平分峋\n\n<VideoPlayer src=\"https://z.wiki/autoupload/2022-11-12/2d24760e7d674a03a3c5da084e80a9d9.屏幕录制2022-11-12%2021.40.43.mov\" />\n\n源码：[爱心](https://z.wiki/jsbin/coquxevuko/edit?html,output)
life/love
path is https://playground.z.wiki/comment/list?path=/life/wine.html
比我年纪大的酒\n\n今天有幸喝到了一瓶比我年纪还大的酒，91年的酒，已经保存了30年了\n\n<ImgView title=\"比我年纪大的酒\" url=\"https://4.z.wiki/images/20220227/4907eaa1687d495faf3c1d7f9b6fbd8d.png\" />\n\n安徽毫县古井酒厂 -- 古井贡酒\n\n\n### 外观\n\n外观看上去有点发黄，保存的很不错，只跑了瓶颈一小半的酒\n\n<ImgView title=\"比我年纪大的酒\" url=\"https://4.z.wiki/images/20220227/b8b16d4a4b884884a293f24f2a9bc787.gif\" />\n\n### 口感\n\n喝上去，不是特别辣，55度的老酒🍶，浓香型，这种酒真实喝一瓶少一瓶❤️\n\n\n### 尊容\n\n<ImgView title=\"比我年纪大的酒\" url=\"https://4.z.wiki/images/20220227/96600ab4dc7e46448707c3d9deca6e4a.png\" />\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> \",\n: \"<p><a class=\"at\" href=\"#621b187ebcb280285131366e\">@黑猫警长 </a> , 不知道🤷‍♂️😂 年份特别久</p>\n\",\n: \"<p>这酒得多少钱啊👍</p>\n\",\n: \"<p>这酒得多少钱啊👍</p>\n\",
life/wine
path is https://playground.z.wiki/comment/list?path=/life/billiards.html
第一次台球\n\n### 首次体验\n\n团建去打台球😀，第一次体验，针不戳、针不戳\n\n<ImgView title=\"打台球\" url=\"https://1.z.wiki/images/20211118/8883c3274fb648febfcdc8c55b43329a.png\" />\n\n<ImgView title=\"打台球\" url=\"https://2.z.wiki/images/20211118/ae14f0c1715a45df937ff40d3c5a9036.png\" />\n\n<ImgView title=\"打台球\" url=\"https://3.z.wiki/images/20211118/faf34b774e1f4d66895e206c24c76f19.png\" />\n\n关注下，改天周末继续~\n\n### 第二次体验\n\n在大众点评上买了一张18元一小时的优惠券，去了才发现，啊，只能工作日使用，😌，不过现场八折优惠啊，👏👏\n\n<ImgView title=\"打台球\" url=\"https://4.z.wiki/images/20211121/0180c64a58b048f48c299a18808ef3c0.png\" />\n\n<ImgView title=\"打台球\" url=\"https://4.z.wiki/images/20211121/2322c9eead474a4e8c5c9307e570ecb7.png\" />\n: \"哇\",\n: \"<p>关键是有妹子啊。</p>\n\",
life/billiards
path is https://playground.z.wiki/comment/list?path=/life/solana.html
---\nmeta:\n - name: description\n content: 朝阳公园 蓝色港湾 夜游蓝色港湾\n - name: keywords\n content: 朝阳公园 蓝色港湾 夜游蓝色港湾\n---\n# 夜游蓝色港湾\n\n<ImgView title=\"朝阳公园蓝色港湾\" url=\"https://4.z.wiki/images/20220130/8a6e349436af44218e1afba22bc71004.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://4.z.wiki/images/20220130/25371628a081486db5c22379de6b0ff6.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://4.z.wiki/images/20220130/d43cd1b6eeb54e67a969a2c258e8cb5d.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://4.z.wiki/images/20220130/31f4462addd04db6921ae7a9535a82de.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://4.z.wiki/images/20220130/63e60d74f2e3407d92af52a18a1e3ab0.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://4.z.wiki/images/20220130/48ffb652dbbf467c9aa220b1209f28db.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://5.z.wiki/images/20220130/dfad83939b61470d86d249e3adc985bb.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://5.z.wiki/images/20220130/64f17019349f425d9dcabbab4e6022cf.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://5.z.wiki/images/20220130/ca3623e3ce884a9d9382ee58c02c5d40.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://8.z.wiki/images/20220130/303070660fa14f0cb3bd1903346568a4.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://8.z.wiki/images/20220130/854dcd0bf1104713840cedc9e53a37f4.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://8.z.wiki/images/20220130/c7805cdb0b8042b4b6dbbefb61ec9f7e.png\" />\n\n<ImgView title=\"朝阳公园-蓝色港湾\" url=\"https://8.z.wiki/images/20220130/984879a2e01947ab895d728e0b706a8a.png\" />\n
life/solana
path is https://playground.z.wiki/comment/list?path=/life/olympic-forest-park.html
五四奥森游\n\n带着小仙女、顶着烈日逛奥森\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://1.z.wiki/images/20220503/9f51acd318bd409dba1c537c98021315.png\" />\n\n<ImgWithTitle :img=\"{url: 'https://z.wiki/images/20220503/9ffada90d54b4599adc2f38aad135056.png', title: '北京奥林匹克塔', desc: '北京奥林匹克塔', bgColor: 'rgb(255 255 255 / 34%)' }\" />\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://3.z.wiki/images/20220503/6cb4d997f2c14ec19c59b9d77d57ee54.png\" />\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://2.z.wiki/images/20220503/c6923aff13ca418d814ba27a7ddc6c6c.png\" />\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://3.z.wiki/images/20220503/be029d0874e64de99d5ec80b5f7229a2.png\" />\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://4.z.wiki/images/20220503/7fff13d4b6fb46529af93a34e9dfabd0.png\" />\n\n<ImgView title=\"奥林匹克森林公园\" url=\"https://4.z.wiki/images/20220503/98b11fac910c46b297c8b7918493b788.png\" />\n\n<ImgWithTitle :img=\"{url: 'https://4.z.wiki/images/20220503/6dfcdb71f0734c0d971eb163b666c9b3.png', title: '采花大盗', desc: '现代版采花大盗😏😏', bgColor: 'rgb(255 255 255 / 34%)'}\" />\n: \"不错去\",
life/olympic-forest-park
path is https://playground.z.wiki/comment/list?path=/life/cloud.html
锦绣河山\n\n<ImgView title=\"锦绣河山\" url=\"https://9.z.wiki/autoupload/20240228/COfh.2026X2702-image.png\" />\n
life/cloud
path is https://playground.z.wiki/comment/list?path=/life/tsingtao.html
青岛之旅\n\n2021年国庆期间，去青岛爬崂山、踩沙滩、拍夜景 (p≧w≦q)\n\n<ImgView title=\"青岛夜景\" url=\"https://6.z.wiki/images/20211117/f9e46474258f46b88d0cb4a76f609e4e.png\" />\n\n<ImgView title=\"青岛夜景\" url=\"https://6.z.wiki/images/20211117/9d653213e9454bb9aed55a05cb040707.png\" />\n\n<ImgView title=\"青岛夜景\" url=\"https://4.z.wiki/images/20211117/c42479b883634435b278228ec64f5bbe.png\" />\n\n<ImgView title=\"青岛夜景\" url=\"https://6.z.wiki/images/20211117/1a4433fa92014ba494174a207be9e329.png\" />: \"回复:\"青岛是个好地方😄\"\n\n------------\n\n+1\",\n: \"青岛是个好地方😄\",\n: \"<p>三月去比较好</p>\n\",\n: \"<p>老厉害了，姐</p>\n\",\n: \"<p>帅</p>\n\",\n: \"<p>拍得不错</p>\n\",\n: \"<p>下次能带上我吗，想和你一起去 <img alt=\"lovely\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/09/2018new_keai_org.png\"/></p>\n\",\n: \"<p> <img alt=\"sleepy\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/2018new_kun_thumb.png\"/></p>\n\",
life/tsingtao
path is https://playground.z.wiki/comment/list?path=/life/detection-of-covid-19.html
新冠感染检测\n\n<ImgView title=\"新冠感染检测\" url=\"https://1.z.wiki/autoupload/20221209/dipZ.1269X1080-image.png\" />\n: \"回复:&quot;亲测有效&quot;\n\n------------\n\n是个狠人\",\n: \"亲测有效\",
life/detection-of-covid-19
path is https://playground.z.wiki/comment/list?path=/life/sla-compensation.html
阿里云 SLA 赔付\n\n<ImgView title=\"阿里云 SLA 赔付\" url=\"https://7.z.wiki/autoupload/20231124/UoCJ.220X1470-image.png\" />\n\n> 您好，非常抱歉阿里云11月12日发生的产品故障对您产生的影响。根据阿里云向您承诺的《服务等级协议》，本次您的SLA赔偿金总额应为0.82元，我们将为您实际发放总额50.00元。您可点击链接前往控制台-“SLA赔偿”查看并领取。 如您有任何疑问，欢迎联系您的商务经理、拨打400-80-13260转9、或提交工单联系我们。我们再次诚挚地为此次故障道歉。\n\n2023.12.04 追加\n\n差评，居然要我自己主动申请。。。\n\n\n<ImgView title=\"阿里云 SLA 赔付\" url=\"https://5.z.wiki/autoupload/20231203/tdg5.700X2728-image.png\" />\n\n\n<ImgView title=\"阿里云 SLA 赔付\" url=\"https://8.z.wiki/autoupload/20231203/33n3.616X2710-image.png\" />\n: \"一句话很高\",
life/sla-compensation
path is https://playground.z.wiki/comment/list?path=/life/usstock.html
蔚来股东大会\n\n<ImgView title=\"蔚来股东大会\" url=\"https://7.z.wiki/autoupload/2022-09-21/fb97285d4e5c4d38aa7de56e17d3523b.image.png\" />\n\n\n蛤？蔚来开股东大会居然叫我参加？等我成了大股东了再去吧😂\n\n<ImgView title=\"蔚来股东大会\" url=\"https://9.z.wiki/autoupload/2022-09-21/2b84ebc3302a4e9392a91b57bf406af0.image.png\" />: \"大股东哇\",
life/usstock
path is https://playground.z.wiki/comment/list?path=/snippets/htaccess/index.html
代码片段-htaccess\n\n\n<LastPost :random=\"true\" prefix=\"/snippets/htaccess\" :number=\"100\" />
snippets/htaccess/index
path is https://playground.z.wiki/comment/list?path=/snippets/htaccess/301-redirects.html
301跳转\n\n\n单页面：\n\n```\nRedirect 301 /oldpage.html https://www.yoursite.com/newpage.html\nRedirect 301 /oldpage2.html https://www.yoursite.com/folder/\n```\n\n整站：\n\n```\nRedirect 301 / https://newsite.com/\n```\n
snippets/htaccess/301-redirects
path is https://playground.z.wiki/comment/list?path=/snippets/robots/index.html
代码片段-robots\n\n<LastPost :random=\"true\" prefix=\"/snippets/robots\" :number=\"100\" />\n
snippets/robots/index
path is https://playground.z.wiki/comment/list?path=/snippets/robots/robots.txt.html
robots.txt\n\n\n# robots.txt 是什么\n\n`robots.txt` 是位于网站根目录下的纯文本文件，用于告知网络爬虫\"改网站中哪些可以被爬取，哪些不可以被爬取\"。\n\n`robots.txt` 只是约定俗成的协议，`Google`、百度、`bing`等爬虫都会遵守该规范，但并非所有搜索引擎都支持，故通过`robots.txt`无法 100% 地保证爬取效果（屏蔽效果）。\n\n# robots.txt 怎么用\n\n允许所有的爬虫：\n\n```\nUser-agent: *\nAllow:/\n```\n\n\n仅允许特定的爬虫：（name_spider用真实名字代替）\n\n```\nUser-agent: name_spider\nAllow:\n```\n\n\n拦截所有的爬虫：\n\n```\nUser-agent: *\nDisallow: /\n```\n\n禁止所有爬虫访问特定目录：\n\n```\nUser-agent: *\nDisallow: /cgi-bin/\nDisallow: /images/\nDisallow: /tmp/\nDisallow: /private/\n```\n\n\n仅禁止坏爬虫访问特定目录（BadBot用真实的名字代替）：\n\n```\nUser-agent: BadBot\nDisallow: /private/\n```\n\n\n禁止所有爬虫访问特定文件类型：\n\n```\nUser-agent: *\nDisallow: /*.php$\nDisallow: /*.js$\nDisallow: /*.inc$\nDisallow: /*.css$\n```\n\n\n# 非标准扩展协议\n\n## Sitemaps\n\n目前主流搜索引擎均支持`Sitemap`，`sitemap`用于告诉浏览器网站都包含哪些`URL`，\n\n使用方法（写到 `robots.txt` 中）\n\n```shell\nSitemap: <path-to-sitemap.xml>\n```\n\n## Crawl-delay 指令\n\n`Crawl-delay`参数设置爬虫的爬取时间间隔，避免对服务器的性能造成影响\n\n```\nUser-agent: *\nCrawl-delay: 10\n# 每次爬取等待10秒后继续爬取其他链接\n```\n\n# 其他替代品\n\n`robots.txt`是最为广泛使用的方法，\n此外也可以通过`robots Meta`标签针对特定页面做设置。\n\n```html\n<head>\n <meta name=\"robots\" content=\"noindex,nofollow\" />\n</head>\n```\n\n更详细介绍：[敖武的博客-robots.txt](https://z.wiki/misc/robots.txt.html)
snippets/robots/robots.txt
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/set-cookie.html
cookie 操作\n\n\n设置`cookie`\n\n```JavaScript\nfunction setCookie(name, value, domain, expriesDays, encode = false) {\n const Days = expriesDays || 10\n const exp = new Date()\n exp.setTime(exp.getTime() + Days change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 24 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 60 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 60 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 1000)\n value = encode ? escape(value) : value\n document.cookie = `${name}=${value};domain=${domain};path=/;expires=${exp.toUTCString()}`\n}\n```\n\n读取`cookie`\n\n```JavaScript\nfunction getCookie(k) {\n const res = RegExp('(^|; )' + encodeURIComponent(k) + '=([^;]*)').exec(document.cookie)\n return res && res[2]\n}\n```
snippets/javascript/set-cookie
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/download-csv.html
前端导出CSV文件\n\n\n实现代码\n\n```JavaScript\nimport lodash from 'lodash';\n\n/**\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 将 JSON 数据导出为 CSV 文件\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work @param jsonArray\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work @param keyMap\n */\nexport function downloadToCsv(jsonArray: object[], keyMap: object, fileName = '下载') {\n // \uFEFF 是为解决中文乱码问题\n let csvContent = 'data:text/csv;charset=utf-8,\uFEFF';\n\n if (jsonArray && jsonArray.length) {\n const keys = lodash.uniq(\n lodash.flatten(\n jsonArray.map((rowData) => {\n return Object.keys(rowData);\n }),\n ),\n );\n jsonArray.forEach((rowData: any, index: number) => {\n if (index == 0) {\n // 第一行，保存字段头信息\n const headerRow = keys\n .map((key) => {\n return (keyMap && keyMap[key]) || key;\n })\n .join(',');\n csvContent += `${headerRow}\r\n`;\n }\n const row = keys\n .map((key) => {\n const converter = keyMap['_' + key];\n if (converter) {\n // _ 开头的是转换函数，用于将英文、数字等转换成中文\n return converter(lodash.get(rowData, key, '') + '' ?? '');\n } else {\n console.info('no converter', key);\n return JSON.stringify(lodash.get(rowData, key, '') ?? '');\n }\n })\n .join(',');\n csvContent += `${row}\r\n`;\n });\n\n const encodedUri = encodeURI(csvContent);\n const a = document.createElement('a');\n a.href = encodedUri;\n a.target = '_blank';\n a.download = `${fileName}.csv`;\n a.click();\n } else {\n console.error('无数据，无法下载');\n }\n}\n\n```\n\n使用方法\n\n```JavaScript\n downloadToCsv(dataWithTaskContent, {\n taskName: '任务名称',\n status: '任务状态',\n _status: (s) => { // _status 方法用于将枚举值转换成中文\n return {0: '进行中', 1: '已完成'}[s]\n },\n startDate: '任务开始时间',\n endDate: '任务结束时间',\n gmtCreate: '任务创建时间',\n });\n```
snippets/javascript/download-csv
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/html-to-dom.html
html 字符串转 dom\n\n\nhtml 字符串转 dom：\n\n```js\nfunction htmlToElement(html) {\n var template = document.createElement('template');\n html = html.trim(); // 避免返回空文本 node 节点\n template.innerHTML = html;\n return template.content.firstChild;\n}\n```
snippets/javascript/html-to-dom
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/debounce.html
防抖函数\n\n防抖函数是一种优化技术，用来限制某个函数在一定时间内被调用的频率。当事件被触发后，它会等待一段时间，如果在这段时间内再次被触发，那么它会重新开始等待。\n\n下面是一个使用`JavaScript`实现的简单防抖函数：\n\n\n```javascript\nfunction debounce(func, wait) {\n let timeout;\n\n return function() {\n const context = this;\n const args = arguments;\n \n clearTimeout(timeout);\n\n timeout = setTimeout(() => {\n func.apply(context, args);\n }, wait);\n };\n}\n```: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bomb.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/greddy.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/greddy.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/greddy.png\" /> \",\n: \" :shy: \",
snippets/javascript/debounce
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/timeago.html
时间戳转 X天之前、X小时之前\n\n\n该代码片段函数名为`timeAgo`，将时间戳转换为 X天之前、X小时之前\n\n```JavaScript\nvar timeAgo = function (timestamp) {\n // 补全为13位\n var arrTimestamp = (timestamp + '').split('');\n for (var start = 0; start < 13; start++) {\n if (!arrTimestamp[start]) {\n arrTimestamp[start] = '0';\n }\n }\n timestamp = arrTimestamp.join('') change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 1;\n\n var minute = 1000 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 60;\n var hour = minute change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 60;\n var day = hour change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 24;\n var halfamonth = day change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 15;\n var month = day change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 30;\n var now = new Date().getTime();\n var diffValue = now - timestamp;\n\n // 如果本地时间反而小于变量时间\n if (diffValue < 0) {\n return '不久前';\n }\n\n // 计算差异时间的量级\n var monthC = diffValue / month;\n var weekC = diffValue / (7 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work day);\n var dayC = diffValue / day;\n var hourC = diffValue / hour;\n var minC = diffValue / minute;\n\n // 数值补0方法\n var zero = function (value) {\n if (value < 10) {\n return '0' + value;\n }\n return value;\n };\n\n // 使用\n if (monthC > 12) {\n // 超过1年，直接显示年月日\n return (function () {\n var date = new Date(timestamp);\n return date.getFullYear() + '年' + zero(date.getMonth() + 1) + '月' + zero(date.getDate()) + '日';\n })();\n } else if (monthC >= 1) {\n return parseInt(monthC) + \"月前\";\n } else if (weekC >= 1) {\n return parseInt(weekC) + \"周前\";\n } else if (dayC >= 1) {\n return parseInt(dayC) + \"天前\";\n } else if (hourC >= 1) {\n return parseInt(hourC) + \"小时前\";\n } else if (minC >= 1) {\n return parseInt(minC) + \"分钟前\";\n }\n return '刚刚';\n};\n```
snippets/javascript/timeago
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/index.html
代码片段-js\n\n\n<LastPost :random=\"true\" prefix=\"/snippets/javascript\" :number=\"100\" />\n
snippets/javascript/index
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/inject-script-dynamic.html
动态插入 js 脚本\n\n\n动态插入 js 脚本\n\n```JavaScript\nvar injectScript = (function () {\n var relative = document.getElementsByTagName('script')[0];\n\n return function (src, callback) {\n var script = document.createElement('script');\n script.async = 1;\n script.src = src;\n if (callback) script.onload = callback.call(script);\n relative.parentNode.insertBefore(script, relative);\n return script;\n }\n})();\n```
snippets/javascript/inject-script-dynamic
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/sub-string-by-bytelength.html
按字节长度截取字符串\n\n\n按字节长度截取字符串\n\n```JavaScript\nfunction sub_string(str, len){\n var newLength = 0;\n var newStr = \"\";\n var chineseRegex = /[^\x00-\xff]/g;\n var singleChar = \"\";\n var strLength = str.replace(chineseRegex,\"**\").length;\n for(var i = 0;i < strLength;i++) {\n singleChar = str.charAt(i).toString();\n if(singleChar.match(chineseRegex) != null) {\n newLength += 2;\n } else {\n newLength++;\n }\n if(newLength > len) {\n break;\n }\n newStr += singleChar;\n }\n return newStr;\n}\n```
snippets/javascript/sub-string-by-bytelength
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/sleep.html
sleep\n\n\nsleep 方法：\n\n```js\nfunction sleep(milliseconds): Promise<boolean> {\n return new Promise((resolve) => {\n setTimeout(() => {\n resolve(milliseconds);\n }, milliseconds);\n });\n}\n```\n\n使用方法：\n\n```js\nasync function bizMethod() {\n // ... do something\n await sleep(1000) // sleep 1秒\n // ... do something else\n}\n```\n\n
snippets/javascript/sleep
path is https://playground.z.wiki/comment/list?path=/snippets/javascript/csv-to-json.html
csv 转 json\n\n\n实现代码\n\n```JavaScript\nconst CSVToJSON = (data, delimiter = ',') => {\n const titles = data.slice(0, data.indexOf('\n')).split(delimiter);\n return data\n .slice(data.indexOf('\n') + 1)\n .split('\n')\n .map(v => {\n const values = v.split(delimiter);\n return titles.reduce(\n (obj, title, index) => ((obj[title] = values[index]), obj),\n {}\n );\n });\n};\n```\n\n效果\n\n```JavaScript\nCSVToJSON('col1,col2\na,b\nc,d');\n// [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];\nCSVToJSON('col1;col2\na;b\nc;d', ';');\n// [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];\n```
snippets/javascript/csv-to-json
path is https://playground.z.wiki/comment/list?path=/snippets/mac/index.html
代码片段-Mac\n\n<LastPost :random=\"true\" prefix=\"/snippets/mac\" :number=\"100\" />\n
snippets/mac/index
path is https://playground.z.wiki/comment/list?path=/snippets/mac/apache.html
内置 Apache\n\n\n### 启动内置 Apache 服务\n\n```shell\nsudo apachectl start\n```\n\n### 关闭内置 Apache 服务\n\n```shell\nsudo apachectl stop\n```\n\n### 其他\n\n1. 站点跟目录 `/Library/WebServer/Documents/`\n2. 配置路径 `/etc/apache2/httpd.conf`
snippets/mac/apache
path is https://playground.z.wiki/comment/list?path=/snippets/index.html
代码片段\n\n<LastPost :random=\"true\" prefix=\"/snippets/css\" :number=\"10\" title=\"css 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/htaccess\" :number=\"10\" title=\"htaccess 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/html\" :number=\"10\" title=\"html 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/javascript\" :number=\"10\" title=\"javascript 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/mac\" :number=\"10\" title=\"mac 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/nginx\" :number=\"10\" title=\"nginx 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/robots\" :number=\"10\" title=\"robots 代码片段\"/>\n\n<LastPost :random=\"true\" prefix=\"/snippets/shell\" :number=\"10\" title=\"shell 代码片段\"/>
snippets/index
path is https://playground.z.wiki/comment/list?path=/snippets/html/index.html
代码片段-html\n\n\n<LastPost :random=\"true\" prefix=\"/snippets/html\" :number=\"100\" />
snippets/html/index
path is https://playground.z.wiki/comment/list?path=/snippets/html/no-spider.html
通过 meta 标签禁止爬虫爬取\n\n\n所有的爬虫走开：\n\n```html\n<meta name=\"robots\" content=\"noindex\">\n```\n\n不要爬这个链接：\n\n```html\n<a href=\"privatepage.html\" rel=\"nofollow\">私有链接</a>\n```
snippets/html/no-spider
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/inject.html
nginx 注入内容\n\n\n通过`nginx`进行反向代理的时候可以通过`sub_filter`指令进行内容替换、内容注入\n\n```Nginx\nlocation / {\n ...\n sub_filter </head>\n '<style>.navbar {display: none;} .chatroom {display: none;}</style></head>';\n sub_filter_once on;\n ...\n}\n```\n\n\n### 注意事项一：\n\n如果被代理的服务返回的是`gzip`压缩的内容，则上述指令无效，可以通过`proxy_set_header Accept-Encoding \"\";`确保被代理的服务返回非压缩内容。\n\n### 注意事项二：\n\n\n`sub_filter` 指令由`http_sub_module`模块提供，`nginx`默认没有安装，可通过`nginx -V`查看已安装的模块。\n\n\n\n\n
snippets/nginx/inject
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/proxy.html
nginx 反向代理并追加参数\n\n\n\n反向代理并追加参数\n```nginx\nlocation /v1/resources {\n resolver 8.8.8.8;\n proxy_pass https://domain.com$uri?key=value\n}\n```\n\n设置`resolver`是因为`proxy_pass`转发到某个域名时会尝试自行从`DNS`缓存中获取域名解析后的`ip`，\n由于未设置域名解析服务导致如果没有缓存就会报错。
snippets/nginx/proxy
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/nginx-header.html
nginx header 添加与删除\n\n\n接口和前端部署在不同与名下时可以通过`nginx` 添加`cors header`解决跨域问题\n\n## 添加 header\n\n```\nlocation / {\n ...\n add_header X-Frame-Options SAMEORIGIN;\n add_header X-Content-Type-Options nosniff;\n add_header Access-Control-Allow-Origin *; # 允许跨域访问\n}\n```\n\n## 删除 header\n\n网站博客部署在`OSS`上，访问`oss`的页面时都会自动下载，\n原因是：响应头中添加了`x-oss-force-download`、`Content-Disposition: attachmeng`等字段，\n导致浏览器自动下载，故通过`nginx`转发时需要对`header`进行操作\n\n\n```\nlocation / {\n ...\n proxy_hide_header Content-Disposition;\n proxy_hide_header x-oss-force-download;\n}\n```
snippets/nginx/nginx-header
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/limit-req.html
nginx 限流\n\n\n### nginx 限流\n\n\n\n```\nhttp {\n limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;\n ...\n server {\n ...\n location / {\n ...\n limit_req zone=one burst=5 nodelay;\n }\n }\n}\n```\n
snippets/nginx/limit-req
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/index.html
代码片段-Nginx\n\n\n<LastPost :random=\"true\" prefix=\"/snippets/nginx\" :number=\"100\" />
snippets/nginx/index
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/nginx-log.html
nginx 打印请求体（body）内容\n\n\n\n通过`nginx`打印请求体中的参数\n```nginx\nhttp {\n\n log_format postdata $request_body;\n\n server { \n location / {\n access_log /var/log/nginx/postdata.log postdata;\n proxy_paass http://localhost:8080;\n }\n }\n}\n\n```\n
snippets/nginx/nginx-log
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/nginx-cache.html
nginx 缓存\n\n\n### 静态资源缓存\n\n设置为一天缓存，更多缓存配置可参考[nginx 缓存](https://z.wiki/tech/nginx-cache.html)\n\n```\nlocation ~* .(?:css|js)$ {\n expires 1d;\n add_header Cache-Control \"public\";\n}\n```
snippets/nginx/nginx-cache
path is https://playground.z.wiki/comment/list?path=/snippets/nginx/redirect.html
nginx 重定向 redirect\n\n\n\n单页面重定向\n```nginx\nserver {\n location = /oldpage.html {\n return 301 http://example.org/newpage.html;\n }\n}\n```\n\n\n整站重定向\n```nginx\nserver {\n server_name old-site.com\n return 301 $scheme://new-site.com$request_uri;\n}\n```\n\n\n子路径重定向\n```nginx\nlocation /old-site {\n rewrite ^/old-site/(.*) http://example.org/new-site/$1 permanent;\n}\n```\n\n
snippets/nginx/redirect
path is https://playground.z.wiki/comment/list?path=/snippets/shell/curl.html
curl\n\n\n\n\n`curl`是和网络请求相关使用最频繁的工具，甚至某种程度上可以替代`postman`来进行接口测试。\n\n\n## 限速\n\n```shell\n# 限速 `10k` 进行页面下载\ncurl -i -L --limit-rate 10k z.wiki \n```
snippets/shell/curl
path is https://playground.z.wiki/comment/list?path=/snippets/shell/find-exec.html
find 并执行其他命令\n\n\n先通过`find`查找文件并对文件执行特定命令\n\n通过`-exec`选项实现\n\n```shell\nfind . -type f -exec ls -l {} \;\n```\n\n通过`xargs`实现\n```shell\nfind . -maxdepth 1 -name \"*.log\" | xargs -i du -hs {}\n```\n\n### 应用实战一\n\n查找所有项目并自动拉取`master`分支上的最新代码\n\n```shell\nfind . -type d -depth 1 -exec git --git-dir={}/.git --work-tree=$PWD/{} pull origin master \;\n```\n\n### 应用实战二\n\n查找特定的文件并清空内容\n\n```shell\nfind . -type f -name \"user*\" -exec bash -c 'echo 0x0 > {}' \;\n```\n\n找到所有`user`开头的文件，并对每个文件执行脚本`echo 0x0 > {}`清空文件内容，\n当脚本执行的时候`{}`会被动态替换成当前文件名，\n最后结尾的`\;`表示该分号是执行子命令的内容，不是`find`需要处理的分号。
snippets/shell/find-exec
path is https://playground.z.wiki/comment/list?path=/snippets/shell/file.html
文件操作\n\n\n查看所有文件、文件夹大小\n\n```shell\ndu -hs change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work | sort -h\n```\n\n\n
snippets/shell/file
path is https://playground.z.wiki/comment/list?path=/snippets/shell/string-compare.html
shell 中进行字符串比较\n\n\n\n\n判断字符串是否相等\n\n```shell\n#!/bin/bash\n\nVAR1=\"one\"\nVAR2=\"two\"\n\nif [ \"$VAR1\" = \"$VAR2\" ]; then\n echo \"Strings are equal.\"\nelse\n echo \"Strings are not equal.\"\nfi\n```\n\n\n字符串子串判断\n\n```shell\n#!/bin/bash\n\nVAR='GNU/Linux is an operating system'\nif [[ $VAR == *\"Linux\"* ]]; then\n echo \"It's there.\"\nfi\n```\n\n其他判断方法\n\n```\nvar1 = var2 // 判断 var1 和 var2 相等\nvar1 != var2 // 判断 var1 和 var2 不相等\nvar1 < var2 // 判断 var1 比 var2 小\nvar1 > var2 // 判断 var1 比 var2 大\n-n var1 // 判断 var1 长度不为 0\n-z var1 // 判断 var1 长度为 0\n-d file // 判断 file 为目录\n-e file // 判断 file 存在\n-w file // 判断 file 存在并可写入\n-r file // 判断 file 存在并可读\n-s file // 判断 file 存在并不为空\n-f file // file 存在并且为文件\n-O file // file 存在并且 owner 为当前用户\n-G file // file 存在并且 owner 和当前用户同为一个 group\n-x file // file 存在并且具有可执行权限\nfA -nt fB // 判断 文件A 比 文件B 新\nfA -ot fB // 判断 文件A 比 文件B 旧\n```
snippets/shell/string-compare
path is https://playground.z.wiki/comment/list?path=/snippets/shell/bc.html
数学计算-bc\n\n\n\n## 数学计算\n\n> `bc` 全称 `basic calculator`，支持加减乘除关系运算等多种运算方式\n\n进行基础的数学计算\n\n```shell\necho \"1.356 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 1.2\" | bc -l\necho '( 32 / 5 )' | bc\necho '( 32 / 5 ) change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 9 ' | bc\n```\n\n设定小数精度\n\n```shell\necho 'scale=2; ( 32 / 5 )' | bc\necho 'scale=2; ( 32 / 5 ) change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 9' | bc\n\n```
snippets/shell/bc
path is https://playground.z.wiki/comment/list?path=/snippets/shell/gzip.html
查找文件并进行 gzip\n\n查找 js css 文件并进行 gzip\n\n\n```shell\nfind . \( -name \"*\.js\" -o -name \"*\.css\" \) -exec bash -c 'echo Compressing \"{}\" && gzip -c --best \"{}\" > \"{}.gz\"' \;\n```\n
snippets/shell/gzip
path is https://playground.z.wiki/comment/list?path=/snippets/shell/index.html
代码片段-shell\n\n\n<LastPost :random=\"true\" prefix=\"/snippets/shell\" :number=\"100\" />: \"我**能不能搜到这个评论\",\n: \"我看一下能不能搜到这个评论\",
snippets/shell/index
path is https://playground.z.wiki/comment/list?path=/snippets/shell/create-big-file.html
创建大文件\n\n\n\n### 使用`dd`创建大文件\n\n```shell\ndd if=/dev/zero of=./test.file bs=1024 count=1M\n```\n\n`dd`会不停从`/dev/zero`中读取数据并写入`./test.file`中，在创建大文件时会消耗一定时间。\n\n### 使用`fallocate`创建大文件\n\n```shell\nfallocate -l 10G gentoo_root.img\n```\n\n\n`fallocate`是创建大文件的最优选择，磁盘会直接给该文件分配指定的空间，\n由于不会写入内容所以创建速度极快。\n
snippets/shell/create-big-file
path is https://playground.z.wiki/comment/list?path=/snippets/shell/bg.html
后台运行程序\n\n\n`linux`后台运行程序的方式\n\n### 方式一\n\n`${command} &`\n\n该方式可以让程序后台执行，但同时日志会实时输出到终端。通过`${command} > tmp.log 2>&1 &`可以将日志输出到文件`tmp.log`中。\n\n命令执行后会输出进程`ID`，通过该进程`ID`可以查看或管理进程。\n\n缺点：终端终止的时候运行的程序也会终止。\n\n\n### 方式二\n\n`nohup ${command} &`\n\n功能同上，但是终端终止的时候程序不会终止。\n\n\n### 其他相关命令\n\n`jobs`：查看当前在后台运行的程序。\n`fg`：将后台运行的程序放到前台。\n`bg`：将后台挂起的程序放到后台继续运行，程序依然会占据标准输入流、标准输出流，终端一旦关闭程序也会关闭。\n`Ctrl+Z`：将当前运行的程序放到后台执行。
snippets/shell/bg
path is https://playground.z.wiki/comment/list?path=/snippets/shell/exclude-in-find-and-grep.html
find、grep 排除指定目录\n\n\n通过`find`、`grep`查找文件、内容的时候排查指定目录（如`node_modules`）\n\n## grep\n```shell\ngrep -i --exclude-dir=node_modules -r \"content\" *\n```\n\n> 通过`grep`查找内容速度过慢时，推荐使用，参考文档 [rgrep](https://z.wiki/tech/ripgrep.html)\n\n## find\n```shell\nfind . -name \"package.json\" ! -path \"*node_modules*\"\n```\n
snippets/shell/exclude-in-find-and-grep
path is https://playground.z.wiki/comment/list?path=/snippets/shell/crontab.html
crontab\n\n\n\n\n`centos 8`默认已安装`crontab`，通过`crontab`可以设置周期性调度任务、启动时任务。\n\n`crontab`中的任务分为用户任务，系统级任务。\n\n## 用户任务\n\n查看用户任务\n```shell\ncrontab -l\n```\n\n编辑用户任务\n```shell\ncrontab -e\n```\n\n清空任务\n```shell\ncrontab -r\n```\n\n注：用户任务配置在目录`/var/spool/cron`下\n\n\n## 系统级任务\n系统级任务配置在`/etc/crontab`中，可配置定时任务，也可配置系统启动时需要执行的任务\n\n> 某些任务需要`root`账号启动，可配置在系统级任务中\n> 如：`nginx`默认占用`80`、`443`等特殊端口，而`centos`中，`1000`以内的端口需要`root`账号才能使用\n\n```shell\nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=root\n\n# For details see man 4 crontabs\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# | .------------- hour (0 - 23)\n# | | .---------- day of month (1 - 31)\n# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...\n# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# | | | | |\n# change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work user-name command to be executed\n\n@reboot root /home/path/start.sh # 系统启动时执行的任务\n```\n\n## 查看日志\n\n`crontab` 日志目录为 `/var/log/cron`\n\n\n## 其他类似方案\n\n### pm2\n\n`pm2`是基于`nodejs`的进程管理工具，可以配合`shell`执行周期性任务，\n也可以用来管理开机自启任务（通过保存进程状态，在开机时恢复进程状态，这一点上比`crontab`好用）。\n\n#### 自动部署服务\n\n编写`shell`脚本，从`github`拉去代码、编译构建、部署到`nginx`中\n```shell\ncd path-of-project\ngit pull\n\nnpm i\nnpm run build\n\nmv -f dist/* path-of-nginx\n\nsleep 60 # 这里 sleep 一分钟是为了避免 pm2 过于频繁的执行该脚本\n```\n\n通过`pm2`持续性的运行该脚本\n```shell\npm2 start shell-path\n```\n\n如果需要开机自动启动该脚本，可以通过`pm2 save`保存进程状态，开机便会自动运行。\n\n\n> 注：在使用 `pm2 save`之前需要确保`pm2`本身能够开机启动，执行以下命令并根据提示设置自启动`pm2 startup`\n\n### chkconfig\n\n\n参考文档： [chkconfig](https://www.linuxjournal.com/article/4445)\n\n
snippets/shell/crontab
path is https://playground.z.wiki/comment/list?path=/snippets/shell/progress-bar.html
shell 进度条\n\n\n在`shell`中输出进度条\n\n## 初级进度条\n\n```\n#!/bin/bash\n\nfor((i=1;i<100;i++))\ndo\n printf \"\u001b[1000D 进度：${i}\";\n sleep 1;\ndone\n```\n\n运行效果：\n\n![](https://4.z.wiki/images/20220408/46a17eb651684ba49d960f87a4dd7d11.gif)\n\n## 高级进度条\n\n```\n#!/bin/bash\ni=0\nstr=\"\"\narry=(\"\\\" \"|\" \"/\" \"-\")\nwhile [ $i -le 100 ]\ndo\n let index=i%4\n printf \"\u001b[1000D[%-100s] %d %c\" \"$str\" \"$i\" \"${arry[$index]}\"\n sleep 0.1\n let i=i+1\n str+=\"#\"\ndone\necho \"\"\n```\n\n运行效果：\n\n![](https://1.z.wiki/images/20220408/1ceac5fd91294989b9cc7fdd09dffbf0.gif)\n\n> 更信息内容可查看 [ANSI转义序列](https://z.wiki/tech/my-first-post-in-stackoverflow.html);
snippets/shell/progress-bar
path is https://playground.z.wiki/comment/list?path=/snippets/shell/num-seq.html
数字序列\n\n\n```shell\n#!/bin/bash\nfor n in {1..5}\ndo\n echo $n\ndone\n```
snippets/shell/num-seq
path is https://playground.z.wiki/comment/list?path=/snippets/shell/loop.html
循环执行\n\n\n循环执行，间隔`5`秒\n\n```shell\nwhile true; do\n sleep 5\n pwd\ndone\n```
snippets/shell/loop
path is https://playground.z.wiki/comment/list?path=/snippets/shell/base64.html
base64 操作\n\n\n经常需要将服务器上的照片复制到本地，\n如果本地直连服务器，可以通过`scp`进行复制，\n如果有网络隔离，\n可以先将照片转`base64`编码再进行文本复制、还原照片。\n\n```shell\nbase64 <file-name>\n```\n\n\n
snippets/shell/base64
path is https://playground.z.wiki/comment/list?path=/snippets/shell/rgeo.html
逆地理\n\n\n根据坐标获取道路名称：\n\n```shell\ncurl -s \"https://restapi.amap.com/v3/geocode/regeo?output=json&location=116.310003,39.991957&key=xxx&radius=1000&extensions=all\" | jq . | grep \"name\" | head -1 | awk -F \":\" '{print $2}' | sed 's/\"//g' | sed 's/,//g' \n```\n\n注1：`Mac` 系统安装`GNU`版的`curl`\n\n注2：`xxx`需替换，请自动去 [高德地图 LBS](https://lbs.amap.com/) 注册
snippets/shell/rgeo
path is https://playground.z.wiki/comment/list?path=/snippets/shell/lsof.html
lsof\n\n\n`lsof` 是一个列出所有打开文件的工具，可以用来检查打开的文件、网络连接、进程等信息。下面是 `lsof` 常用的功能和用途：\n\n\n<ImgView title=\"lsof\" url=\"https://1.z.wiki/autoupload/20230708/BlFy.450X800-image.png\" />\n\n\n1. 查看文件\n\n`lsof` 可以查看系统中打开的所有文件，包括文本文件、二进制文件、设备文件、目录等。可以使用 `lsof filename` 命令来查看某个文件被哪些进程打开。\n\n2. 查看网络连接\n\n`lsof` 可以查看系统中所有打开的网络连接，包括 TCP、UDP、Unix 域套接字、网络文件系统等。可以使用 `lsof -i` 或 `lsof -i tcp:8080` 或 `lsof -i:8080` 等命令来查看某些指定端口的网络连接。\n\n3. 查看进程\n\n`lsof` 可以查看系统中所有运行的进程信息，包括进程 ID、进程所占用的端口号、进程运行的程序、进程打开的文件等。可以使用 `lsof -p PID` 命令来查看某个指定进程的信息。\n\n4. 查看登录的用户\n\n`lsof` 可以查看登录到系统中的所有用户信息，包括用户 ID、用户所在的组、用户登录的终端等。可以使用 `lsof -u username` 命令来查看某个指定用户的信息。\n\n5. 查看设备文件\n\n`lsof` 可以查看系统中所有打开的设备文件，包括磁盘、光驱、串口、USB 等。可以使用 `lsof /dev/disk1` 命令来查看某个指定设备的信息。
snippets/shell/lsof
path is https://playground.z.wiki/comment/list?path=/snippets/shell/parallel.html
shell 并发执行\n\n\n并发执行`curl`\n\n```shell\nxargs -I % -P 8 curl -X POST \"https://z.wiki\" < <(printf '%s\n' {1..4})\n```
snippets/shell/parallel
path is https://playground.z.wiki/comment/list?path=/snippets/shell/authorized_keys.html
ssh 免密登录\n\n\n在登录服务器的时候经常需要输入密码，其实可以通过上传公钥的方式来实现免密登录，以下脚本可实现自动将本地公钥上传到目标服务器上。\n\n```shell\nssh-copy-id -i ~/.ssh/id_rsa.pub 账号@服务器IP\n```\n\n如果本地尚未生成公钥私钥的话，可以通过以下命令生成。\n\n```shell\nssh-keygen -t rsa\n```\n\n
snippets/shell/authorized_keys
path is https://playground.z.wiki/comment/list?path=/snippets/shell/number-compare.html
shell 中进行数字比较\n\n\n在 shell 中进行数字比较\n\n```shell\nif [2 -gt 3]\n then\n print \"2 is greater\"\n else\n print \"2 is not greater\"\nfi\n```\n
snippets/shell/number-compare
path is https://playground.z.wiki/comment/list?path=/snippets/shell/diff.html
文本对比\n\n\n两个文件进行`diff`，先排序、后对比。\n\n```shell\nbash -c 'vimdiff <(sort text2) <(sort text1)'\n```
snippets/shell/diff
path is https://playground.z.wiki/comment/list?path=/snippets/css/loading.html
加载中动画\n\n\n引入如下代码，通过给目标元素加上`loading`这个类，自动变成加载中动画，使用方便、性能好。\n\n```css\na[class*=-btn].loading, \nlabel[class*=-btn].loading {\n position: relative;\n}\na[class*=-btn].loading::first-line, \nlabel[class*=-btn].loading::first-line {\n color: transparent;\n}\na[class*=-btn].loading::before, \nlabel[class*=-btn].loading::before {\n width: 4px; height: 4px;\n margin: auto;\n content: '';\n -webkit-animation: spinZoom 1s steps(8) infinite;\n animation: spinZoom 1s steps(8) infinite;\n border-radius: 100%;\n box-shadow: 0 -10px 0 1px currentColor, 10px 0 currentColor, 0 10px currentColor, -10px 0 currentColor, -7px -7px 0 .5px currentColor, 7px -7px 0 1.5px currentColor, 7px 7px currentColor, -7px 7px currentColor;\n /bin /boot /data /dev /df /etc /home /lib /lib64 /log /lost+found /media /mnt /nginx-cache-file /opt /proc /root /run /sbin /srv /swapfile2 /sys /tmp /usr /var /zwikicos /zwkicos center */\n position: absolute;\n top: 0; right: 0; bottom: 0; left: 0;\n}\n/* loading动画 */\n@-webkit-keyframes spinZoom {\n 0% {\n -webkit-transform: scale(.75) rotate(0);\n }\n 100% {\n -webkit-transform: scale(.75) rotate(360deg);\n }\n}\n@keyframes spinZoom {\n 0% {\n transform: scale(.75) rotate(0);\n }\n 100% {\n transform: scale(.75) rotate(360deg);\n }\n}\n```
snippets/css/loading
path is https://playground.z.wiki/comment/list?path=/snippets/css/index.html
代码片段-CSS\n\n<LastPost :random=\"true\" prefix=\"/snippets/css\" :number=\"100\" css 代码片段/>\n
snippets/css/index
path is https://playground.z.wiki/comment/list?path=/notfound.html
404\n\n找不到您所需要的页面\n
notfound
path is https://playground.z.wiki/comment/list?path=/misc/debian.html
debian 11 国内镜像源\n\n### 使用说明\n\n将`/etc/apt/sources.list`文件中`Debian`默认的软件仓库地址和安全更新仓库地址修改为国内的镜像地址即可，\n比如将`deb.debian.org`和`security.debian.org`改为`mirrors.aliyun.com`，并使用`https`访问，可使用如下命令：\n\n```shell\nsed -i \"s@http://\(deb\|security\).debian.org@https://mirrors.xxx.com@g\" /etc/apt/sources.list\n```\n\n### 国内镜像源\n\n#### 阿里云\n\n\n```\ndeb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib\ndeb-src https://mirrors.aliyun.com/debian/ bullseye main non-free contrib\ndeb https://mirrors.aliyun.com/debian-security/ bullseye-security main\ndeb-src https://mirrors.aliyun.com/debian-security/ bullseye-security main\ndeb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib\ndeb-src https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib\ndeb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib\ndeb-src https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib\n```\n\n#### 腾讯云\n\n```\ndeb https://mirrors.tencent.com/debian/ bullseye main non-free contrib\ndeb-src https://mirrors.tencent.com/debian/ bullseye main non-free contrib\ndeb https://mirrors.tencent.com/debian-security/ bullseye-security main\ndeb-src https://mirrors.tencent.com/debian-security/ bullseye-security main\ndeb https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib\ndeb-src https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib\ndeb https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib\ndeb-src https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib\n```\n\n\n#### 清华大学\n\n```\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free\n```
misc/debian
path is https://playground.z.wiki/comment/list?path=/misc/mvn.html
maven 设置阿里云镜像\n\n打开 `maven` 的配置文件（ `windows` 机器一般在 `maven` 安装目录的 `conf/settings.xml` ），在`<mirrors></mirrors>`标签中添加 `mirror` 子节点:\n\n```xml\n<mirror>\n <id>aliyunmaven</id>\n <mirrorOf>*</mirrorOf>\n <name>阿里云公共仓库</name>\n <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n```\n\n\n修改远程仓库可在`pom.xml`中的`<repositories></repositories>`节点中加入对应的仓库使用地址。\n\n```xml\n<repository>\n <id>central</id>\n <url>https://maven.aliyun.com/repository/central</url>\n <releases>\n <enabled>true</enabled>\n </releases>\n <snapshots>\n <enabled>true</enabled>\n </snapshots>\n</repository>\n```\n\n`central`和`public`两个仓库的区别如下：\n\n\n| 仓库 | 源地址 |\n| ---- | ---- |\n| central | https://repo1.maven.org/maven2/ |\n| public | central仓和jcenter仓的聚合仓 |: \"有用。\",
misc/mvn
path is https://playground.z.wiki/comment/list?path=/misc/tech-article-skill.html
---\nmeta:\n - name: description\n content: 程序员写作技巧 文章 博客\n - name: keywords\n content: 程序员写作技巧 文章 博客\n---\n# 技术写作的首要诀窍\n\n[阮一峰的网络日志](https://mp.weixin.qq.com/s/VfjrGFbUK4lscpghGupPVQ)\n\n技术写作非常重要，产品的开发、推广、维护都需要它。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://2.z.wiki/autoupload/20240128/DsHZ.537X800-image.png\" />\n\n跟大家想的不一样，技术写作的好坏，跟语文水平关系不大，更多是一个技巧问题。\n\n因为技术写作的评价标准，不是艺术性，而是表达是否清楚明白。它不需要华丽的词藻、巧妙的比喻、深刻的感悟，只需要把问题说清楚。\n\n把问题说清楚的关键，在于你的思想是否清楚。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://0.z.wiki/autoupload/20240128/zdm7.518X800-image.png\" />\n\n当你想清楚了一个问题，只要掌握几个基本诀窍，就能写出一篇很好的技术文章。\n\n今天，我来说说，技术写作的首要诀窍是什么。很简单，就是一句话：文章采用单线结构。\n\n所谓“单线结构”（也称“线性结构”），指的是一篇文章只说一件事，按照线性顺序进行叙述，由浅入深、循序渐进、平铺直叙、层层递进。\n\n这就好比一个游览区，只有一条游览路线，从入口到出口，跟着箭头一路走，就能看到所有景观，非常明白清楚。\n\n如果同时有好几条路线，游客就会糊涂，到底选哪一条？会不会错过景观？要是这些路线还互相交叉，那就更糟糕了，游客非串线不可。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://9.z.wiki/autoupload/20240128/iBfk.818X800-image.png\" />\n\n（图片说明：上面的景区路线图，应该选择哪条路线吗？）\n\n只要采用了单线结构，技术文章就不会太差。即使内容是难懂的，至少结构是清晰的，一环扣一环，读者能知道自己卡在哪一环上。只要克服了这个难点，就能继续往前走，不会有陷入迷宫、找不到方向、如坠五里雾中。\n\n有一篇老外的文章[7]，使用图形表示文章结构，非常形象。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://1.z.wiki/autoupload/20240128/CQSf.881X449-image.png\" />\n\n上图就是单线结构，按照箭头，一步步推进。\n\n有的问题比较复杂，涉及多个因素，可能是星状结构。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://9.z.wiki/autoupload/20240128/O28O.629X772-image.png\" />\n\n也可能是”层次结构”。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://2.z.wiki/autoupload/20240128/HroE.481X800-image.png\" />\n\n这时，建议把这个问题拆分成多篇文章，每篇文章保持单线结构，坚持做到一篇文章只讲一点，而且争取把这一点讲透。\n\n但是，单线结构说起来容易，做起来难。难就难在，人类的思想不是单线的，而是多线的，甚至是非线性。\n\n你要把混乱而跳跃的思维，整理成单线结构，表达出来，让他人理解，谈何容易，通常都需要反复推敲和提炼。\n\n举例来说，我们的思维可能是下图这样，好多点各自发散，连接在一起。\n\n<ImgView title=\"程序员写作技巧\" url=\"https://6.z.wiki/autoupload/20240128/19Ss.528X800-image.png\" />\n\n<ImgView title=\"程序员写作技巧\" url=\"https://7.z.wiki/autoupload/20240128/r6c8.739X772-image.png\" />\n\n这种乱麻一团的思维并不可怕，可怕的是，你把文章也写成这样的结构，而不是耐心地梳理出一条线索。\n: \"学到了\",
misc/tech-article-skill
path is https://playground.z.wiki/comment/list?path=/misc/chrome-extensions.html
常用的 chrome 插件\n\n一下插件都可以通过`chrome`应用商店安装（需手动翻墙🐶）\n[谷歌插件商店链接](https://chrome.google.com/webstore/category/extensions)\n\n### postman\n\n<ImgView title=\"postman\" url=\"https://z.wiki/images/20220219/6c49f182f2814196b2080035a5e34371.png\" />\n\n`postman` 是一个接口测试工具,在做接口测试的时候,`postman`相当于一个客户端,它可以模拟用户发起的各类`HTTP`请求,将请求数据发送至服务端,获取对应的响应结果, 从而验证响应中的结果数据是否和预期值相匹配;并确保开发人员能够及时处理接口中的`bug`,进而保证产品上线之后的稳定性和安全性。 它主要是用来模拟各种`HTTP`请求的(如:`get`/`post`/`delete`/`put`..等等)。\n\n\n[postman 链接](https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=zh-cn)\n\n### 广告终结者\n\n<ImgView title=\"广告终结者\" url=\"https://z.wiki/images/20220219/92abc550b9684531aad641bcf81a06e6.png\" />\n\n\n广告终结者是一款参考各种广告过滤插件开发的功能全面的免费开源广告过滤工具。广告终结者让你不用再忍受网页上烦人的广告，不需要开通所谓的VIP，做任务，也不需要找各种功能不全的广告插件，广告终结者集成广告过滤的所有功能，是你唯一需要的必备广告过滤扩展。\n\n\n[广告终结者链接](https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-cn)\n\n### WhatFont\n\n<ImgView title=\"WhatFont\" url=\"https://z.wiki/images/20220219/e84a5e1d57cb4c1f8f7045668a409e8d.png\" />\n\n前端页面上显示的到底是那种字体呢？你写的字体真的生效了吗？用`WhatFont`插件来检查下吧~\n\n[WhatFont 链接](https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?hl=zh-cn)\n\n### Vimium\n\n<ImgView title=\"Vimium\" url=\"https://z.wiki/images/20220219/f7bb5616ba924e6f9703b90cd2a944af.png\" />\n\n想在浏览器中体验极客般的感觉，试试`Vimium`，轻松释放你的鼠标。\n\n> The Hacker's Browser. Vimium provides keyboard shortcuts for navigation and control in the spirit of Vim.\n\n[Vimium 链接](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=zh-cn)\n\n### Tampermonkey\n\n<ImgView title=\"Tampermonkey\" url=\"https://z.wiki/images/20220219/d15efc01fbab40a09092ba2c207a0ba5.png\" />\n\n`Tampermonkey` 是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 `Chrome`, `Microsoft Edge`, `Safari`, `Opera Next`, 和 `Firefox`。\n\n虽然有些受支持的浏览器拥有原生的用户脚本支持，但 `Tampermonkey` 将在您的用户脚本管理方面提供更多的便利。 它提供了诸如便捷脚本安装、自动更新检查、标签中的脚本运行状况速览、内置的编辑器等众多功能， 同时`Tampermonkey`还有可能正常运行原本并不兼容的脚本。\n\n它可以很快的安装好，来试一试吧！\n\n[Tampermonkey](https://www.tampermonkey.net/)\n\n### ReRes\n\n<ImgView title=\"ReRes\" url=\"https://z.wiki/images/20220219/91019626f7314cd6b07045379115ca89.png\" />\n\nReRes可以用来更改页面请求响应的内容。通过指定规则，您可以把请求映射到其他的url，也可以映射到本机的文件或者目录。ReRes支持单个url映射，也支持目录映射。\n\n[ReRes 链接](https://chrome.google.com/webstore/detail/reres/gieocpkbblidnocefjakldecahgeeica?hl=zh-cn)\n\n### Octotree\n\n<ImgView title=\"Octotree\" url=\"https://z.wiki/images/20220219/515c76cd2ee14131bbc4628a271e4afe.png\" />\n\n可以增强`github`浏览体验的`chrome`扩展程序\n\n[Octotree 链接](https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc?hl=zh-cn)\n\n### OneTab\n\n<ImgView title=\"OneTab\" url=\"https://z.wiki/images/20220219/e734ec7b054e4e8595570cb122c3387e.png\" />\n\n当您发现自己有太多的标签页时，单击`OneTab`图标，将所有标签页转换成一个列表。当您需要再次访问这些标签页时，可以单独或全部恢复它们。\n\n节省高达95％的内存，并减轻标签页混乱现象。\n\n[OneTab 链接](https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall?hl=zh-cn)\n\n\n\n### JSONView\n\n<ImgView title=\"JSONView\" url=\"https://z.wiki/images/20220219/15075611850e4de0bb414f43db2ec274.png\" />\n\n在浏览器中查看`JSON` 文件.\n通常当遇到`JSON`文件（内容类型`application/json`），`Chrome`一般会提示您下载该文档.在`JSONView`的帮助下，你可以在浏览器中像`XML`文件一样查看`JSON`，具有代码自动高亮,自动缩进,自动折叠功能.甚至JSON文件中有错误，`JSONView`仍然可以显示原始代码.\n\n[JSONView](https://chrome.google.com/webstore/detail/jsonview/gmegofmjomhknnokphhckolhcffdaihd?hl=zh-cn)\n\n### EditThisCookie\n\n<ImgView title=\"EditThisCookie\" url=\"https://z.wiki/images/20220219/beded832c1a442a0bd3b580c4af99eb0.png\" />\n\n`EditThisCookie`是一个`cookie`管理器。您可以添加，删除，编辑，搜索，锁定和屏蔽`cookies`！\n针对`Google Chrome`浏览器的第一个也是最棒的`cookie`管理器。\n\n[EditThisCookie](https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?hl=zh-cn)\n\n### Visual Event\nVisual Event\n\n\n### Star History\n\n<ImgView title=\"Star History\" url=\"https://z.wiki/images/20220330/701af7ce5be144009f30cd39f1927bcf.png\" />\n\n> the missing GitHub star history graph of GitHub repos.\n\n`github` 缺失的 `star` 历史趋势。\n\n\n### Quick Javascript Switcher\n\n网页上的文字无法复制？一键禁用`js`就搞定了！你需要的就是`Quick Javascript Switcher`\n\n<ImgView title=\"Quick Javascript Switcher\" url=\"https://4.z.wiki/images/20220330/61481abe71a443c1af29939e8abc8ade.png\" />\n\n### darkreader\n\n无处不在的深色模式\n\n<ImgView title=\"darkreader\" url=\"https://4.z.wiki/images/20220330/4d727b3abd534cd3a81b7ecec4194b30.png\" />: \"好东西\",
misc/chrome-extensions
path is https://playground.z.wiki/comment/list?path=/misc/tuchuang-upgrade.html
图床升级\n\n[图床](https://tuchuang.z.wiki/misc/tuchuang.html)已经运行一年多了，毫无美感的`UI`已经到了亟需优化的地步了，最近找`UE`给帮忙设计了下，效果如下：\n\n\n<ImgView title=\"图床\" url=\"https://5.z.wiki/autoupload/20230728/aRGv.1474X2620-image.png\" />\n\n等有空了开发一版💪🏻\n\n### 第一版\n\n[传送门](https://playground.z.wiki/img-cloud/index.html)\n\n一期到此为止，基本功能是有。\n: \"收藏了 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/happy.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/clap.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bow.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bow.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/good.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/good.png\" /> \",\n: \"好看多了\",
misc/tuchuang-upgrade
path is https://playground.z.wiki/comment/list?path=/misc/lightproxy.html
lightProxy 常见配置\n\n\n`LightProxy` 是 `IFE` 团队开发的一款基于 `Electron` 和 `whistle` 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 HTTP 代理使用规则转发、修改每一个请求和响应的内容。\n\n通过`LightProxy`用户可以快速进行转包、修改包，解决开发过程中的各个拦路虎。\n\n<ImgView title=\"lightProxy\" url=\"https://z.wiki/images/20220330/bdb51ebd3fb94a479cad74fb631bd68e.png\" />\n\n1. 下载链接：[github/alibaba/lightproxy](https://github.com/alibaba/lightproxy/releases)\n2. 国内下载：[LightPxory](https://z.wiki/autoupload/2022-09-14/57a22caeb1b24568bd5a588f1062c5e2.LightProxy.app.zip)\n\n典型应用：\n\n\n### 映射本地文件\n\n```\nhttps://z.wiki/web.js file:///Users/xxx/xxx/web.js\n```\n\n### 解决跨域问题\n\n```\nhttps://z.wiki/path resCors://https://xxx.com\n```\n\n### 添加请求头\n\n```\nhttps://z.wiki/path resHeaders://`\n{\n \"key\": \"value\"\n}\n`\n```\n\n### 请求添加`cookie`\n\n```\nhttps://z.wiki reqCookies://{“cookie_name”:”cookie_value”}\n```\n\n### 设置响应内容\n\n```\nhttps://z.wiki/path `{\"content\": \"content\"}`\n```\n\n### 域名转发\n\n\n```\nhttps://z.wiki https://z.wiki # 将前者的所有请求转发到后者\n```\n\n### 设置响应头\n\n\n```\nhttps://z.wiki/welcome resHeaders://`{\"Content-Type\": \"text/html\"}` `<html>test</html>`\n```\n\n### 模拟延迟\n\n\n```\nhttps://z.wiki/api.json resDelay://1000\n```
misc/lightproxy
path is https://playground.z.wiki/comment/list?path=/misc/cultrue-of-argument.html
争论文化与泛滥的敌对情绪\n\n> 翻译自：https://www.kateheddleston.com/blog/argument-cultures-and-unregulated-aggression\n\n曾经有一个很流行的网络语，\"和某些人争论，就像和一头猪在水坑里面摔跤，没过多久你会意识到猪真的很享受这个过程\"。\n\n在我们的生活、工作中，争论是非常普遍的，例如：\n\n1. Vim 还是 Emacs 那个是真正的上古神器？\n2. 测试驱动 VS 非测试驱动\n3. Python VS Ruby （译者：PHP 是世界上最好的语言😊）\n\n争论在解决问题的同事也极大地损害了团队的多元文化。\n\n首先，解释下争论文化到底是指什么？\n争论指的是：通过激烈反对去否定对手的观点一次来保证自己观点的正确性，\n其背后的实质是通过争论来否定错误的观点进而使用正确的观点、方案来解决问题。\n在争论文化中，争论其实就是战争，我们把争论方看做反对者，并对他们发起攻击，一次来保卫我们自己。为此我们或输或赢。\n争论是一种激烈的互动方式，甚至会引起相互攻击。正如 Deborah Tannen 在她的书《争论文化》中提到的\n\n> 争论文化促使我们以对抗性的心态接触这个世界，以及是世界上的人\n\n\n### 为什么会争论\n\n<ImgView title=\"争论文化\" url=\"https://z.wiki/images/20220313/7a40e1c6b1b34191a43b2c7cc2073eaa.png\" />\n\n\n一种普遍流行的理论是：争论是维持支配地位的工具。\n从进化论上讲，社会阶层攀爬能力有利于个体的声誉和生存。\n然而支配地位更关心输赢而非真相。当人们争论的时候，上述内容尤为明显：真相没有输赢重要，即使观点错误，争论也会继续下去。\n\n在现代美国文化中，争论在有两个重要的场合尤为重要：法庭与政治争论。\n这两个场合中，争论都是其中的一种竞争形式，这绝非偶然。无论法庭还是政治场合，其都有严格的争论、辩论规范：两个或更多参与方以及裁判方。\n\n在理想的世界中，人们通过逻辑辩述、陈列事实、可靠信息等方式赢得争论，\n而实际上，在这几方面，大多数人的表现都极为糟糕。\n一个人一旦情绪收到扰动，往往连最基本的判断都会出错。\n争论本质上事以输赢为导向的行为，正如我们从体育赛事中看到的：某些人会不惜一切代价去赢得比赛。\n例如：兴奋剂、作弊等不上台面的手段。正因如此，体育有裁判、辩论有主持、法庭有法官。\n\n<ImgView title=\"争论文化\" url=\"https://z.wiki/images/20220313/1d82cf939fb24992975b9c6b97ada588.png\" />\n\n\n\n在以争论（辩论）为竞争手段的场合都有严格的规定、监督。成为该场合的裁判者需要学习对应的规章、准则甚至法律，一旦说谎、作弊便会掉线执照。\n在工作中，由于缺少裁判这个角色以及严格的规范，员工往往会通过争论来获取对其他员工的权威感、凌驾感。对权威感、凌驾感的追求甚至会导致某些人做出不道德的行为，\n甚至无所不为。\n\n### 争论文化导致什么行为\n\n<ImgView title=\"争论文化\" url=\"https://z.wiki/images/20220313/fcd22903cd3541dcbaad49c8b09a16f1.png\" />\n\n\n\n在争论文化中，赢家通吃。\n正如我们所谈到的，当获胜是人们可以开始跨越道德界限的目标时。\n正如上文提到的，当输赢成为导向的时候，人们很容易越过各种红线,\n如：更具有攻击性、打断他人发言、提高嗓门、侵犯他人的私人空间等等。\n更甚至发起人身攻击。\n\n举个例子\n\n<ImgView title=\"争论文化\" url=\"https://4.z.wiki/images/20220313/8c46f7b930654a65b65d0d5703036f4f.png\" />\n\n\n\n假设出现一个新需求：需要将某项技术集成到现有平台上。\n也许你需要实现缓存。也许你需要添加一个新的数据存储方式。也许你需要构建一个新服务并在调研新框架。\n无论是什么需求，很可能有人会对做什么有强烈的想法。\n许多开发者有带着他们最喜欢的新技术或架构方案直接进入争论的习惯。\n当事情变得激烈时，一个人赢得争论的一种策略是就削弱对手的可信度。\n\n在一瞬间，一个对手对另一个说：“你看起来真的很沮丧。”\n\n从表面上看，这似乎是一种善意关照——一个人在关心另一个人的感受，对吧？\n实际上，他们正在利用情绪干扰理性思维的社会刻板印象来破坏对手的可信度。\n虽然这样的个人言论可以用作对付任何人的武器，但当用于对付女性时，它却是一种特别有效的武器。\n因为它符合大众对女性的刻板印象，即女性比男性更情绪化，更不理性。\n\n现代社会“女人感性男人理性”的刻板印象之所以存在，是70年代心理的结果。在 70 年代，心理学家认为人本质上是理性的生物。人只有被情绪打断，才会脱离理性思维。\n当时的心理学家还认为女性神经质和情绪化，因此缺乏与男性相同的理性能力。\n这种推理路线已被现代社会科学彻底揭穿。《思考快与慢》一书记录了许多研究，这些研究表明人们在决策中是如何不理性或不客观的。\n作者进行的研究“将这些错误追溯到认知机制的设计，而不是情绪对思想的破坏”。\n换句话说，他们的研究表明，人们不擅长使用逻辑做出决定，这不是因为情绪的干扰，而是因为我们的基本联系方式。不分性别。\n\n然而，在激烈的争论中，挫折对逻辑没有重大影响并不重要。\n重要的是，该声明破坏了对方的可信度，使发表声明的人更容易赢得一分。\n在胜利至上、侵略被容忍的环境中，这类违反道德的行为将会发生。\n即使团队中的大多数人认为这些是不恰当的互动，环境也会鼓励并允许这种行为，因此公众舆论不足以阻止它的发生。\n争论在我们的社会中运作良好，作为一种受监管的法庭和辩论口头竞争形式，\n但工作场所中泛滥的争论会助长侵略性和使用社会刻板印象作为武器。\n\n### 争吵会阻止什么样的行为？\n\n<ImgView title=\"争论文化\" url=\"https://z.wiki/images/20220313/7b9fc7ea486940e3a03522c5fa58acaa.png\" />\n\n\n如果你创造了一种人们攻击想法以消除弱点的文化，那么有些人会害羞地说出来是可以理解的。\n出于这个原因，帕洛阿尔托著名的设计咨询公司 IDEO 制定了规则来消除头脑风暴期间的负面反应。\n在 IDEO 头脑风暴期间，没有坏主意，也没有想法太疯狂而不能大声说出来。为了给想法创造一个安全的空间，人们必须推迟判断并保留任何批评。\n同样，在即兴表演剧团中，回应剧团其他成员的规则始终是“是并且”。\n在这两种情况下，目标都是创造一个促进创造力的环境，人们可以在其中建立彼此的想法。经常使用“不”和“不要”之类的负面回应或争论会停止讨论并阻止想法的扩展。\n争论文化不鼓励人们说出来，因为他们害怕受到攻击、限制观点和创造力。\n\n### 为什么女性不擅长争论\n\n到目前为止，我所概述的内容表明，争论伤害了工程团队中的很多人，而不仅仅是女性和少数群体。\n正如我在介绍性博客文章中所说，妇女和少数民族是“煤矿中的金丝雀”。\n这些群体的高流失率表明有毒环境，从长远来看，这将比金丝雀伤害更多，但首先杀死金丝雀。\n那么，不受管制的争论文化是如何在伤害男性之前先伤害女性的呢？\n\n有几个关键因素需要考虑。\n首先，社会不会像容忍男性的侵略那样容忍女性的侵略。女性在工作场所更有可能被称为“专横”或“咄咄逼人”，尽管总体上表现出较少的攻击性 [ 9]。创造一个鼓励攻击性的环境会给男性带来优势，因为男性攻击性更容易被社会接受。\n\n其次，男性习惯于对女性比男性更具竞争力。\n在对体育课上男孩和女孩的研究中，男孩在与女孩的竞争性赛跑中比他们的男性同龄人更加努力。\n由于男性应该赢得混合性别比赛的社会条件，男性在反对女性的争论中可能更具竞争力。\n\n最后，在竞争激烈的环境中，人们更有可能使用不恰当的武器来取胜。\n拥有最多可以用来对付他们的武器的人群是对他们不利的社会刻板印象最多的人群。\n换句话说，最边缘化的群体拥有最多的武器，可以在好斗的环境中用来对付他们。\n\n### 如何改善工作中的争论\n\n你可以在公司中做一些事情来促进针对不同情况的健康和富有成效的沟通。\n了解什么时候你的目标是扩展想法，什么时候你的目标是缩小想法。在想法扩展过程中，每个想法和想法都应该受到欢迎。\n应该有一个“是和”的态度，这样争论（在这一点上无论如何都是毫无价值的）不会妨碍创造力。\n努力创造环境，让任何和所有声音都可以安全地发声。\n\n\n其次，要认识到你何时削减想法做出决定。\n这通常是激烈争论的地方，所以要有一个系统来选择想法，以防止不必要的争论。\n如果您想将论据用作决策工具，请制定提出论据和选择获胜者的规则。\n减少演讲者偏见和提高客观性的一个好方法是让人们为他们最初没有提出的想法进行辩论。\n请记住，当涉及到胜利和自负时，人们会做各种疯狂的事情。\n\n无论您选择规范争论并决定解决方案，请确保团队中的每个人都清楚规则。\n\n### 结论\n\n不受监管的争论是工程团队中最具腐蚀性的环境因素之一。\n它们损害创造力、思想表达和多样性，同时促进侵略和竞争行为。\n斯蒂芬霍金——一般的坏蛋和非凡的天才——认为当今人类面临的最大威胁是侵略：\n\n> “我最想纠正的人类失败是侵略......它在穴居人时代可能具有生存优势，可以获得更多食物，领土或与之繁殖的伙伴，但现在它威胁要摧毁我们所有人”。\n\n因此，请考虑寻找方法来减少或消除工程文化中不受监管的争论，从而减少攻击性行为并为每个人创造一个更愉快、更有创意的环境。\n
misc/cultrue-of-argument
path is https://playground.z.wiki/comment/list?path=/misc/alfred.html
alfred 备忘录\n\n> `Alfred` 是一款 `Mac` 平台上的快捷启动器和文件搜索工具。它可以帮助用户快速启动应用程序、查找文件和执行其他常用操作。 \n`Alfred` 的基本版是免费的，如果想要使用更多高级功能，可以通过购买收费版来获取。\n\n再次记录下我的`alfred`使用的插件。其中大部分插件都是从 [alfredforum](https://www.alfredforum.com/) 、 [awesome-alfred-workflows](https://github.com/alfred-workflows/awesome-alfred-workflows) 找到的。\n\n> 注：使用插件需要购买`Powerpack`\n\n### Encode / Decode\n\n编码、解码工具，支持`URL`、 `HTML`、`base64`、 `Unicode`等多种方式的编码、解码。\n\n<ImgView title=\"alfred\" url=\"https://z.wiki/images/20220404/9988378ebdaa4338a56f8f1cf77751fd.png\" />\n\n\n<ImgView title=\"alfred\" url=\"https://z.wiki/images/20220404/e1e3e1df37764325a61034440e1bcded.png\" />\n\n\n插件地址：[github](https://github.com/willfarrell/alfred-encode-decode-workflow)\n\n### Code Case\n\n命名格式转换工具，如：大驼峰转小驼峰、下划线式、连字符式、空格分隔符、点分隔符等多种方式。\n\n<ImgView title=\"alfred\" url=\"https://z.wiki/images/20220404/6b602f5fba024646b17827847032d390.png\" />\n\n\n插件地址：[code case](http://www.packal.org/workflow/code-case)\n\n\n### Hash\n\n将输入转成常见的`hash`值，如：`md2`、 `md4`、`md5`、 `sha1`、 `sha244`、`sha256`、`sha384`、 `sha512/224`、`sha512/256`等等。\n\n<ImgView title=\"alfred\" url=\"https://4.z.wiki/images/20220404/780ef2831a0b41cfb942c1548837de7e.png\" />\n\n\n插件地址：[hash](https://github.com/BigLuck/alfred2-hash)\n\n\n### IpIp\n\n敖家独创（😂），支持获取本地`IP`和公网`IP`\n\n<ImgView title=\"alfred\" url=\"https://z.wiki/images/20220410/d68b782087bd45909d9e814bb8393272.png\" />\n\n\n源码地址： [alfred-workflow-ipip](https://github.com/yihuaxiang/alfred-workflow-ipip) \n介绍文章地址： [IP 归属地查询](https://z.wiki/misc/ip-query.html#%E9%98%B6%E6%AE%B5%E6%80%A7%E6%88%90%E6%9E%9C)
misc/alfred
path is https://playground.z.wiki/comment/list?path=/misc/ishot.html
测试下 iShot 截图效果\n\n### 效果对比\n\niShot 截图\n\n<ImgView title=\"截图\" url=\"https://z.wiki/images/20220126/21d1c270cc844338b4d2723eda1e6fd3.png\" />\n\n\n<ImgView title=\"截图\" url=\"https://z.wiki/images/20220126/998bbbd9df3e487bbd921b4d0caf907b.png\" />\n\n\n多窗口截屏\n\n<ImgView title=\"截图\" url=\"https://z.wiki/images/20220126/c1d0b5cd298044519180a7eee6b61083.png\" />\n\n\n\nVS\n\n钉钉截图\n\n<ImgView title=\"截图\" url=\"https://4.z.wiki/images/20220126/492bd248f60d43bd8fd5209b69a47a0a.png\" />\n\n\n<ImgView title=\"截图\" url=\"https://z.wiki/images/20220226/280289a50f154e4081bd17da03fa84eb.png\" />\n\n\n\n### iShot 功能总结\n\n*****截图/长截图/贴图/标注/取色/录屏 六合一\n\n******一个顶六个，样样都优秀\n\n\niShot是Mac上一款免费优秀、功能全面的区域截图、窗口截图、多窗口截图、长截图、延时截图、快速标注、贴图、取色、屏幕录制工具。\n\n\n功能介绍：\n\n\n#### ①：区域截图、窗口截图、多窗口截图\n\n支持智能识别单窗口、多窗口截图，支持自定义截图快捷键。\n\n\n#### ②：长截图、滚动截图\n\n选择滚动截图区域，然后按“S”快捷键，即可开始长截图，长截图长度不限。\n\n\n#### ③：延时全屏截图\n\n支持倒计时声音播放，通过延时全屏截图，截取不易选取的窗口。\n\n\n#### ④：截图前一个区域\n\n使用快捷键，快速截图上一次框选截图的区域。\n\n\n#### ⑤：截图光标下窗口\n\n使用快捷键，直接截图当前鼠标下的窗口，无需激活该窗口。\n\n\n#### ⑥：快速标注\n\niShot为每个标注功能都提供了快捷键，而且是单按键的快捷键，使用快捷键，可直接切换标注工具，无需点下面的标注按钮。另外还可根据个人习惯更改标注快捷键。\n\n\n#### ⑦标注功能：\n\n矩形、圆形、横线、箭头、画笔、马赛克、文字标记、序号标签、局部高亮；\n\n标注后，选中标注图案，鼠标置于图案上，滚动鼠标滚轮或双指在触控板上下滑动，调节透明度；\n\n标注后，选中标注图案，鼠标置于图案外，滚动鼠标滚轮或双指在触控板上下滑动，调节粗细。\n\n\n#### ⑧：标注工具提供多种样式选择\n\n箭头、马赛克等标注工具，提供多款样式选择，让你的标注不再单一。\n\n\n#### ⑨：录屏功能\n\n支持多种清晰度、多种FPS的录屏；\n\n支持鼠标点按录制、删除重复帧；\n\n支持保存为mov、mp4、gif格式\n\n\n#### ⑩：贴图功能：\n\n支持框选区域后点击贴图按钮贴图；\n\n支持使用快捷键“option+s”将当前剪切板的图片进行贴图；\n\n支持贴图后右击，标注、修改贴图图片。\n\n\n#### ⑪：截图导圆角、阴影调节\n\n支持截图自动导圆角、截图阴影可进行颜色、大小调节。\n\n\n#### ⑫：截图快速打开\n\n完成截图后可通过双击Option，使用自定义的App打开图片，默认为使用“预览”打开图片，也可以设置为使用别的App打开；\n\n另外，当选择访达时，是打开截图保存的访达位置。\n\n\n#### ⑬：取色功能\n\n按下截图快捷键时，可进行取色，支持RGB、HEX，并支持自定义颜色代码，取色提示在左下角。\n\n\n#### ⑭：支持高清、标清两种图像质量\n\n\n#### ⑮：支持jpg、png、tiff截图保存格式: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/watermelon.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/money.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/look-down-on.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/hit-on-face.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/no-idea.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/vomit.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/poor.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> \",
misc/ishot
path is https://playground.z.wiki/comment/list?path=/misc/realtime-caption.html
chrome 实时字幕\n\n突然发现，`chrome`新加了\"实时字幕\"功能。\n\n<ImgView title=\"实时字幕\" url=\"https://z.wiki/images/20220220/b1ba9fe9007042d8aab3ca08be4fd58a.png\" />\n\n\n以前知道`YouTube`看视频的时候可以开启实时字幕，看来谷歌已经把这项技术从`YouTube`扩展到了`chrome`，👍👍👍\n\n<ImgView title=\"实时字幕\" url=\"https://z.wiki/images/20220220/034683c92f3d4c7ebecfab7b942b82d0.png\" />\n\n
misc/realtime-caption
path is https://playground.z.wiki/comment/list?path=/misc/alfred-adcode-query.html
---\nmeta:\n - name: description\n content: 查询 adcode 查询行政区划，提供 alfred 插件和 web 端在线查询\n - name: keywords\n content: adcode 查询 行政区划查询 行政编码\n---\n# alfred adcode 查询插件\n\n### WEB 版\n\n`web` 版地址：[adcode 查询平台](https://playground.z.wiki/lbs/showCityInfo?keyword=110000) \n\n<ImgView title=\"adcode查询\" url=\"https://8.z.wiki/autoupload/20240125/9v0b.1180X1316-image.png\" />\n\n### 插件源码地址\n\n[https://github.com/yihuaxiang/alfred-adcode-query](https://github.com/yihuaxiang/alfred-adcode-query)\n\n<ImgView title=\"adcode查询\" url=\"https://1.z.wiki/autoupload/2022-05-24/54786b494ce54ea39269ae3860169218.image.png\" />\n\n### adcode 简介\n\n`adcode`是用于标识某个城市的六位数字编码，如：`110000`表示北京，`130100`标识石家庄，\n`adcode`由国家统一指定，该插件提供了城市级、省级`adcode`查询功能。\n\n> 完整列表可通过 [高德地图](https://lbs.amap.com/api/webservice/download) 进行下载\n\n### adcode 的规律\n\n<ImgView title=\"adcode 规律\" url=\"https://1.z.wiki/images/20220525/47c8f20b84a742a4b0c6b1ed7786d5b6.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n`adcode`是有特定规律的\n\n`adcode`由六位数字组成，其中第一位表示大区，前两位表示特定省份（直辖市算作省份），中间两位表示城市，后两位表示区县。\n\n举例说明：\n\n1. `130100` 石家庄\n\n第一位`1`表示华北区，华北包括北京、天津、河北、内蒙古、山西\n\n> 其他大区\n> \n> 1. 华北\n> 2. 东北\n> 3. 华东\n> 4. 华南\n> 5. 西南\n> 6. 西北\n> 7. 台湾\n> 8. 港澳\n\n<ImgView title=\"adcode 查询行政区划\" url=\"https://1.z.wiki/autoupload/20240225/jFx5.1634X1536-image.png\" />\n\n\n前两位`13`表示河北省，河北所有的`adcode`开头都是`13`\n\n>`11` 北京、 `12` 天津、`13` 河北、 `14` 山西、 `15` 内蒙，果然，顺序可不是随便排的\n\n中间两位`01`表示石家庄，城市序号往往和城市排名一致，省会排第一位\n\n> 电话区号也有类似规律\n> \n> 冷知识：在台湾，台北区号是`02`，`01`是留给南京用的\n\n<ImgView title=\"adcode查询\" url=\"https://1.z.wiki/images/20220525/78052b6063b1438793b44185cf1238b6.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n最后两位`00`表示非区县，既：石家庄市\n\n2. `130101` 石家庄市市辖区\n\n结合第一个例子，唯一的区别是最后两位是`01`表示石家庄市内的第一个区县，既：市辖区\n\n3. `130102` 石家庄市长安区\n: \"真不戳 真不戳 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> \",\n: \"这个好用\",
misc/alfred-adcode-query
path is https://playground.z.wiki/comment/list?path=/misc/centos-8-eof.html
---\nmeta:\n - name: description\n content: centos 8 更新软件源\n - name: keywords\n content: centos 8 更新软件源\n---\n# CentOS 8 寿终正寝\n\n> 背景：随着2022年的到来，`CentOS 8`的寿命也终止了，`CentOS 8`将无法获取更新功能，更为致命的是，原来的镜像源也已移除。\n这意味着无法通过`yum`进行软件安装、软件更新等操作了。第三方源也无法同步`CentOS 8`的源。\n\n本想安装`JDK`，发现如下报错。\n\n```shell\n[root@046d05b87ece yum.repos.d]# yum update\nFailed to set locale, defaulting to C.UTF-8\nCentOS Linux 8 - AppStream 81 B/s | 38 B 00:00\nError: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist\n```\n\n看来`CentOS 8`的寿终正寝还真影响到我了。😓\n\n<ImgView title=\"寿终正寝\" url=\"https://z.wiki/images/20220520/0225197518a5476a8cfb884ab3fc08c3.png\" />\n\n正好顺便换成国内镜像，下载资源还能快点。\n\n### 国内镜像\n\n[网易源](http://mirrors.163.com/centos-vault)\n[阿里云源](https://mirrors.aliyun.com/centos-vault)\n[华为云源](https://repo.huaweicloud.com/centos-vault)\n[腾讯源](https://mirrors.cloud.tencent.com/centos-vault/)\n\n\n### 一键切换(推荐)\n\n在服务器上执行以下脚本完成一键切换阿里云镜像\n\n```shell\n/bin/bash -c \"$(curl -fsSL https://z.wiki/autoupload/20230204/od1H.change-mirrors.sh)\"\n```\n\n### 手动切换\n\n#### 备份原始源文件\n\n1. 进入目录`/etc/yum.repos.d`\n\n```shell\ncd /etc/yum.repos.d\n```\n\n2. 新建名称为`bak`的文件夹\n\n```shell\nmkdir bak\n```\n\n3. 将所有源文件保存到`bak`文件夹里\n\n```shell\nmv *.repo bak\n```\n\n\n#### 下载阿里镜像源文件\n\n\n下载对应系统的源文件并放到/etc/vum.repos.d目录下\n\n```shell\ncurl -o /etc/yum.repos.d/CentOS-Base-Aliyun.repo http://mirrors.aliyun.com/repo/Centos-8.repo\n```\n\n\n#### 更新\n\n\n1. 清除`yum`仓库缓存\n\n```shell\nyum clean all\nyum makecache\n```\n\n\n\n2. 更新\n\n```shell\nyum update\n```\n\n### 备用方案\n\n备份并切换源\n\n```shell\n# 备份原配置\nmkdir /etc/yum.repos.d/bak\nmv /etc/yum.repos.d/CentOS-Linux-* /etc/yum.repos.d/bak\n\n\n# 写入新镜像地址\ncat <<EOF > /etc/yum.repos.d/centos.repo \n[baseos]\nname=CentOS Linux $releasever - BaseOS\nbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/8.5.2111/BaseOS/$basearch/os/?arch=$basearch\ngpgcheck=1\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\n[appstream]\nname=CentOS Linux $releasever - AppStream\nbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/8.5.2111/AppStream/$basearch/os/\ngpgcheck=1\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\n[extras]\nname=CentOS Linux $releasever - Extras\nbaseurl=https://mirrors.tuna.tsinghua.edu.cn/centos-vault/8.5.2111/extras/$basearch/os/\ngpgcheck=1\nenabled=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\nEOF\n```\n\n更新软件\n\n\n<ImgView title=\"centos 更新软件\" url=\"https://z.wiki/images/20220320/3755fa2ff4374cbda253fb2dc29c43be.png\" />: \"👍👍👍\n\",
misc/centos-8-eof
path is https://playground.z.wiki/comment/list?path=/misc/iterm2.html
---\nmeta:\n - name: description\n content: iTerms 配置,终端配置,快捷键\n - name: keywords\n content: iTerms 配置,终端配置,快捷键\ntags: [\"iTerms\", \"终端\", \"神器\", \"效率\", \"程序员\"]\n---\n\n# iTerm2 配置\n\n为了更高效的利用终端，以及适当的时候 __炫__ 一把，我给`iTerm2`配置了`Key binding`，最终想把终端打造成类`IDEA`一样的工具，完整配置在文章最后。\n\n### 核心功能\n\n#### 快速注释\n\n当点击`Command + /`的时候自动发送`,cc`按键指令，`vim`便会对内容进行快速注释。\n\n<ImgView title=\"终端\" url=\"https://z.wiki/autoupload/2022-08-16/e1d296d06b4649af85b561320906ebda.image.png\" />\n\n\n#### 全局内容搜索\n\n当点击`Command + Shift + F`的时候自动发送`:Ag\n`按键指令，`vim`便会通过`Ag`插件进行弹框并搜索指定内容。\n\n<ImgView title=\"iTerm2 全局搜索功能\" url=\"https://z.wiki/autoupload/2022-08-16/9f8fc6aadb1647e5b403f56d83be806c.image.png\" />\n\n\n效果如下：\n\n<ImgView title=\"iTerm2 全局搜索功能\" url=\"https://z.wiki/autoupload/2022-08-16/7ba175e0686e4b7fa9cc4b98fee04631.findcntent.gif\" />\n\n\n#### 文件搜索\n\n当点击`Command + P`的时候自动发送`:Files\n`按键指令，`vim`根据文件名进行搜索。\n\n<ImgView title=\"iTerm2 文件搜索\" url=\"https://z.wiki/autoupload/2022-08-16/ff50fb4486b64bf58f84bc49ea66acf2.image.png\" />\n\n\n\n效果如下：\n\n<ImgView title=\"iTerm2 文件搜索\" url=\"https://z.wiki/autoupload/2022-08-16/ba80163df6a74a268160b922e5d971a2.files.gif\" />\n\n\n#### 最近文件\n\n点击`Command + E`时自动发送`:History`按键指令，打开最近使用过的文件\n\n<ImgView title=\"终端\" url=\"https://z.wiki/autoupload/2022-09-09/77d891f0c5fb48809790cbc77c12461c.image.png\" />\n\n\n#### 快速保存\n\n当点击`Command + S`的时候自动发送`:w\n`按键指令，`vim`对当前编辑的文件进行保存。\n\n<ImgView title=\"iTerm2 快速保存\" url=\"https://z.wiki/autoupload/2022-08-16/4e92304b1acc4a61939d611c95625545.image.png\" />\n\n\n#### 其他\n\n其他都是一些简单快捷键设置，具体可以看下文中的完整配置，另外文章最后的配置直接解压成`.itermkeymap`文件即可通过`iTerms`进行导入。\n\n### 完整配置\n\n\n1. [v1.0 下载链接：iterm2.itermkeymap.zip](https://z.wiki/autoupload/2022-08-16/502be620666044f095913fdb8b6c604c.iterm2.itermkeymap.zip)\n2. [v1.1 下载链接：iterm2.itermkeymap.zip](https://z.wiki/autoupload/2022-09-16/c0d3827a9d084595ba6333db02c2f3fc.iterm2.itermkeymap.zip)\n\n导入方式：\n\n<ImgView title=\"iTerm2 导入配置\" url=\"https://z.wiki/autoupload/2022-08-16/b23a6f9e70254855977843979d554ae7.image.png\" />\n: \"👍👍👍\",\n: \"<p> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/> <img alt=\"thumb\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e6/2018new_zan_org.png\"/></p>\n\",
misc/iterm2
path is https://playground.z.wiki/comment/list?path=/misc/comment-plugin.html
评论插件升级\n\n博客中使用的 [Valine](https://valine.js.org/) 这个评论插件，商用版需要付费，开发版太不稳定了，时不时出错，得趁过年改写一版。\n\n<ImgView title=\"评论插件升级\" url=\"https://3.z.wiki/autoupload/20240207/I4s2.2026X3458-image.png\" />\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> \",\n\n: \"添加表情 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/happy.png\" /> \",\n\n: \"升级好了哈哈\",\n\n: \"回复:&quot;回复:&amp;quot;回复:&amp;amp;quot;测试&amp;amp;quot;\n\n------------\n\n测试&amp;quot;\n\n------------\n\n测试&quot;\n\n------------\n\ntest\",\n\n: \"回复:&quot;回复:&amp;quot;测试&amp;quot;\n\n------------\n\n测试&quot;\n\n------------\n\n测试\",\n\n: \"测试\",\n\n: \"测试\",\n\n: \"测试\",\n\n: \"回复:&quot;测试&quot;\n\n------------\n\n测试\",\n\n: \"测试\",\n\n: \"测试\",\n\n: \"测试\",\n\n: \"重复测试一次\",\n\n: \"我再测试一次\",\n\n: \"回复:\"回复:\"回复:\"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\"\n\n------------\n\n武如何\"\n\n------------\n\n耶耶耶\"\n\n------------\n\n...\",\n\n: \"回复:\"回复:\"回复:\"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\"\n\n------------\n\n武如何\"\n\n------------\n\n耶耶耶\"\n\n------------\n\n...\",\n\n: \"回复:\"回复:\"回复:\"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\"\n\n------------\n\n武如何\"\n\n------------\n\n耶耶耶\"\n\n------------\n\n...\",\n\n: \"回复:\"回复:\"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\"\n\n------------\n\n武如何\"\n\n------------\n\n耶耶耶\",\n\n: \"回复:\"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\"\n\n------------\n\n武如何\",\n\n: \"回复:\"升级了没呢？\"\n\n------------\n\n刚升级，你试试？\",\n\n: \"升级了没呢？\",
misc/comment-plugin
path is https://playground.z.wiki/comment/list?path=/misc/rent-ratio.html
---\nmeta:\n - name: description\n content: 2020年全国重点50城租售比调研报告\n - name: keywords\n content: 城市,出租,租售比,调研报告\n---\n# 租售比调研报告\n\n\n如题，文件：[2020 年全国重点50 城租售比调查研究报告](https://z.wiki/autoupload/2022-09-09/9288e49d5df34cc2b4a7a0ef34d6eecc.5fe052aa643e0.pdf)\n\n<ImgView title=\"2020 年全国重点50 城租售比调查研究报告\" url=\"https://z.wiki/autoupload/2022-09-17/f2478c3dece541dab0386f40067ea888.image.png\" />\n: \"这有啥用？做房地产吗？\",
misc/rent-ratio
path is https://playground.z.wiki/comment/list?path=/misc/redis-search.html
---\nmeta:\n - name: description\n content: 敖武的博客-搜索功能升级\n - name: keywords\n content: 搜索 redis-search 全文检索\n---\n# 搜索升级\n\n### 第一版搜索\n\n[vuepress](https://vuepress.vuejs.org/zh/) 内置基于标题的[搜索](https://v1.vuepress.vuejs.org/zh/theme/default-theme-config.html#%E5%86%85%E7%BD%AE%E6%90%9C%E7%B4%A2)，该搜索会基于标题文字匹配进行搜索，无法搜索到内容，更无法全文检索。\n\n### 第二版搜索\n\n后来我将 [vuepress](https://vuepress.vuejs.org/zh/) 内置的搜索替换成 [algolia](https://z.wiki/misc/algolia.html) \n\n<ImgView title=\"搜索升级\" url=\"https://2.z.wiki/autoupload/20240208/2u0S.804X1112-image.png\" />\n\n但一直有两大难题压着我。\n\n1. 索引不能实时更新\n\n[algolia](https://www.algolia.com/) 每周进行一个索引更新\n\n<ImgView title=\"搜索升级\" url=\"https://5.z.wiki/autoupload/20240208/Hm4U.936X1388-image.png\" />\n\n2. 接口反应慢，第一次输入的时候迟迟没有结果\n\n### 第三版搜索\n\n这次从“进口”转“自研”，基于 [redis-search](https://redis.io/docs/interact/search-and-query/) 开发了自己的搜索服务：[敖武的搜索-敖索](https://playground.z.wiki/search/page)\n\n<ImgView title=\"搜索升级\" url=\"https://1.z.wiki/autoupload/20240208/XLaC.2666X4034-image.png\" />\n\n\n### 升级\n\n将评论也添加到索引中了，这下可以搜索到评论啦💐💐\n\n\n<ImgView title=\"搜索升级\" url=\"https://2.z.wiki/autoupload/20240224/UGrL.2026X3292-image.png\" />\n\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> \",\n: \"回复:&quot;美女是哪里的？&quot;\n\n------------\n\nmade in China\",\n: \"回复:\"美女是哪里的？\"\n\n------------\n\nasdf\",\n: \"美女是哪里的？\",\n: \"1234123\",\n: \"阿斯顿发送到发\",\n: \"回复:\"回复:\"回复:\"回复:\"测试一下效果\"\n\n测试一下回复效果\"\n\n我再测试一下\"\n\n------------\n\n测试内容\"\n\n------------\n\n测试。。。。\",\n: \"回复:\"回复:\"回复:\"测试一下效果\"\n\n测试一下回复效果\"\n\n我再测试一下\"\n\n------------\n\n测试内容\",\n: \"回复:\"回复:\"测试一下效果\"\n\n测试一下回复效果\"\n\n我再测试一下\",\n: \"回复:\"测试一下效果\"\n\n测试一下回复效果\",\n: \"测试一下效果\",
misc/redis-search
path is https://playground.z.wiki/comment/list?path=/misc/invalid-attack.html
---\nmeta:\n - name: description\n content: 敖武的服务违规提醒\n - name: keywords\n content: 腾讯,服务违规提醒,服务攻击,腾讯云\n---\n# 服务违规提醒\n\n### 起源\n\n大半夜的，腾讯给我发来通知，说我的服务器存在对其他服务器的攻击。\n\n<ImgView title=\"服务器-攻击\" url=\"https://0.z.wiki/images/20220522/f491a1eeca17497f90f6ce4a0ee6fba8.png\" />\n\n平时安装软件、使用权限、防火墙都很小心的，怎么会存在中木马呢？\n\n<ImgView title=\"服务器-攻击\" url=\"https://0.z.wiki/images/20220522/62c5231d5e204fe1af559f3a43589106.png\" />\n\n### 自查\n\n通过腾讯的指导文件，去服务器上自查，完全没有问题啊，\n有一个进程在不断地往`oss`上上传资源，难道说的是这个？这是攻击行为？？\n可这是我的业务需求，而且访问的也是我自己的`oss`。\n\n<ImgView title=\"服务器-攻击\" url=\"https://0.z.wiki/images/20220529/dc938ef17c114c74af21343c3521d700.png?x-oss-process=image/resize,w_800/quality,q_80\" />\n\n<ImgView title=\"头疼\" width=\"400px\" url=\"https://0.z.wiki/images/20220522/5a0d69a1ead64e91b34aa886eebe0dd7.jpg\" />\n\n### 反馈\n\n问了腾讯的在线客服，一开始完全是重复消息中的内容。\n\n<ImgView title=\"服务器-攻击\" url=\"https://1.z.wiki/images/20220522/1d4021c2998f41459995d8fb98d2a463.png\" />\n\n\n自我的强势追问下，客服告诉我\"在攻击这个`ip` `47.75.19.144`\"。\n\n> 画外音：好消息好消息，起码距离真相更近一步了。\n\n\n🤔🤔🤔，看着像是公网`ip`，访问看下吧\n\n<ImgView title=\"服务器-攻击\" url=\"https://1.z.wiki/images/20220522/c2e4b46f50344907aef462030b23b627.png\" />\n\n┓( \´∀\` )┏ 好熟悉，这不是阿里云的 `oss`吗？很像，看看响应头信息确认下吧。\n\n```text\nConnection: keep-alive\nContent-Length: 237\nContent-Type: application/xml\nDate: Sun, 22 May 2022 06:31:15 GMT\nServer: AliyunOSS // 阿里云的 oss 服务\nx-oss-request-id: 6289D8B323C0543838018911\nx-oss-server-time: 0\n```\n\n😌，破案了，我访问个`oss`都会被腾讯误认为有攻击行为。。。\n\n\n剩下的就让客服去处理吧\n\n<ImgView title=\"服务器-攻击\" url=\"https://1.z.wiki/images/20220522/72cf3b8bbabe41b68dee15c0bf1b042d.png\" />\n\n第二天，已加白\n\n<ImgView title=\"服务器-攻击\" url=\"https://1.z.wiki/autoupload/2022-05-23/68263010801b4859bd8c482480cf8bfc.image.png\" />\n\n### 思考\n\n腾讯这玩意儿，知道非工作日自己的人休息，就不知道我也想休息吗？限我`24`小时解决，否则暂停服务，结果是误判，腾讯打脸了。\n<ImgView title=\"服务器-攻击\" url=\"https://0.z.wiki/images/20220522/298c71aa089c4a23a3c965a223958fff.png\" />\n\n\n### 又来了\n\n2024.01.23\n\n\n<ImgView title=\"服务器-攻击\" url=\"https://3.z.wiki/autoupload/20240123/agIQ.1742X1378-image.png\" />: \"还有这种事儿？\",\n: \"回复:&quot;还有这种事儿？&quot;\n\n------------\n是哇\n\",
misc/invalid-attack
path is https://playground.z.wiki/comment/list?path=/misc/sls.html
sls 是个好东西\n\n通过`logtail`就能轻松收集日志，简单配置下生成各种报表，针不戳针不戳！\n\n\n<ImgView title=\"sls 访问地图\" url=\"https://z.wiki/autoupload/2022-10-21/31b0e037b2b245248995cf535e3ec4c3.image.png\" />: \"👍👍👍👍\",
misc/sls
path is https://playground.z.wiki/comment/list?path=/misc/tuchuang.html
---\nmeta:\n - name: description\n content: 敖武的图床,免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速\n - name: keywords\n content: 敖武的图床,免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速\ntags: [\"图床\", \"敖武的图床\", \"免费图床\"]\nsidebar: false\n\ncomment: false\n# comments: false\n---\n# 敖武的图床\n\n### 免费的公共图床\n\n复制图片，打开页面并按下`Ctrl+V` 或 `Command+V`就能自动上传照片啦~\n\n> 支持上传`照片`、`视频`、`ZIP`、`pdf`等多种文件，最大支持`100M`，上传后支持复制`url`、`base64`、`Markdown 照片`三种方式\n\n<p style=\"\"><a href=\"https://playground.z.wiki/img-cloud/index.html\">新版传送门</a></p>\n\n<ImgUploader />
misc/tuchuang
path is https://playground.z.wiki/comment/list?path=/misc/vue-weekly-download.html
vue 下载量激增？\n\n<ImgView title=\"vue 下载量\" url=\"https://z.wiki/autoupload/20221207/2U54.1562X2808-image.png\" />: \"测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容测试一下超长内容\",\n: \"测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n测试一下超长内容\n\",
misc/vue-weekly-download
path is https://playground.z.wiki/comment/list?path=/misc/z-dot-wiki.html
z.wiki\n\n购买了新域名，`z.wiki`\n\n备案中...\n\n🎉🎉🎉\n\n🎆🎆🎆\n\n💐💐💐: \"这个域名很贵吧\",
misc/z-dot-wiki
path is https://playground.z.wiki/comment/list?path=/misc/real-estate-trend.html
房地产趋势\n\n> 内容转自知乎\n\n\n刚刚，在8月份的时候，有一位老人做了一场内部演讲，题目叫*房地产可能的发展趋势*。\n他说他不要版权，也请不要说出他的名字。但是我们都知道他是谁。\n \n那个扛着大炮，对别人说，“我宁愿同你决斗，但我绝不欺骗”的人。\n他现在在专职卖小米。他的微信名叫任小米。\n下面让我们请出任小米，让他来解答大家的疑惑。\n \n有请。\n \n——本文首发于公号通货朋仗，我的基友周老板连夜熬着黑眼圈手打出来的。欢迎关注。友情提醒：周老板的文已经被公关，请大家及时保存此文。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/90474d597cc84fc79cbd52409c6912b0.房地产可能的发展趋势.jpg\" />\n\n\n\n是拿这个东西，是吗？这个刚才说了纪律啊，我看你们好几个人都举着东西在这录，录毛大庆，录毛大庆可以，录我的时候别录我人，然后录完声音你就说是毛大庆讲的，这个……别说是我讲的就行。\n \n至于这个知识产权嘛，你们随便买，我也不要钱，这个观念你们也可以随便说，但是不可以说是我说的，也可以说是汪总、毛大庆说的都行，好吧。出了门我说过这些我都不承认哈。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/eb3be84ad3234fc6ab355c8692226f1c.什么是充分市场？.jpg\" />\n\n\n\n让我讲房地产市场，所以我们先说说什么是市场。我个人觉得中国的房地产不是一个完全的市场化，市场里头有一个很重要的条件，叫做自由产权保护中的交易权和定价权。那么传统中呢，我们从上小学的时候就开始知道，这个市场里有一个最简单的话，叫做客户是上帝，你看我们汪总把大家请来，你们是上帝，因为你们要给他钱，所以他要很认真的对待大家，给你们各种机会，让你们知道各种情况，对他产生信任。\n \n如果客户是上帝，那就叫做市场经济。\n \n企业家只有一个功能，就是把你的产品或你提供的服务进行交易，如果你的产品和服务不能进行交易，那就是失败者，就没有市场。\n \n你看我们评世界500强，评的是什么？哪个企业的交易额最大，他就是第一强。就是当你能形成交易的时候，也可能暂时没有利润，但事后会产生利润，比如说阿里巴巴，比如说腾讯，刚一开始的时候，上市的时候，并不是说利润很高，比如说京东，可能还亏损，但是他的交易额足以让投资者认为你在市场上能站得住。我们现在的房地产市场是不允许随便交易的，也不允许随便定价，所以严格的说起来，我们的市场不是一个完整的房地产市场。\n \n很多人都担心中国会出现泡沫、崩盘，你们太不相信共产党了。\n \n中国共产党绝不会让它会出现这样一种现象，如果我们说有政府信用，这就是政府信用。政府信用就是告诉你，如果你们出现大量的跌盘的时候，我不让你交易。既不能买，又不能卖，你往哪跌？\n \n所以他不会出现日本式的情况、美国式的情况，你们不要以为一个完全市场化的东西拿来到中国套用，说日本都出现经济泡沫了，出现房地产泡沫了，在中国不会。因为日本人从来不敢像中国一样，每隔一年、每隔一段时间，每到出现问题的时候就给你调控。\n \n日本敢调控吗，美国敢调控吗？不敢。只有中国政府敢，最典型的就是什么呢，最近我们出台了一些政策，告诉你如果你在境外投资这个投资那个，不给你钱，一分都不给你。\n \n这就是可以用各种行政手段来终止你的经济行为，如果你这种经济行为可以随时被终止的话，他怎么会出现问题呢，出现不了，没钱啦，对吧。所以王健林就赶紧得卖，他得还账啊。\n \n另外一个充分自由市场是资源自由配置。资源自由配置呢就是你想怎样配置就怎么配置。他是由市场化的需求，我这有需求，我就可以配置。但是中国我们看看，现在的情况是，如果钢材的产量过高了，把民营的先砍了。\n \n就是马克思说的资本家比较坏，他会把牛奶倒掉一部分，也不给穷人喝，然后把剩余的牛奶涨价。在中国呢可能是把别人的牛奶倒掉，然后把自己的牛奶涨价。所以你们要充分相信我们不是一个完全市场化的情况下，怎么去判断我们的半市场化情况下的走势。\n \n我们还得叫他房地产市场，因为他还有一部分交易，虽然你没有定价权了，比如说政府给你定价，那么陈总在这呢，他代理了很多项目，前天他说代理了一个项目说是深圳的一个豪宅项目，说是十二万块钱，结果秒杀。什么是秒杀呢，就是一秒钟就卖完了。\n \n因为政府在限制定价的时候实际上是把你的项目给你了很多便宜。什么意思？北京八月初批了三个项目，每个项目大约都是九万多块一平米，买的人多的不得了，大家拼命去抢。为什么抢呢，说九万多块钱真贵呀，错了，原来那项目准备卖十四万块钱啊，现在政府给你压价压了好几万了，你还不赶紧买。\n \n所以那三个项目一天时间就抢光了。\n \n上海采取了个政策，上海出台个政策叫摇号。如果市场没有人买这个东西你要摇号要干嘛呀，摇号就是告诉你这个东西是有人抢的东西，你要赶紧去抢。你要不先抢的话，你连摇号的资格都没有，摇号的概念就是你得去抢这l东西。比如说北京买车你得摇号，你不摇号没位置，不给你牌，你想买也买不着。\n \n所以一旦出现摇号这个政策时，我想这个城市一定是供不应求，一定是大家急着买，而没有东西卖了，所以才需要摇号，十个人摇一个号只能有一个人买。\n \n我想这个东西啊就是在什么是市场化的概念里说清楚就够了，所以说对未来市场怎么判断我们只能说一个大的趋势，因为这个趋势的东西是在一个非完全化市场的情况下讲的。\n \n第一个先说说影响市场的因素是什么。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/68ed0bb592cd4dbf9e17091dae66afc5.影响市场的因素.jpg\" />\n\n\n\n通常来说呢有四大因素，一个是国家的基本制度。\n决定市场的基本制度是什么？\n前边我们说要进行市场资源的自由配置，但是我们国家制度告诉你市场资源是不能自由配置的。\n我们第二个因素呢就是宏观经济政策。他会影响到市场微观的一些变化，所以我们还有微观经济政策和我们市场的一些具体情况。市场的供求关系根据上边三条会有影响，但是不是完全受影响呢，不完全是。\n \n我分别把四个来讲一讲。第一个国家制度。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/e9c619176f254eeab9d726a98878f343.国家基本制度.jpg\" />\n\n\n你们可以看看我们五四宪法，五四宪法土地是私有化，但是到了七零宪法，就是九大以后的宪法，把它改了，改成土地不完全私有化，真正实际上是八二年宪法的第四次修改，把土地改成了国家所有制和集体所有两种。所以我们当土地制度是一个单一来源时，我们就不能想像充分市场一样可以自由配置，配置不了。所以土地一定是国家单一配置。这个东西如果在不修改宪法情况下这个基础是不变的。\n第二个是户籍制度。户籍制度在城市之间是有差别的，但是户籍制度改变了吗？没有改变。\n \n你们说现在有租售同权允许上户口，可是你们别搞错了，还有附加条件呢，符合条件的允许上户口，如果不符合条件，你想上个上海户口行吗？没门。\n就是符合条件的上户口还是原来的户籍制度不发生变化，你如果户籍制度不发生变化和土地制度连在一起，为什么这两个东西连在一起呢，因为城市的土地有城市的户籍，农村的土地没有城市户籍的人有宅基地和承包地，如果宅基地和承包地不能交换，那他就没有进城资本，然后城市土地就受限，这两者之间就没法进行交换。\n \n在世界上城镇化发展的过程中，有四步。第一步是农民变成城市人。这个我们已经经历过了。第二步呢，是小城市往大城市跑，我们也经历过了。第三步呢是大城市往郊区跑，我们没有，为什么我们没有第三个阶段呢，因为土地不私有化。你不能说我买一个宅基地到农村去发展一个小镇，不行。\n \n比尔盖茨可以，他可以把硅谷变成他的小镇，一条街上有半条街是属于他的房子。于是他就把学校、幼儿园、医生各种东西都配到那个城镇里，所以才有了第四个部分，叫城市圈或叫城市群。\n \n但中国为什么没有呢，因为土地不私有化，你不能转移，因此造成一个结果就是公共资源配置只向城市配置，那么大家为什么要到城市买房呢，道理很简单，因为公共资源都在城市，学校啊，教育啊，医疗啊，所以才有学区房啊等等其他说法。\n \n那么这个制度随着户籍制度以后他没有发生变化，这是两个定式。这两个定式不改变的时候，我们现在的基本制度所产生的一些情况不会发生变化。\n \n第三个是金融制度，金融制度就是我们在座的诺亚，诺亚是干什么呢？就是不买房子，但是能分享因为房地产而产生的城市化红利。\n \n我不知道这句话大家听懂没有，为什么在大多数国家里头没有人去炒房子，英国啊美国啊发达国家都是这样，为什么，因为他有基金，这个金融制度里头，他有一种基金可以像诺亚基金一样，就是你买不起房子，比如付不起百分之三十的首付，我只有百分之二十或百分之十的钱，你买诺亚基金，在国外你用这种基金，他就可以分享，结果就变成买了房子的发了财，没买房子的发不了财，但是如果有这种金融制度的话，就是所有人都可以共同分享。\n \n因为在城市化的过程中，一定有城市化的红利存在。只是你没买房子你就没获得，别人买了房子别人获得了。\n \n所以基金在世界国家大部分都是免税的，还有一种比较低的成本，告诉你通过城市化的红利你可以分享到房子里的收益，但是你不用冒险或专门去买房子，那就不会形成单独房子的炒作权。\n \n中国是2008年温总理在全国人代会的报告中提到了要建立房地产基金，但是从08年到现在，我们还没有看到一个真正的房产基金出现。\n \n变相的有几家做了试点，但是没有，换句话说就是他没有一个免税的办法让大家以股票的方式分享基金中获得的房地产盈利。因此，同样一个公司的两个人，可能一个人买了房子发了财了，另外一个人没买房子没发财。但如果有可以进行股票交易的这种方式的话，你不用担心房子卖不卖的出去，你也不用担心价格转换，因为他可以长期使用，于是用股票交易的方式转换你的基金就够了，所以说这是中国在国家长期来说国家制度还没有改变、正在探索的一个问题。\n \n后边一个就是社会租赁问题，大家现在都在说社会租赁化，比如说租售同权大家很感兴趣，我就想问一句租的房子在哪？是万科盖，万科能盖多少？\n \n如果我们没有地价问题的优惠，上海有啊，在上海租房很便宜，大概6000多块钱，比商品房便宜多，但是占多少呢，我想在上海的总的住房比例里头，占十万分之一都不到，大概就这么个比例，所以你要想租到那套房子麻烦了。\n \n所以必须用普遍的、不是竞争地价的方式，去减免地价的方式去建立，才有可能。\n \n第二就是税收，税后租赁的房子要给税后优惠啊。全世界都知道德国在发达国家里头是私有化最低的，大概只有百分之四十六左右。\n \n为什么？因为他们租赁住房最多。\n但是为什么他租赁住房多呢，因为租赁住房可以享受免税。\n \n如果你有房子空着不住，超过半年得收你税。但如果你把房子交给合作社，由合作社进行社会租赁给你享受免税，所以他们租房收益率就会大大提高。\n而中国因为没有免税，现在有一些降低税率，但是还没有免税，所以呢社会租赁的价格很高。\n \n如果没有大量的社会租赁房的存在，你不买房子怎么办呢？\n现在我们得问问你想租赁，租售同权的房源从哪来？冯仑讲了个笑话，我听着挺有意思。说老婆是用来生孩子的，那是不是老婆除了生孩子就没有其他功能了，换句话说不是跟老婆生孩子你就不和老婆睡觉了吗，这意思就是说在我们的市场中也有这样的问题。\n \n如果让大家买房子大家才会把他变成合作社的一种方式进行社会租赁，比如说德国的社会合作社里头呢，70%多的是私人住房，政府提供的住房有11%，另外一部分是社会机构，比如说诺亚基金这种，我用基金的方式购买了房子然后用于租赁的。所以说租赁的房源在哪啊，就成了个大问题了，中国在前50年的时间里，基本上是社会分配的，租赁化，但它解决问题了吗？没解决。\n \n说一个最简单的数据，上海，你们知道上海有多少商品房吗，上海现在2400多万人口，大概2.58个人一户，约有9000多万户，将近1000万户吧。\n \n商品房占多少，我们假定近五年每年30万套销售额，150万，再往前5年，每年20万套，100万，那就250万套，再往前10年那，大概平均一年10万套，350万套，占上海总人口数的多少呢，大概不到40%，就全国来说，也不到40%，所以别以为商品房已经占领了市场。\n \n我们有55年的分配历史，就是到98年是五十年，后来的福利分房又延续了四五年，到03年福利分房才基本上彻底结束，就等于55年的分配历史。\n \n你们想想有多少房子？\n因此商品房在社会租赁中只是少数，很多人跟我说，我们的租房价格太低了。很多人都算的我们的租房回报率低的不得了，你们说的对，为什么？你是按商品房房价去算的，租金回报率很低。\n \n但是你按房改房算资金回报率多少呢，大概1000倍或者一万倍。比如说北京当时的房改房1470块钱一平米，扣去工龄，还剩750块钱一平米，60平米，四万二买了一套房子，一个月租金6000块。\n换句话说一年可以收回房子的全部成本还多，150倍。\n \n那你想想租金多少啊，就是因为我们有55年的分配史，那些房子把租金房价拉低了，所以导致你用商品房价格购买的房子租金回报率就显得低了，但是这个租金回报率真的很低吗，也没有那么低，为什么？你只付了30%的首付，后余的钱你是用20年甚至30年以后的一块钱来还今天的一块钱，你们按今天计算，再往十年倒退，十年以前的一块钱在今天值多少钱呢，两毛三分钱，你如果把二十年以后的一块钱拿到今天来卖，20年以后你只花两毛三分钱就够，加上利息不到五毛钱，你还赚了，所以你的租金回报率并不是像某些经济学家计算的那样，很低很低的。\n \n由于这种情况，社会租赁化如果不能确立的话，我们的市场建不了长效机制，也不会发生真正的改变。\n \n那么我们说说土地，这个数据呢是土地局公布的数据。\n你们可以看看今年我们住宅价格的上涨，住宅价格连续上涨，由5900上到6200，这是平均数情况，涨的快不快，还在继续上涨。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/c7cdd3380d5a4b419a5b412de1701f4a.全因主婴城市分用途地价水平，.jpg\" />\n\n\n所以说今年是中国房价历史上最高的一年，因为土地价格也在不断上涨，那么土地价格上涨时房屋有什么影响呢？\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/76ff5ce37b264cddaa4e5336769a9a6a.2017年第二季度三大重点区城地价水平值.jpg\" />\n\n\n我们先看看第二季度三大区域，哪个区域最高，珠三角，所以深圳的房价最高，珠三角比长三角的土地价格还高，那么环渤海地区呢就相对低一点，所以现在排在最前头的还是深圳的房价，然后才是长三角的房价，然后才是北京，环渤海地区或北京地区的一些房价。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/f69054a78cc147bfb129f5cee2067930.2017年第二季度一二三线城市地价水平值.jpg\" />\n\n\n\n那么我们再看看一二三四线城市，一线城市的房价和主要城市的房价看看差很多很多，所以一线城市的房价自然要高，当然一线城市有几个，四个，我们全国有多少个城市啊，657个城市，所以这四个城市的房价老被所有的媒体当作房价的标准，其实不是房价的标准，其实我们看看二线和三线就会发现，三线城市实际的情况还很低。\n \n如果我们只计算三线城市的话，一般地市级以下这些城市的房价，在今天来看，大概只有平均不到四千块钱。\n \n你说中国的房价很高吗？我不承认。\n因为大部分城市是这一类城市，我们只公布了70个城市的数据，650个城市里70个只是个少量数，大部分房价没那么高。\n但是地价和房价是什么关系呢？\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/282393a7d9534e90a886a487c12e2ef4.平均地价与房价.jpg\" />\n\n\n\n这张数据显示的是我们的地价已经六千多块钱了，而我们中部地区西部地区和东北地区的房价都低于现在的地价，只有我们的东部地区的房价高（于地价）。\n \n全国的平均房价7922块钱，和我们的6444中间大概1500块钱的差价，不够自己盖房子的。为什么平均房价只有七千多呢？是因为原来的地价低，现在卖的房子是原来的地价。那么现在的地价意味着什么呢?你们认为会涨价吗？傻瓜都知道。\n \n所以这个价格与土地的关系，有很多经济学家都认为没关系，我说有关系，就是因为这么一种情况。如果不承认这种情况，那就是开发商都是傻瓜，只能干赔本买卖了，现在看，有些开发商还是发了财的。\n \n除了国家政策以外，目前的宏观政策大家都很清楚，三去一补，去产能去库存去杠杆补短板啊等等，这个大家都很清楚。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/ad4d29b79f024e4bbc898dccbcbf331b.当前的宏观政策.jpg\" />\n\n\n\n今年提出了一个稳中求进和防范金融风险，去年没有提防范金融风险。但今年成立了一个什么金融机构，来专门解决一行三会的问题。\n \n那么当前的经济政策会产生什么样的影响？ 决定经济因素的到底是什么东西？为什么会出台这样的政策？\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/70095f8ca3514da7b87584ef89c20070.决定政策的因素.jpg\" />\n\n\n\n第一个我想不变的指标是翻两番，2020年要求我们的GDP翻两番，所以大家说不能低于6.5就能翻两番。然后还有一个人均，人均呢就是不低于GDP增长率就能翻两番， 第二个是国际经济的一些变化，最重要的是在经济增长防范风险之间求平衡，很多人跟我说中国的经济政策今天向左明天向右，后天向左大后天又向右，其实我说说错了，我们只有一条中间路线，所有的路线都是为了求平衡。\n \n当你左边重的时候你往右边靠一靠他才能平衡。当右边重的时候往左边靠一靠才能平衡。平衡就是为了走中间那条路线，所以只是在经济增长和风险之间求一个平衡，既要保证经济增长，同时又要防范风险。这就是我们现在出现的情况。\n \n那么由于这样一种情况，出现的什么呢，货币政策。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/ca370f62d4b04b8f9f18262e363a9393.货币政策.jpg\" />\n\n\n\n这个可能大家都清楚，一个是信贷政策的收紧，不管是从境内还是境外，在去杠杆的情况下，收紧了大量的货币。所以国内的贷款是大幅度的下降。\n \n从城市来说，地方城市的资金融资量到今年六月份大约一万三千八百亿。和去年相当时候下降了百分之五十，因为下了很多的文件告诉你，政府不能随便的借债了。企业也同样，融资政策上出现了限制严管，还有呢就是我们的货币总量缩减了，M1M2到六月份为止都低于百分之十，和去年相比大概下降了两到三个点。M1M2都下降这种情况有的人感觉不出来，像在座的你们可能都是有钱人，你们不觉得。但是有的企业开始觉得紧了。\n \n那么同样还有一个反映，就是资金价格的上涨，比如说个人按揭贷款利率上调了，发债利率上调了，各种各样的借贷都产生了利率上调，那么货币政策从紧还会持续，至少到目前为止我们还看不到有放松的可能性。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/6ebc5e76c9ea451e9bbbb7f4db553c8f.今年5月，108家房企.jpg\" />\n\n\n\n我们再看看今年一到五月份，我们的108家房地产企业，从新资融资下降了百分之五，银行贷款下降了29%，票据债券下降了49%,所以今年上半年大幅度下滑，六月份也没有起色，七月份我们看到的是境外融资超过了一百亿美元，房地产企业从国内拿不到钱就都跑到国外拿钱去了。\n \n那我们再看看下方的两行，10年到14年我们新增的房产企业的有息贷款是八千二百亿，五年的时间平均一年是两千亿。那么15年到16年，两年的时间新增的是8525，平均一年新增四千亿。\n \n那么今年明年后年我们要还多少钱呢?内外债房地产企业大概要还一万八千亿，其中有六千亿是外债，今年到期的大概有几千亿吧，明年大概四千多亿后年大概四千多亿，这就是按照已经发行的票据债券按它的到期日期算出来的数据。\n \n所以下半年到明年后年都进入了开发商的还贷高峰期。\n \n所以大家更看好汪总，希望从汪总这拿钱，因为他们已经从银行拿不到钱了。那么政策持续会出现什么情况呢，明年资金紧张。为什么是明年？因为今年销售不错。后面我会有数据。如果今年销售不错的话开发商兜里还没那么紧张，虽然今年会还一部分债，但是没那么紧张。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/8261731b6acb494b9d285ca1ad6b6600.image.png\" />\n\n\n\n可是如果持续下去再借不到钱明年就有问题了。所以资金紧张可能在明年，那么有可能投资和销售就会出现下行。销售下行不一定是市场的问题，是因为很多城市不批你销售，不跟你发销售证因为你老想卖高价，这个卖不了高价的时候怎么办呢？就扛着。抗到什么时候呢，扛到资金不够的时候。\n \n如果资金不够了，那政府就说多少钱就多少钱吧。我们也不要定价钱了，是吧，那我也得卖一部分啊。\n \n下半年还有一种情况可能导致用低价卖的。就是政府批多少就是多少。因为什么呢？因为有些上市公司要求业绩，上半年扛得住下半年不一定扛得住，下半年可能说我总得有的业绩吧，因此他赚不了那么些钱他也会降价或者低价卖，但是降价或低价不表示说他是亏的，或者说该涨价没涨价不等说是赔本的或是故意把这价格放低。\n \n这两个概念你们不要搞错了。\n于是就有可能造成库存增加了，现在为止库存是下降的，持续下降可能有28个月吧。但是下一步呢就有危险了，因为今年土地供应量里头增量最高的是三线城市。大概增长了百分之二十四点几。 \n去库存去的最快的也是三线城市，但是这一轮去完了以后三线城市能不能持续的保持这样高的销售呢？我个人觉得有问题，下边来讲。\n \n如果说政策要进行调整，什么时候会进行调整为什么要进行调整？\n\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/c58c3a9e122146cc810a43de3833105c.下调政策的条件.jpg\" />\n\n\n\n除了房地产这一块下行了，共产党不会让它垮台所以就得调整过来，让它适度地回来，现在没有出现，我们估计有可能在明年出现快速下行的问题，但是现在已经出现了下行，下行以后会导致什么呢？会导致经济波动，我们可以看看前两年为什么在16年初15年底要放一点，是因为我们那时候的投资只有零点几或负的增长。\n \n那么对全国来说，投资增长经济增长就很有问题。今年我们的GDP增长其中两个重要原因，一个重要原因是基础设施投资高速增长，第二个是房地产。\n而房地产这块呢，有四最，第一个叫见效最快，你让大家买汽车吧，它见效没那么快，你让大家旅游吧它见效也没那么快，你让大家看电影吧也就几十个亿的事，所以它没有见效快的作用，房地产有。\n \n第二个是总量最大，我们的总量有多少呢一手房大概有12万亿，二手房大概七万多亿，整体的大概三万多亿。整体什么意思呢，就像汪总可能拿诺亚的财富买一栋楼，然后把一个旧楼改造了卖新楼或者是或者是买了旧楼以后整体作为出租。像毛大庆，拿了楼以后分销分租，所以这种呢大概有三个亿。换句话说房地产交易大概一年能有二十万亿这个总量，汽车多少？两万亿。吃的多少？六万亿。\n \n所以房地产产生的交易额大概相当于十三亿人吃的三倍，这个总量是最大的。需求也大，因为你想卖东西你得有需求，没人买房子卖不出去那这房子也没用啊。\n \n需求大，往往是因为我们的调控政策造成的。\n为什么调控造成需求大呢？因为调控造成里老说你得排队，排一年的分攒够一年的资格。于是中国有一个特殊情况，别的国家消费都是一个斜坡，因为它今天有了今天就涨，中国不是，中国是台阶似的，突然一批人具备了购买资格，哗得冲了上来，因为它不是一天一天具备的。你是三月份下的命令，它明年三月份突然一下子具备资格了。\n \n你想想是不是这么回事儿。比如说九月一号我们开学，是一大堆学生，但你那个学生是一月一号、二月一号、三月一号、四月一号、五月一号分别分成几个月生出来的，到九月一号就要入学了。这买房子不是啊，是从下命令那天开始的，所以下完命令后具备条件的一大批一下子冲上来了，这个是特殊的需求。\n \n另外一个就是财政支撑，今年到上半年为止，我们的契税增长了百分之二十三点几，我们的土地增值税增长率百分之二十多，换句话说现在的今年上半年房地产产生的税收是财政的两倍到三倍，增速啊不是总量！比如它增长百分之十我就增长百分之二十，我们是两倍多。就是这种增速情况下房地产对中国来说还是一个巨大的支撑条件。所以到他不行的时候你得调。就像夜壶。尿急的时候就得拿出来用用。\n \n那我们再谈完宏观政策后我们再来谈谈微观政策。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/29c5801232de4259acfd60da5aeed0ee.微观政策.jpg\" />\n\n\n微观政策现在有一大堆，现在还有好多我没写上的，数一数大概有四十多种，我也写不完后来就说算了吧，那么它影响什么？\n第一个影响的是资金流向，当你不能买房的时候资金干嘛，你要想分享房地产产生的收益，就只能交给诺亚，你要想干别的你可能会买黄金啊买石油啊买期货买粮食买其它东西，那就分流了。\n \n第二个是社会心理，这个社会心理和别的东西还不太一样，社会心理有两个取向。第一个呢就是有极少的一部分人盼着政府出手了该降价了我等等，他们每次都很失望。另外一部人认为越是政府有限制我越是使劲买，因为凡是政府限制的都是因为少才限制，多就不限制了。所以心理作用影响很大。\n \n再一个价值取向变化很大，价值取向就是往哪去不知道。最重要的是资源分配，我们说的学区啊商住啊乱七八糟的一大堆所有的微观决定的是资源分配。\n \n资源分配是什么呢，就是你想获得北京的资源你就得买北京的房子，承受北京的房价，你想获得深圳的资源你就得承受深圳的房价，你想到上海来，对不起你得承受上海的房价，否则的话，你没有办法分配到这些城市所获得的资源。它独有，换个地方去你拿不到，这些影响力都很大。\n \n再一个就是消费能力和权利，这些微观政策都能影响到房价，所以这些内容对我们的市场一定会产生巨大的影响。\n但是不是所有的影响都一定会产生呢？不会。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/3188b0e145bb45a196b0a27e1d0c6fe0.供求关系.jpg\" />\n\n\n上面三个因素对于供求关系来说产生了两个部分，第一个部分是不变的部分，就是不管你宏观政策怎么调它都不会发生变化。另一部分是随着宏观政策变化的，就是你调了我就得变。比如说你出了个政策我就得办离婚啊，这就是变的部分。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/2bd7cdeb43284c3b9b42541880f7e237.市场自身规律（不变）.jpg\" />\n\n\n那么不变的部分是什么呢？\n第一个就是城市化进程，它永远不会发生变化。我后边会列举个例子，哪些城市会大量的进入人口，这个城市化进程在中国严格的来说按户籍来说也就是四十，日本发生泡沫的时候是七十二点多，所以通常我们还没有看到哪一个国家，城市化率在百分之五十左右，或者在七十以下的阶段里出现过房地产泡沫。\n \n凡是出现房地产泡沫的大部分应该是百分之七十城市化率以后出现的，哪怕就城市而言也是这样。\n所以继续往大城市跑，这个没有变化。尤其是二百万以上的大城市，人口开始持续增加，而五十万以下的小城市，人口大部分处于减少情况，就是转移的速度是非常快的。\n \n第二个就是市场资源。我们说的市场资源，城市的市场资源是不可或缺的，你要想获得的话，你这届毕业了，你说我这房价高我等三届以后我再去争抢这个市场资源行吗？不行。要不然我户口马上转走啊，所以你就得赶紧想办法，今天就得想办法弄个房子，把这城市资源占着，把户口落上。所以说不会发生变化。\n \n开发商已经投入的项目不会变，已经拥有的住房需求也不会变，你们以为上海的房子很好吗？\n我再告诉你们个数据，上海的户均面积是全国城市的倒数第五。\n你们上海人都很惊讶吧，上海平均的户均面积只有66平米。\n \n因为有好几百万套过去的旧房子，包括我们知道四人帮里有个叫王洪文的，王洪文过去是上海纺织厂的机修工人，纺织厂过去在上海是一大主力，大部分是在53年到56年盖得很多很多房子，上海的纺织工人很骄傲的住进了这些小三层楼，你们现在可以去看看那些小三层楼都挤得一塌糊涂了。连厕所都变成厨房了。所有的床在夏天都摆在两个楼之间的走道里。\n \n所以这些地区在上海叫做危改，棚改。他们在大力进行拆迁，这些拆迁还早着呢。这些房子还剩的有多少，大概有500万套，所以你们不要看到上海有很多高楼大厦就很高兴。\n \n我再举个例子，上海有很多小楼，三四层的小楼，在那个小街里头，变成了会所，很多都变成了餐厅，我那天被诺亚人请到一个餐厅吃饭，我们四个人，到了那个房间里头摆了个桌子，四个人就转不过身来了。\n \n什么意思？你要知道那些小楼里的房间有多小，和香港那些小房子差不多，外边看着都漂亮着呢，但是到了里头摆一个四人的餐桌都转不过身来，服务员只能在一边上菜，后面转不过去，这就是住房需求。\n \n所以这种住房需求，今天你说我住30平米，明天就40平米，后天就50平米，我们老用平均数和中国人现在的住房平均数三十平米了很高了，他就没想过这里头大概四十多五十多，城里头只有二十多，二十多还是按建筑面积算的，扣除建筑面积以后呢就剩的更少。\n \n但是美国和英国公布的时候是套内面积。这里头就差了百分之二十多，美国是多少，大概是54，所以和我们的差距啊大的很，我们大概不到二十，所以住房需求里头啊还有很多是不变的。\n \n但是可能发生变化的一个是购买力，首付提高了变成五折了你买不起了。购买力会发生变化，价格预期会发生变化。价格预期会从两种变化，一种变化就是很多人盼着它跌，一种变化就是很多人觉得越限制越涨。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/f256fed83afb4e15a86d010acc204177.市场自身规律（可变）.jpg\" />\n\n\n\n八十年代的时候我们曾经经历过价格闯关，年轻人可能不知道，但是老年人都知道。价格闯关的时候就是双轨制，一部分是计划价格。比如说宝钢，那时候还没有宝钢，宝钢生产的钢材呢三百万吨是归计划，再生产50万吨或100万吨会给市场。就是完成计划以后的超产部分按照市场价格去计算，剩余的按照计划价格去计算，就是双轨制。\n \n那么双轨制的计划价格是很便宜的。比如200块钱一吨钢，但是市场价格这一部分呢可能600块钱，是三倍。那么结果是什么呢，结果是没有人想着会降价，所有人都说市场价格是暴涨的。于是在88年到89年出现了价格的暴涨，所以双轨制闯关被历史上称为改革的失败。\n \n当时没有理解价格预期会发生变化，这个变化呢不上向下而是向上的。那么变化的部分还有投资能力啊、资金周转啊，我们刚才说到了资金啊、库存啊，对开发商都有巨大的影响。\n \n这一部分也会随着宏观政策和微观政策产生变化，那么从不变的部分到变的部分特大城市高度集中和特大城市的限制条件，在我们的自身规律里头是逆转的。\n \n我们一般来说市场化是顺行，就是你愿往大城市跑你就跑啊。但政府是逆着，就越大的城市越不给你地越不让你去，你还是回新农村建设吧，你还是留在农村好。\n \n所以我们有新农村建设，有中小城市建设，希望大家回归，回归就是农村来的还是回农村去吧。它做不到。因为城市的稀缺资源是不变的。\n \n我们这次雄安建设大家都听说了，规划里头第一个是什么，让北京全力支持，北京市做了个规划。第一先把北海幼儿园搬过去，然后把各个大学搬过去，然后把各个医院搬过去，它希望把这些公共资源搬到雄安去，来支持雄安的建设。\n \n可是那些老的教授会到那个新医院去吗。那些老的教授会去那些地方去教学吗。偶尔教一课可能，他们可能离不开北京，而最值钱的是医院里的那些老医生，为什么老的值钱呢，就是因为老的经历的病例多，见多识广所以那些资源啊可能轻易改变不了。\n \n那么已形成的投资和需求啊，这些不变的规律的东西啊仍然影响市场在市场上占主导地位，而可变的部分，会形成一些影响。\n \n就这两个之间是在博弈的，所以我们的市场会发生很多很多的变化。这个博弈过程中啊，有的时候是不变的部分占主导地位，有的时候是可变的部分占主导地位。\n \n在瞬间或者在叠加的时候你很难判断，但是它有可能引发价格的变化，因此我从来不具体说某一个城市一定会发生什么什么价格的变化，就是这种叠加作用啊难说，还贷高峰期高了，有的坚持不住了它就会降价卖房，有的人能坚持住我就等下一轮涨呢，我不怕，毕竟我们有很多民营和私营企业，但是上市公司每年要报业绩，所以这两种变化叠加的时候会出现一些引发价格变化的情况。\n \n我们看看人口。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/47171427605b4413858a6e0d51fc8d3b.大城市五年人口增长数据.jpg\" />\n\n\n\n这个大城市五年人口增长的数据，只列了其中的一些，天津北京这些个竞争啊都是几十万上百万，这个增量是很大的。\n \n从16年以后开始出现了一些变化，就是我们的政策调整要求北京市把低端人口轰出去，就是重新开始划分三六九等，所以给每个区下了任务，说每个区你必须轰出去多少人。所以它的净增长率开始下降了。\n \n那么其他城市可能也有一些地方做了一些规定，限制一些外来人口进入，出现了一些问题，但是这几年我们起码到16年的数据证明这个持续上涨的态势没有变化，大家还是希望往大城市跑。\n \n哪些城市减了呢？我们开始看看负增长的一些城市出现了。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/2649acc32731416ab5304028e9426543.五年人口负增长城市.jpg\" />\n\n\n\n比如说这个南洋人口太多了，它就往外跑，安阳人口太多了，它也往外跑，它该往外跑，南阳它就是个地级市上千万人口，比深圳的常住人口还多。它忍不住了它就往外跑，还有阜阳啊等等的一大堆。那这两者之间看出来的情况是什么呢？就是没有资源的城市难以留住人口和吸引人口，而拥有大量资源的城市就拼命地吸纳人口，所以那些拥有资源的城市人口在急剧的增加和加剧。\n \n我们再看看山东的一个特例，大家可能误解了以为济南还不是人口最多的？不是。青岛不是人口最多的吗?也不是。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/2763443598164b99a918b268cff48b17.山东省人口规模500万以上的城市.jpg\" />\n\n\n\n最穷的临沂市是最多的，那他不跑怎么办呢？所以他会跑的。\n而发达的城市不是人口最多的，穷人待在那里干嘛啊，他肯定会往大城市跑。所以在城市人口变动的情况下不会因为你政策的调整它就变，它还会往大城市跑，拼命跑。\n \n我们再看一些具体数据，目前的经济呢基本上处于一个下行趋势，一个下行趋势是民间投资在持续下降。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/be8315f746ed40fcb0ef21e28ea20ba8.目前的经济情况.jpg\" />\n\n\n\n从7.2到6.9，而我们的固定投资从9.2的高峰到8.3，下降了0.9个点，我个人觉得这个会持续下降，但下降的速度不是很快，不会一下子跌的很多，可能就零点几零点几慢慢的往下掉。为什么，钱越来越紧了。\n \n没钱了它不就往下降吗，政府也不会随便投资了，政府也不能随便借贷了，它就往下走。这是一个大的趋势。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/5aa70b585e6047fea4a4ebe666a0e082.固定资产投资：按企业类型划分.jpg\" />\n\n\n我们再看看这里头的分类，蓝色的是国有和国有控股明显的可以看出来他远远高于民间投资的部分，它大头开始下降了。民间投资占总投资的六十多，所以民间投资如果下行的话，15年16年是下行的很严重的，今年略有回升所以我们的GDP才上来，但是这说明国有和国有控股部分啊开始挺不住了，挺不住的趋势就是下降趋势。\n \n他如果往下走的话就拉动不起来了，可能未来的下降趋势就很严重了。\n我们再看看分类，分类一个是基建，一个是工业。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/a08e10b67c44457ab6309a8d9abe99fe.固定资产投资：按行业划分.jpg\" />\n\n\n\n我们明显看到高峰期的时候是房地产和基本建设的高峰期，这两个占到多少，大概是78接近八十，制造业大概占总量的百分之二十左右，所以我们现在看蓝色的和绿色的这两头都是下行的趋势，如果他们持续下行，也就是说很多人在担心中国经济今年的下半年会出现一个下行趋势，但是这个下行趋势可能不会让大家很担心，不会一下掉下一个点两个点或很多。但是这个下行趋势是难以改变的。\n \n但是我们看到的零售额增长呢十月份是最高的，七月份也开始出现略下降，这都是一个不是太好的信号，一二季度上升的过程大家都很高兴，两个6.9，但三季度怎么样呢，我们再看看价格涨幅，价格涨幅也是出现一个平稳下降趋势，还是一点几。 \n就是中国还是在通缩一个概念中，而没有进入到通胀的环节。\n \n很多人说当政府限制了买房的时候呢租金就下降了，我们可以看到的是，租金的居住价格连续六个月2.5以上的增长，我们没看到租金下降，不知那个报纸在拼命造谣租金下跌的，但是我们在统计数据上没看到。\n \n我们再看看出厂价格，出厂价格呢曾经高过一段时间，就是我们说的把别人的牛奶倒掉价格就上去了。那么现在呢别人的牛奶也没处倒了，他又开始回来了，这是工业出厂价格，购进价格也开始出现下跌情况了。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/02b3522d510347388a5238ab615bf6b0.全国房地产开发投资增選.jpg\" />\n\n\n\n开发商增速，这也是大家常见的一种东西，如果开发商的增速已经从9.3降到7.9，我个人不觉得它能回来，它还是一个下半年持续下降的一个过程，它可能会延续到今年年底。但即使延续到年底会不会很糟呢，我也不认为很糟，因为今年的销售情况还很好，还略有增长。\n\n\n\n\n\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/ba8f1abb64844b5997227a325afa9edf.全国房地产开发企业土地购贸圖积增速.jpg\" />\n\n\n\n但是我们看到的土地增长，你们要做一点分析，什么分析呢，开发商购进的土地面积增长中商品房的面积没有增长，增长的一大堆是租赁性住房和其他住房的面积，这部分面积对我们通常所说的市场的房价不是指商品楼的房价，而是指住宅的房价。它是恶化的，并没有得到改善。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/5ac9e21787264ffda6cc4ca3e98e1f1a.image.png\" />\n\n\n不要简单看说土地要增长了。销售面积及销售增幅都很好。你们是不是觉得14是在下降一个趋势，21到18，19也是一个下降趋势？是的。\n \n自我们调控政策出台以后，基本上出现了一个下降趋势。\n说句心里话20太多了，要是都这么呼呼的涨谁也受不了。\n \n幸亏我们有个聪明的中央政府，告诉我们不能这么涨了，得压着点。现在给各个城市政府下达的任务基本上是按去年10月份的房价，涨幅不得超过百分之二，这是指限的城市，没限的那些三四线城市，你爱涨多少涨多少、影响也不大。\n \n但是限的城市基本是这样一个原则，所以控制在百分之二的涨幅左右，涨百分之十四我们大家都要知道一个事情就是去年我们的销售额接近十二万亿，差一点点，是历史上最高峰。\n \n销售面积也是历史上最高峰，那么今年我就算，7月份以后每个月下降了两个点，二七一十四，还剩五个月，每个月平均下降两个点的话，我们还有百分之四的增长，即使我们还剩百分之零点五的增长，也就告诉你今年是中国有房地产以来历史上最好的一年。比去年还好。\n \n去年本身就是大丰收，暴涨，但是今年能保持百分之零点几的增长，也告诉你是增长，你也不能说他不好了。毕竟是涨的。如果每个月下降不是零点二，那么涨幅可能还会保留更多一点，因为我们还剩五个月，二五十个点，按面积算还剩四个点，按销售额算的化还剩六个点。\n \n所以我个人还是有信心认为，今年的房地产市场，仍然是历史上最好的一年，不管他是怎么的调控，它还是最好的一年。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/3bc741f907a04c3eb98196ff41f3641a.房地产市场相关指标.jpg\" />\n\n\n\n那么把它的相关数据做一下对比，从新开工、在建、竣工和房屋销售。看看那个竣工面积很低很低，而销售面积很高很高，这中间差是什么，这中间差就是告诉你现在的盖的房子基本上都卖完了。你们不要以为在建的房子都是没卖的房子，我不说没有还有一部分。从历史上看，你要把这条红线和那条绿线你把它全加起来看，也就是说在局部的地区和时间里头，红线是高于绿线的，这是产生和增加库存的，而剩下的部分实际上告诉你在建的房子已经卖掉了。\n \n那么我们看看今年的个贷，大家都担心的是个贷会不会形成风险，我说不会，我当上银行行长也会这么说，中国的个贷没风险，你们不要听那些专家们乱评价，说中国的个贷有多少。\n \n中国的个贷总量很大，分三类。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/e6176c127e924984bee866066ad1c4e2.销售额：43632亿元.jpg\" />\n\n\n\n第一类是一手房，大概只有百分之二十二的占比，换句话说房子跌了百分之八十和银行都没关系。\n \n第二类是二手房，大概百分之四十几，也就是房价跌了百分之六十和银行都没关系，所以银行计算的时候都是百分之五十的保证。\n \n第三类是有风险的，虽然是以房子抵押信贷的，但是这钱没有买房子，这钱比如说用于干工业，但是小资本家是用住房作为抵押去的。\n \n很多人不知道这一部分把他计算到个贷里头，错了，它和房地产没关系。因为它抵押的钱是用于干工业干商业干其他东西了，这一部分占的比例很大，大概约有五六万亿。这一部分是有风险的，但是它和房地产没关系。\n \n我们再看看今年的价格。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/706b1dc47434451ca1ab69288ba339b4.销售面积：51820万平方米.jpg\" />\n\n\n\n绝对价格和去年同期五月份相比，增长了5.4% 。\n我们再看每个城市之间。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/ae1a5e389e074cb7b439334555ec9ad1.住宅价格.jpg\" />\n\n\n\n大家别以为那条蓝线是下降趋势，他是叫增幅下降。增幅下降不代表绝对额下降，你们千万不要搞错了，我们所有公布的住房价格数据，都是增幅。增幅下降不表示绝对额下降。如果我前头增了百分之十，现在增百分之八了，还是增啊，所以不等于绝对额下降。\n \n但这里可以看出来三线城市反而是持续上升的，为什么？在我们的计算中我们的房地产销售实际上按纯商品房计算是负增长的，但是为什么前头是正增长呢？是因为我们有一个新的政策叫棚改里头的货币化拆迁。\n \n这个货币化拆迁占了销售额多少呢？大约占了百分之二十多。\n \n这部分多少呢？大概开行是六千个亿，地方政府再加上几千个亿以后啊他可能还会持续，到下半年这一部分货币化拆迁危改的这一部分还会保证我们的销售额稳定在一个程序上，他还会继续增加，但它多数是在三四线城市。\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/5e04da8b03994882867d9dc193859bc8.102.jpg\" />\n\n\n所以我们看到到位资金减速，这个国房景气指数是上升的，就是因为销售问题。这个数据告诉大家，哪个地区增长是最快的。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/0e7488fade1b438094693931c715e0a3.2017年17月份东中西部和东北地区房地产开发投资情见.jpg\" />\n\n\n我们看看东北地区是负的百分之十点几的增长，那么换句话说如果扣去了东三省是不是我们其他地区的还是正增长呢？因为东三省太差了，叫做投资不过山海关。我们再看看涨幅，商品房销售面积和商品房销售价格的涨幅之间差告诉你的就是价格上升。\n\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/da0b5ab20a88483484e0f371406b3998.2017年1-7月份东中西部和东北地区房地产销售情况.jpg\" />\n\n\n\n如果后者大于前者，就是价格增长的比例，每个月公布数据的时候我们就可以清楚地知道，房价是在持续上涨而不是在下降的。\n \n那么我们更重要的一个，就是一手房向二手房转移的速度在加速，这里可以看到，各个城市之间二手房交易量是多少呢，大概相当于挂牌量的百分之九十，最高的是九十九。什么意思呢就是我挂出了二手房就卖掉了，挂出去就卖掉。这个卖的速度是非常快的，而且总量很大。\n \n从北京来说，这个总量已经大于一手房的一倍多。所以在一手房和二手房的交易过程中可以看到，很多人都说把商品房把价格拉高，把贫富差距拉大了。\n \n我告诉你错了，央改房已购公房都是房改房，这些房改房是占比例第二的，而房改房都是因为房价上涨发了财的，所以让那些穷人或者过去没有发财的人因此而降低了贫富差别的差距。他们不是因此变穷了，而是因此变富了。\n \n这就是城市化发展的过程。这个面积看二手房交易里头一百五十以上平米以上的数不是少数，什么意思呢就是告诉你你真实的需求和刚需改善需求占多数，而绝不是说我们在奢侈性而造成了另外一种情况。\n \n那么我们还可以看到，这个从价格上来说，低价格的占多数、高价格的占少数，为什么低价格的占多数呢？就是还是刚需占多数啊，真实需求占多数啊。那么我们还可以看看，从按揭的比例上看，真正买二手房的比例很高，就是付款比例很高，为什么？就是它卖掉了原来的旧房子买了新房子，或者说卖了旧房子买了旧房子但是买大了。因为那个钱不是来自工资，那个钱来自卖房子的钱。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/e7c764b8a16c43bba093cacedb9d67b1.房地产政策特点.jpg\" />\n\n\n\n因此我们现在的特点特点是逆向调控。人向大城市集中的时候我们地向小城市减，然后造成结果就是好的压坏的救，我们看看钢材是不是这样，铝材是不是这样，所有的几乎都是这样。所以这就是一个特点，不仅仅是在房地产。\n\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/567b0b6b844e4394a3d552cc19dfcb20.房企的危险.jpg\" />\n\n\n那么我们还可以看到，房地产最危险的就是现金流能不能扛得住，我们希望最好的情况就是低潮买地，高潮卖房子。但是如果你的现金流扛不住你就得在低潮卖房子，高潮的时候去买地，那你就惨了。\n\n\n<ImgView title=\"房地产趋势\" url=\"https://z.wiki/autoupload/2022-09-16/0fae9950bd79460685639aa3b3d27ea9.房地产实现真正市场化.jpg\" />\n\n\n\n因此我们希望真正实现市场化，第一个是土地问题，不改变土地政策难以实现长效机制，什么都是白搭，第二个是如果户籍制度不改，税收制度不改变，我们很难实现真正的市场化。 \n他们举牌告诉我时间到了，我只好不讲了。谢谢: \"别买房\",
misc/real-estate-trend
path is https://playground.z.wiki/comment/list?path=/misc/macos-ventura.html
macOS Ventura\n\n升级到`macOS Ventura`，发现系统设置面板只能调节高度不能调节宽度，好奇怪的设计，明明横向上有更多空间而无法利用🤔\n\n\n<ImgView title=\"macOS Ventura\" url=\"https://z.wiki/autoupload/2022-11-02/6c2370d5fc1345a6bba6c0e1a25f8067.image.png\" />
misc/macos-ventura
path is https://playground.z.wiki/comment/list?path=/misc/issue-from-comment-plugins.html
issue\n\n博客[评论插件](https://z.wiki/misc/comment-plugin.html)重构的时候，为了防止恶意评论我加了一个敏感词屏蔽功能\n\n<ImgView title=\"敏感词屏蔽\" url=\"https://0.z.wiki/autoupload/20240221/pEEo.1158X1212-image.png\" />\n\n有了敏感词屏蔽功能就需要有对应的词库，\n于是我在收集部分词库后整理放到了[github](https://github.com/yihuaxiang/sensitive-words-in-china)中，\n惊喜的是居然被人发现并给了一个[issue](https://github.com/yihuaxiang/sensitive-words-in-china/issues/1)来表达支持。\n\n<ImgView title=\"issue\" url=\"https://6.z.wiki/autoupload/20240221/P3Yc.938X1540-image.png\" />\n\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/disappoint.png\" /> \",\n\n: \"回复:&quot;博主太厉害了&quot;\n\n------------\n\n感谢支持 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/whee.png\" /> \",\n\n: \"博主太厉害了\",
misc/issue-from-comment-plugins
path is https://playground.z.wiki/comment/list?path=/misc/index.html
琐碎\n\n记录琐碎的事情~\n\n<LastPost :random=\"true\" prefix=\"/misc\" :number=\"10\"/>: \"<p>大的地方</p>\n\",
misc/index
path is https://playground.z.wiki/comment/list?path=/misc/cmd-recommend.html
---\nmeta:\n - name: description\n content: 程序员必备 神奇 终端 提示 shell 工具 linux 开源 推荐\n - name: keywords\n content: 程序员必备 神奇 终端 提示 shell 工具 linux 开源 推荐\n---\n# 终端工具推荐\n\n### fzf\n\n`fzf`是一款使用`GO`语言编写的交互式的`Unix`命令行工具。\n可以用来查找任何 列表内容、文件、历史命令、 本机绑定的`host`、 进程、`Git`分支、进程 等。所有的命令行工具可以生成列表输出的都可以再通过管道`pipe`到`fzf`上进行搜索和查找\n\n<ImgView title=\"fzf\" url=\"https://8.z.wiki/images/20220318/85ed7eeda5f8490794630145886067fa.gif\" />\n\n[github](https://github.com/junegunn/fzf)\n\n```shell\nbrew install fzf\n```\n\n\n### rg\n\n快速、多用途的代码搜索工具\n\n常用选项：\n\n```\n -A, --after-context <NUM> Show NUM lines after each match.\n -B, --before-context <NUM> Show NUM lines before each match.\n -s, --case-sensitive Search case sensitively (default).\n -f, --file <PATTERNFILE>... Search for patterns from the given file.\n -M, --max-columns <NUM> Don't print lines longer than this limit.\n -m, --max-count <NUM> Limit the number of matches.\n```\n\n前端经常有编辑后的`js`文件都压缩成一行，使用`-M`可以避免控制台大量输出内容。\n\n#### 安装\n\n```shell\nbrew install ripgrep\n\n```\n\n[github](https://github.com/BurntSushi/ripgrep)\n\n### loc\n\n`lines of code`,快速统计代码行数的工具\n\n<ImgView title=\"终端推荐\" url=\"https://z.wiki/images/20220318/eb49ea01501344e688d39e31bfe59013.png\" />\n\n\n\n#### 安装\n\n安装：[点此 github](https://github.com/cgag/loc/releases)(或[国内镜像](https://z.wiki/autoupload/2022-09-14/62d62f3479a64502ab11fc04dfa746a4.loc-v0.3.4-x86_64-unknown-linux-gnu.tar.gz.zip))下载可执行程序\n\n```shell\nbrew install loc\n\n```\n\n### http-server\n\n[npm http-server](https://www.npmjs.com/package/http-server)\n简单、零配置的命令行静态资源服务器,平时局域网内分享文件、共享本地资源还是很方便的\n\n```shell\n# 安装命令\nnpm install --global http-server\n```\n\n### Oh My Zsh && Zsh\n\n`zsh`提供诸如补全、色彩高亮、跳转、历史记录、智能提示等诸多特性\n\n#### 安装 `zsh`\n```shell\nbrew install zsh\n```\n\n#### 切换默认 `shell`\n```shell\nchsh -s /bin/zsh\n```\n\n`Oh My Zsh`则是`zsh`配置管理工具\n\n```shell\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n### neovim\n\n`vim`的替代配，`vim`是一个非常成功的项目，是一个非常优秀的工具。但过于悠久的历史也成了不小负担，而过去的辉煌也一定程度上成为了前进的枷锁。这导致 `vim` 社区过于保守。现在 `neovim` 和 `vim` 相互竞争，对两者应该都是一个好的事情。让我们试目以待吧。\n\n<ImgView title=\"neovim\" url=\"https://z.wiki/images/20220318/f6b299ce76f14a36bdb34287bb0b8cc9.png\" />\n\n\n### jq\n\n轻量级命令行`json`处理器，使用`C`语言开发、零依赖。\n\n<ImgView title=\"jq\" url=\"https://9.z.wiki/images/20220319/92902799ed1c44e9bca8fa2cbd9fbc73.png\" />\n\n```shell\n# centos 安装命令\nsudo yum install jq\n\n# macOS 安装命令\nbrew info jq\n```\n\n### jless\n\n命令行`json`查看工具，最大的特点是支持折叠。\n\n<ImgView title=\"jless\" url=\"https://5.z.wiki/autoupload/2022-09-14/a7c95bd5fd0546be85cc5c5f5fa33b81.jless-recording.gif\" />\n\n### mycli\n\n`mysql`客户端，支持语法高亮和命令补全，效果类似`ipython`，可以替代`mysql`命令。\n\n<ImgView title=\"mycli mysql 客户端\" url=\"https://z.wiki/images/20220319/8724416f58714a04906308de93607eb8.png\" />\n\n### fig\n\n终端自动提示工具。\n\n<ImgView title=\"fig\" url=\"https://4.z.wiki/images/20220319/6d94bfddc24a48d08b12b6c51144b3b9.gif\" />\n\n### tig\n\n`git` 提交日志查看工具，以文本形式查看提交历史，[安装方法](https://jonas.github.io/tig/INSTALL.html)\n\n<ImgView title=\"tig\" url=\"https://2.z.wiki/images/20220327/e04486b038f64aaab1effc3fe4cdd6ad.png\" />\n\n\n### tldr\n\n`tdlr` 是 `Too long, Don't read` 的缩写（太长不读、太长不看），\n可以帮助你快速查看常用命令的使用实例，比如 `tar` 命令，那后面一长串参数谁记得清呢？当然，`linux` 大佬除外。\n\n<ImgView title=\"tldr\" url=\"https://3.z.wiki/images/20220327/6b8f1df8617c4b0b8105c3962fe86819.png\" />\n\n\n### zsh-autosuggestions\n\n`zsh`命令自动补全插件`zsh-autosuggestions`\n\n<ImgView title=\"zsh-autosuggestions\" url=\"https://4.z.wiki/images/20220327/c049aa1a16774e54a99ef7369a860f55.png\" />\n\n\n### cnpm\n\n[cnpm](https://npmmirror.com/) 是阿里定制的命令行工具，用来代替默认的`npm`，同时解决国内访问速度首先的问题，支持 `npm` 除了 `publish` 之外的所有命令。\n\n### gck\n\n[gck](https://npmjs.com/package/gck) 用于切换分枝的神器\n\n\n<ImgView title=\"cnpm\" url=\"https://9.z.wiki/autoupload/20221124/UgEU.352X762-RPReplay_Final1669303784.gif\" />\n\n#### 安装\n\n```shell\nnpm install -g gck\n```\n\n### nodemon\n\n`nodemon`可是监听文件变化自动重启服务，开发提效工具，可通过`npm`安装\n\n### siege\n\n`siege`是个开源的服务压测工具，地址：[siege](https://github.com/JoeDog/siege)\n\n### stress\n\n服务自身压测工具\n\n### viu 与 lsix\n\n在终端查看照片的工具，均可以通过`brew`安装。\n\nps: 只能说，勉强能看😓\n\n<img src=\"https://z.wiki/autoupload/20230209/wWWi.1362X818-image.png\" width=\"200\" alt=\"viu 看图效果\" title=\"viu 看图效果\" />
misc/cmd-recommend
path is https://playground.z.wiki/comment/list?path=/misc/karabiner.html
神器的 karabiner\n\n### 背景\n\n我最喜欢 IDEA 的一个原因就是`Command+E`可以切换最近的问题\n\n同样的特性一直想在`Google chrome`中拥有\n\n作为实践，曾开发过一个[标签选择器](https://chrome.google.com/webstore/detail/%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8/klhihaelmoenimgekhdaenjgloipcacf) ，效果还是不错的，通过`Command+E`就能切换任意标签，还支持拼音搜索👏👏\n\n自卖自夸一下😂\n\n<ImgView title=\"karabiner\" url=\"https://5.z.wiki/images/20220124/2d22e40dd1f94fcabc623a7a17b79274.png\" />\n\n\n最近发现`Google chrome`支持了原生的\"标签选择\"功能\n\n<ImgView title=\"karabiner\" url=\"https://5.z.wiki/images/20220124/9ee6318c08fe407d9dd9a35e9e7e1da8.png\" />\n\n\n针不戳、针不戳\n\n不过美中不足的是\n1. 不支持拼音搜索\n2. 快捷键好别扭，`Command+Shift+A`，一个手按下去太别扭，两个手按下去有感觉成本太高\n\n\n\n第一个方案不好解决，😞\n\n那就解决第二个问题吧\n\n### 思路\n\n`macOS` 系统中修改快捷键有两种方式\n\n1. 系统设置 - 键盘\n通过添加各种\"App 快捷键\"来设定\n\n<ImgView title=\"karabiner\" url=\"https://5.z.wiki/images/20220124/555859898b0947e4a8bfee99984a2945.png\" />\n\n如图：我为`keynote`的多种图形设置了快捷键，然而这种方案有一个硬性要求：要求改功能在软件菜单栏中有对应的按钮\n\n<ImgView title=\"karabiner\" url=\"https://5.z.wiki/images/20220124/7aeb4d916298435b96e5ebd4baf47280.png\" />\n\n\n犯难了，找了半天，没找到`Google chrome`中和\"标签选择\"相关的按钮\n\n放弃该方案\n\n2. karabiner (第三方修改键盘映射的软件)\n\nkarabiner 简介： \n\n> Karabiner for mac是一款帮助用户修改键盘镜像映射的工具，Karabiner for mac这款软件可以重新映射的键没有任何的任何限制，是用户使用起来操作更加的方便便捷。这款软件可以修改Mac系统上的一切输入法设置，可以改成自己顺手的快捷键。\n\n上手开干~\n\nkarabiner 中我常用的功能分三种，如下\n\n#### 简单映射（Simple modifications）\n\n将键盘上的某个键位映射为任意指定的其他键位\n\n如下图：一般我习惯使用左侧的`Command`键，右侧基本用不到，所以干脆映射成了`Option`键，通过`Option+数字`来切换程序坞中的应用\n\n<ImgView title=\"karabiner\" url=\"https://4.z.wiki/images/20220124/8d1c7916e08540798798422447f825f6.png\" />\n\n\n\n#### 功能键映射（Function keys）\n\n将键盘上的功能键（Fn）映射为任意指定的其他键位\n\n如下图：将 F1、F2、F3 等功能键映射为各种功能\n\n<ImgView title=\"karabiner\" url=\"https://4.z.wiki/images/20220124/cdf8070f0a4041d492370a1e76a42f1f.png\" />\n\n#### 复杂映射（Complex modifications）\n\n其他复杂情况需要使用该功能\n\n例如：笔记本上的上下左右键位置太偏远，不易使用，于是我将`Ctrol+hjkl`分别映射成了上下左右等按键（类 vim 风格），这种需求比较插件，添加改映射规则的话直接从网上找到对应脚本安装即可\n\n点击下图红框即可打开配置市场，搜索合适的脚本\n\n<ImgView title=\"karabiner\" url=\"https://4.z.wiki/images/20220124/d1e3a96ef3214a5ebf4ffbc99fafa165.png\" />\n\n[Karabiner-Elements complex_modifications rules](https://ke-complex-oss-process=style/z.wiki)\n\n然而，具体到我的这个需求，就比较小众化了，得自定义规则\n\n##### 自定义规则\n\n进入 [Karabiner-Elements complex_modifications rules](https://ke-complex-oss-process=style/z.wiki) 后如果找不到合适的规则配置，那就得自定义规则了。\n\n任意选一个规则，点击\"Edit JSON\"，打开配置的网站\n\n<ImgView title=\"karabiner\" url=\"https://3.z.wiki/images/20220124/260e7e8f4df14819acc94dc6e607b65a.png\" />\n\n也可以点此直接进入：[Karabiner Complex Modification](https://genesy.github.io/karabiner-complex-oss-process=style/z.wiki)\n\n界面全英文的，但是还是比较易懂的\n\n##### 开始配置规则\n\n首先明确我的目的\n1. 如果当前应用为`Google chrome`\n2. 当按下`Command+E`的时候\n3. 触发`Command+Shift+A`，打开\"标签选择\"功能\n\n配置如下：\n\n1. 触发条件\n\n<ImgView title=\"karabiner\" url=\"https://3.z.wiki/images/20220124/c62af2f1745b4715bd1c870e41df3a90.png\" />\n\n2. 模拟触发目标\n\n<ImgView title=\"karabiner\" url=\"https://3.z.wiki/images/20220124/8cd27fa984bc4b959a4dfd7e310d337d.png\" />\n\n3. 条件，仅限谷歌浏览器，避免对其他软件造成干扰\n\n<ImgView title=\"karabiner\" url=\"https://3.z.wiki/images/20220124/32b80281c85143e997618cf555e5f223.png\" />\n\n上图中`com.google.Chrome`为谷歌浏览器的标识，那如何知道谷歌浏览器的标识的呢？\n\n下载`Karabiner-EventViewer`，该程序会显示激活程序的标识，也可以用来调试、排查问题\n\n<ImgView title=\"karabiner\" url=\"https://4.z.wiki/images/20220124/41db4dcde8b24416b4db916ec0b1a4dd.png\" />\n\n\n\n最终结果[Command+E 标签选择](https://genesy.github.io/karabiner-complex-rules-generator/#eyJ0aXRsZSI6IltjaHJvbWVdIC0gMiIsInJ1bGVzIjpbeyJkZXNjcmlwdGlvbiI6ImNoYW5nZSBDb21tYW5kK0UgdG8gQ29tbWFuZCtTaGlmdCtBIiwibWFuaXB1bGF0b3JzIjpbeyJ0eXBlIjoiYmFzaWMiLCJmcm9tIjp7Im1vZGlmaWVycyI6eyJtYW5kYXRvcnkiOlsibGVmdF9ndWkiXX0sImtleV9jb2RlIjoiZSJ9LCJjb25kaXRpb25zIjpbeyJ0eXBlIjoiZnJvbnRtb3N0X2FwcGxpY2F0aW9uX2lmIiwiYnVuZGxlX2lkZW50aWZpZXJzIjpbImNvbS5nb29nbGUuQ2hyb21lIl19XSwidG8iOlt7InJlcGVhdCI6dHJ1ZSwia2V5X2NvZGUiOiJhIiwibW9kaWZpZXJzIjpbImxlZnRfZ3VpIiwibGVmdF9zaGlmdCJdfV19XX1dfQ==)\n\n### 链接\n\n1. [karabiner](https://karabiner-elements.pqrs.org/)\n2. [Command+E rule](https://genesy.github.io/karabiner-complex-rules-generator/#eyJ0aXRsZSI6IltjaHJvbWVdIC0gMiIsInJ1bGVzIjpbeyJkZXNjcmlwdGlvbiI6ImNoYW5nZSBDb21tYW5kK0UgdG8gQ29tbWFuZCtTaGlmdCtBIiwibWFuaXB1bGF0b3JzIjpbeyJ0eXBlIjoiYmFzaWMiLCJmcm9tIjp7Im1vZGlmaWVycyI6eyJtYW5kYXRvcnkiOlsibGVmdF9ndWkiXX0sImtleV9jb2RlIjoiZSJ9LCJjb25kaXRpb25zIjpbeyJ0eXBlIjoiZnJvbnRtb3N0X2FwcGxpY2F0aW9uX2lmIiwiYnVuZGxlX2lkZW50aWZpZXJzIjpbImNvbS5nb29nbGUuQ2hyb21lIl19XSwidG8iOlt7InJlcGVhdCI6dHJ1ZSwia2V5X2NvZGUiOiJhIiwibW9kaWZpZXJzIjpbImxlZnRfZ3VpIiwibGVmdF9zaGlmdCJdfV19XX1dfQ==): \"回复:&quot;好用，学到了。&quot;\n\n------------\n\n+1\",\n: \"好用，学到了。\",
misc/karabiner
path is https://playground.z.wiki/comment/list?path=/misc/report.html
---\nmeta:\n - name: description\n content: 高德 交通 分析报告\n - name: keywords\n content: 高德 交通 分析报告\n---\n# 交通分析报告\n\n<a href=\"https://report.amap.com/download.do\" target=\"_blank\">\n <ImgView title=\"交通分析报告\" url=\"https://5.z.wiki/autoupload/20221201/Qq0n.1726X2476-image.png\" />\n</a>\n\n[2022年度中国主要城市交通分析报告](https://z.wiki/autoupload/20230204/IsdA.2022年度中国主要城市交通分析报告final.pdf)\n\n[2022Q3中国主要城市交通分析报告](https://z.wiki/autoupload/20221201/VV5w.2022Q3中国主要城市交通分析报告final.pdf)\n\n[2022年国庆假期出行预测报告](https://z.wiki/autoupload/20221201/txAu.2022年国庆假期出行预测报告-final.pdf)\n\n[2022年中秋小长假出行提示](https://z.wiki/autoupload/20221201/fdUJ.2022年中秋小长假出行提示.pdf): \"这是啥？\",
misc/report
path is https://playground.z.wiki/comment/list?path=/misc/2021-12-26.html
哎\n\n最新情绪不高啊
misc/2021-12-26
path is https://playground.z.wiki/comment/list?path=/misc/idea-plugins.html
---\nmeta:\n - name: description\n content: 优秀软件,提效神器,工具,idea 开发工具 插件 Java 程序员\n - name: keywords\n content: 优秀软件,提效神器,工具,idea 开发工具 插件 Java 程序员\n---\n# idea 插件篇\n\n### IdeaVim\n\n作为一个`vim`爱好者，无论使用什么`IDE`，都会第一时间安装`vim`插件，在`Idea`中就是`IdeaVim`\n\n<ImgView title=\"idea 插件\" url=\"https://z.wiki/images/20220423/09f93ac8b7284d01872c7c948b3ec7dc.png\" />\n\n通过`.ideavimrc`可以进行更高阶的配置，可参考[yihuaxiang/dotideavimrc](https://github.com/yihuaxiang/dotideavimrc)\n\n### Markdown Image Support\n\n经常使用`Markdown`写文档，通过该插件可以一键上传照片，适用于`Jetbrains`全系列软件，支持多种存储、自定义命名、支持压缩等等。\n\n<ImgView title=\"idea 插件\" url=\"https://z.wiki/images/20220423/5df7f22010404e77b9f0782cece30cc5.png\" />\n\n\n### Vue.js\n\n`Idea`默认不支持`Vue`语法高亮，需要`Vue.js`插件来实现\n\n<ImgView title=\"idea 插件\" url=\"https://z.wiki/images/20220423/4bf9f00bc7d74553877aebfd698ccfb3.png\" />\n\n### AceJump\n\n`Ace Jump`是一种从`emacs`上借鉴过来的快速光标跳转方式，\n操作方式是：你用某个快捷键进入`AceJump`模式后，再按任一个键，\n当前屏幕中所有该字符都被打上一个字母标记，你只要按这个字母，光标就会跳转到这个字符上。这种跳转方式非常实用，\n你根本不用管当前光标在什么位置，眼睛只需要盯着需要跳转到的位置，最多三四下按键就能准确把光标定位，开始编辑。\n\n<ImgView title=\"AceJump.png\" url=\"https://z.wiki/images/20220423/68a874934a054075a5a681788a282c62.png\" />\n\n\n<ImgView title=\"ace\" url=\"https://user-images.githubusercontent.com/7598734/164874481-b8ccc3ba-aa3b-4b44-8f44-944f3097aa76.gif\" />\n\n### RestfulToolkit\n\n`RestfulToolkit`是一套 `Restfull` 服务开发辅助工具集合。\n提供根据`url`跳转到对应代码定义、`http`请求工具等\n\n目前支持`spring`、`JAX-RS`。\n\n<ImgView title=\"RestfulToolkit.png\" url=\"https://z.wiki/images/20220423/d3414f87d3e94a0485905ab80842ea97.png\" />\n\n\n<ImgView title=\"tool\" url=\"https://user-images.githubusercontent.com/7598734/164874423-e2fb9ddd-118d-420d-a155-266a8de1fb34.gif\" />\n\n### Jump to Line\n\n`Jump to Line` 插件支持在调试代码时直接执行指定行的代码，和内置的调试功能不同的是，该插件跳到指定行时会忽略起止的代码直接执行目标行代码。\n\n而且跟厉害的是，向前、向后跳转都支持。\n\n<ImgView title=\"idea 插件\" url=\"https://user-images.githubusercontent.com/7598734/164883428-8dd6bb77-b29e-4749-8a1a-232f04c04426.gif\" />\n\n\n### JRebel\n\n`JRebel`是一种生产力工具，允许开发人员立即重新加载代码更改。它跳过了 `Java` 开发中常见的重建、重新启动和重新部署周期。`JRebel` 使开发人员能够更高效的进行业务开发。`JRebel` 支持大部分`java`技术框架。\n\n<img width=\"452\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7598734/164883519-4400644b-5c88-4113-bf88-5a735dfbd010.png\">\n\n\n\n### IdeaVimExtension\n\n为`IdeaVim`插件增加自动切换为英文输入法的功能 \n输入法自动切换功能不会默认启用\n编辑器中`normal`模式下输入输入下面的指令以启用自动切换输入法功能：\n1. `:set keep-english-in-normal` 开启输入法自动切换功能\n2. `:set keep-english-in-normal-and-restore-in-insert` 回到`insert`模式时恢复输入法\n3. `:set nokeep-english-in-normal-and-restore-in-insert` 保留输入法自动切换功能，但是回到`insert`模式不恢复输入法\n4. `:set nokeep-english-in-normal` 关闭输入法自动切换功能\n\n也可以通过将`set keep-english-in-normal[-and-restore-in-insert]`加入到`~/.ideavimrc`文件中并重启IDE来启用插件功能。\n\n\n### GitToolBox\n\n<ImgView title=\"idea 插件\" url=\"https://z.wiki/autoupload/2022-10-28/d459f305b38440aa9e7e5d2f36ab65be.image.png\" />\n\n显示光标所在行的最后提交日志。: \"<p>厉害👍</p>\n\",
misc/idea-plugins
path is https://playground.z.wiki/comment/list?path=/misc/religious.html
基督，犹太，伊斯兰教的关系\n\n<ImgView title=\"基督，犹太，伊斯兰教的关系\" url=\"https://z.wiki/images/20220123/0a941e81c05e44df8a67a921e94408c1.png\" />\n\n\n[基督，犹太，伊斯兰教的关系](https://www.youtube.com/watch?v=ncXCHdTFBEs)\n\n<VideoPlayer src=\"https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/2022-09-17/b34b4f74b7704b30bc668b891e239834.religious.mp4\" />\n: \"宗教⛪️\",
misc/religious
path is https://playground.z.wiki/comment/list?path=/misc/the-nature-of-management.html
管理的本质\n\n<ImgView title=\"管理的本质\" url=\"https://z.wiki/autoupload/20230709/zmBY.796X1352-image.png\" />\n\n“真正的管理其目的和本质是激发和释放人们固有的善意和潜能去为他人创造价值，而不是利用人性中的邪恶和弱点去操纵和控制他们达成个人和小集团的目的。”
misc/the-nature-of-management
path is https://playground.z.wiki/comment/list?path=/misc/2021-11-06.html
今日の胡思乱想\n\n博客得好好整理整理了，今天立一个`flag`，博客需要持续一年更新
misc/2021-11-06
path is https://playground.z.wiki/comment/list?path=/misc/horror-music.html
恐怖音乐\n\n[闹鬼的地下室](https://8.z.wiki/autoupload/20240215/xr7U.Claustrophobia_-_%E9%97%B9%E9%AC%BC%E7%9A%84%E5%9C%B0%E4%B8%8B%E5%AE%A4.mp3): \"吓死了 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/angry.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/surprise.png\" /> \",\n: \"😱😱\",
misc/horror-music
path is https://playground.z.wiki/comment/list?path=/misc/phone-blog.html
手机写博客\n\n<PhoneSnapshot url=\"https://z.wiki/autoupload/2022-09-12/2c6aadcad41f45e5949378a80ec74cba.95f77c3374684fb59eca84ba1321daa0.052EC7A2-926B-4B17-93A5-76D1E9AC3155.jpeg\" title=\"手机写博客\" alt=\"手机写博客\" />\n\n<PhoneSnapshot url=\"https://z.wiki/autoupload/2022-09-12/87c9401971d746d4bbef73b69d413bb2.6EC0C782-6B1C-41A0-A62B-2C6C24D52722.png\" title=\"手机写博客\" alt=\"手机写博客\" />\n\n感觉还行😂😂\n_\n\n\n----\n\n2022年11月30日更新\n\n写个博客或前端还行，如果是`java`的话，还得在服务器上安装`gnome`桌面、安装`idea`并通过`vnc`远程登录开发。: \"回复:&quot;可以试试iVim，里面的键盘挺好使的。git同步啥的用iSH，ssh的话用Blink。&quot;\n\n------------\n\n学到了👍\",\n: \"层主说的应该是左下角显示按了哪些按键，不知道是不是用的、keyCastr\",\n: \"没看懂，我怎么看到我的键盘的？这个回复不太好用，我看不出来你回复的那篇文章\",\n: \"这是这个 terminus 软件自带的，不是键盘的一部分\",\n: \"博主的键盘怎么在上面显示{} ctrl那些键的\",\n: \"没看懂，我怎么看到我的键盘的？这个回复不太好用，我看不出来你回复的那篇文章\",\n: \"博主的键盘怎么在上面显示{} ctrl那些键的\",\n: \"博主的键盘怎么在上面显示{} ctrl那些键的\",\n: \"学到了，感谢😀😀\",\n: \"可以试试iVim，里面的键盘挺好使的。git同步啥的用iSH，ssh的话用Blink。\",\n: \"可以试试iVim，里面的键盘挺好使的。git同步啥的用iSH，ssh的话用Blink。\",
misc/phone-blog
path is https://playground.z.wiki/comment/list?path=/misc/fav-website.html
---\nmeta:\n - name: description\n content: 工具网站收藏,提效神器,工具,程序员必备,开发必备\n - name: keywords\n content: 工具网站收藏,提效神器,工具,程序员必备,开发必备\ntags: [\"iTerms\", \"终端\", \"神器\", \"效率\", \"程序员\"]\n---\n# 工具网站收藏\n\n<ImgView title=\"cheng-qi-huang-WgF8_FPFaAM-unsplash.jpg\" url=\"https://z.wiki/images/20220520/8788faeae0294f3faa3d0b213582475a.jpg\" />\n\n\n### 鸟哥的`linux`私房菜\n\n`linux`学习宝典\n\n[http://cn.linux.vbird.org/linux_server/](http://cn.linux.vbird.org/linux_server/)\n\n<ImgView title=\"鸟哥的`linux`私房菜\" url=\"https://2.z.wiki/images/20220520/ee8e1cc1fb2a43c08342ca98cc9e5a40.png\" />\n\n咳咳，界面很古典\n\n### `logo`制作\n\n熟悉的配方、熟悉的味道😍 \n\n[logo制作](https://logoly.pro/)\n\n<ImgView title=\"logo制作\" url=\"https://3.z.wiki/images/20220520/cf09003dd1ed4fc0913207c905e95fb5.png\" />\n\n\n### photopea\n\n在线`PS`，无需下载、安装\n\n<ImgView title=\"photopea\" url=\"https://4.z.wiki/autoupload/20230709/3Hjl.2294X3994-image.png\" />\n\n### 表情制作\n\n你还记得\"真香\"的故事吗？\n\n[表情制作](https://sorry.xuty.tk/wangjingze/)\n\n<ImgView title=\"表情制作\" url=\"https://2.z.wiki/images/20220520/91bf5202d0ff4b9e8678592f21823fca.gif\" />\n\n### 修图神器\n\n不会`ps`？搞不定抠图？体力活就交给技术来做吧，省时省力，抽空摸鱼。\n\n[修图神器](https://www.remove.bg/zh)\n\n\n<ImgView title=\"修图神器\" url=\"https://1.z.wiki/images/20220520/ea66cb8143a14f35b4dde6a43d8fa581.png\" />\n\n> `iPhone`升级`iOS 16`后自带移除背景的功能了，赞。\n\n### 随机美图\n\n海量图片任你选，拒绝\"视觉中国\"！\n\n[https://unsplash.com/](https://unsplash.com/)\n\n<ImgView title=\"随机美图\" url=\"https://4.z.wiki/images/20220520/987cdbd366724946911c690ad0ef47d9.png\" />\n\n### 拟人插画\n\n文章配图不好找？试试拟人插画吧。\n\n[https://www.manypixels.co/gallery](https://www.manypixels.co/gallery)\n\n<ImgView title=\"拟人插画\" url=\"https://3.z.wiki/images/20220520/c6cfecfc628b47dc9079e101936c79eb.png\" />\n\n### 代码配图\n\n精美的代码在哪里啊、在哪里啊？呐，你现在知道了吧？\n\n[代码配图](https://carbon.now.sh/)\n\n<ImgView title=\"代码配图\" url=\"https://5.z.wiki/images/20220520/10525c34f95e40d4872f89f190880cc6.png\" />\n\n### explain shell\n\n[explainshell.com](https://explainshell.com/)\n\n在线`shell`脚本解释网站，能对提供的脚本的每一个参数进行解释。\n\n<ImgView title=\"explain shell\" url=\"https://6.z.wiki/autoupload/20230323/mpzq.2528X2592-image.png\" />\n\n### 徽章制作\n\n支持动态徽章、静态徽章，非常漂亮\n\n<ImgView title=\"徽章制作\" url=\"https://5.z.wiki/autoupload/20231209/tMrU.236X1054-image.png\" />\n\n[shields.io](https://shields.io/): \"有用\",
misc/fav-website
path is https://playground.z.wiki/comment/list?path=/misc/document-fragment.html
DocumentFragment\n\n`DocumentFragment`无助于性能提升🤔\n\n<PhoneSnapshot url=\"https://z.wiki/autoupload/2022-07-27/615fecd0c0dc4db8991017b53c100ab3.image.png\" title=\"DocumentFragment\" alt=\"DocumentFragment\" />\n\n[原文链接](https://twitter.com/jaffathecake/status/1552242561313546241)
misc/document-fragment
path is https://playground.z.wiki/comment/list?path=/misc/short-url.html
---\nmeta:\n - name: description\n content: 短网址服务\n - name: keywords\n content: 短网址服务\ntags: [\"敖武的博客\", \"短网址服务\"]\nsidebar: false\n\ncomment: false\n# comments: false\n---\n\n# 短网址服务\n\n### 免费的短网址服务\n\n输入原始网址即可转换为短网址。\n\n<ShortUrl />\n\n> 本站生成的网址永久有效 请放心使用 -- 敖武\n\n: \"有点意思🤔\",\n: \"&lt;span style=&quot;color: red;&quot;&gt;XXX&lt;/span&gt;\",\n: \"&lt;script&gt;alert(0)&lt;/script&gt;\",\n: \"<script>console.log('xxxx')</script>\",\n: \"<a href=\"https://z.wiki/u/Ei2tg6\">https://z.wiki/u/Ei2tg6</a>\",\n: \"https://z.wiki/u/Ei2tg6\",\n: \"....\",\n: \"12341234\",
misc/short-url
path is https://playground.z.wiki/comment/list?path=/misc/img-cloud.html
---\nmeta:\n - name: description\n content: 敖武的图床,免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速\n - name: keywords\n content: 敖武的图床,免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速\ntags: [\"图床\", \"敖武的图床\", \"免费图床\"]\n---\n# 敖武的图床\n\n> 传送门：\n> \n> 敖武的图床： [敖武的图床](https://playground.z.wiki/img-cloud/index.html)\n\n### 故事起源\n\n经常有很多图片需要上传，平时在公司直接用公司的图床，在`Idea`上传照片的话有一个 [Markdown Image Support](https://plugins.jetbrains.com/plugin/14097-markdown-image-support) 的插件，\n可以支持在`markdown`文件中粘贴照片，但是有很多时候不是在`markdown`中上传。\n\n<img src=\"https://z.wiki/images/20220405/1b67581529b24ee29f1af5ae285d76d1.png\" width=\"100\" />\n\n### 操刀上阵\n\n干脆自己开发一个小图床，地址 [敖武的图床](https://playground.z.wiki/img-cloud/index.html) 支持一键粘贴、一键复制。\n\n<img src=\"https://z.wiki/images/20220405/a8d7ff1dfad142f69a983e06c2cfd1b6.png\" width=\"100\" />\n\n支持历史数据查询，匿名使用，租户隔离😘\n\n<ImgView title=\"珠海旅游\" url=\"https://4.z.wiki/images/20220411/da4d0367e28548a3989cde9fb42ff75d.png\" />\n\n\n### 点滴困惑\n\n不过貌似网速有点慢啊😂\n\n<ImgView title=\"敖武的图床\" url=\"https://z.wiki/images/20220405/5000de8b59174089bbe452f4d8f85e4e.png\" />\n\n\n`vpn`的问题，关闭`vpn`，上传速度飞起。\n\n<ImgView title=\"敖武的图床\" url=\"https://z.wiki/images/20220405/6b6963fbfdc247e58d5dca81ba234dec.gif\" />\n\n\n### 展望规划\n\n> 展望 ≈ 随便一说，别当真（手动狗头\n\n计划后续支持以下特性：\n\n1. 多种压缩（无损压缩、有损压缩、原图上传等等）\n2. 多种复制方式（`url`、`base64`等等） **注**：已支持\n3. 照片实时处理（水印、旋转、实时压缩、模糊等等）\n4. 多种上传方式（拖拽上传、`base64`上传等等）\n5. 支持水印（使用`oss`+`nginx`实现） **注**：已支持\n6. 支持`zip`文件上传 **注**：已支持\n7. 多域名支持 **注**：已支持,目前有`10`个二级域名，每次上传都会随机选择一个域名，便于前端快速加载\n8. 分页查询，已支持\n9. 支持跨域访问，已支持\n10. 支持二维码访问，已支持\n11. 分享口令，已支持\n12. 支持`CDN`加速，已支持\n13. 支持 `http 2.0`\n\n\n\n\n以上别当真，会做我是小狗（手动狗头: \"回复:&quot;UI 太丑了&quot;\n\n------------\n\nUI太丑了\",\n: \"UI 太丑了\",
misc/img-cloud
path is https://playground.z.wiki/comment/list?path=/misc/shortcut.html
神器的 Manico\n\n一直想要一个 Mac 上全局激活某个 app 的快捷键设置程序\n\n[Manico](https://manico.im/) 正式我所想要的\n\n简单配置下😘，以后直接`Command + Option +M`就能打开邮箱了，开心开心\n<ImgView title=\"Manico\" url=\"https://z.wiki/images/20220123/876aadac52dd4e36a129fa11421072b6.png\" />\n\n\n\n试用了一会，感觉非常良好，付费软件开始购买吧\n\n<ImgView title=\"Manico\" url=\"https://z.wiki/images/20220123/e79c901d5a0a404eb2bae9630b99ade8.png\" />\n\n\n\n🤣🤣🤣\n\n\n<ImgView title=\"Manico\" url=\"https://4.z.wiki/images/20220123/0865f0a2293444ceacdcf26b52c57442.png\" />\n\n\n点击\"购买\"陷入死循环了啊，网页显示打开\"app store\"，app store 里面只有打开软件的链接，没购买🔗啊😂\n\n\n<ImgView title=\"Manico\" url=\"https://z.wiki/images/20220123/f44e62d07c4441e2add822ea66c7105b.png\" />\n\n\n\n\n神器的软件🤩🧐\n\n\n算了，还是用免费的`Thor Launcher`吧，功能基本一样\n\n<ImgView title=\"Manico\" url=\"https://z.wiki/images/20220123/3f659b2ae9454def86b92a8223cf9f5d.png\" />\n\n\n\n而且，不存在按住`Option`键就弹出快捷键提示了😎😎😎
misc/shortcut
path is https://playground.z.wiki/comment/list?path=/misc/discrimination.html
歧视\n\n### 歧视是什么\n\n> 维基百科：\n> \n> 是针对特定族群的成员，仅由于其身份或归类，而非个人特质，给予不同且较差的对待，包含负面眼光的对待。像是国家、地区、肤色、种族、宗教、性别、性向、阶级、贫富、教育、职业和年龄等不同性质的层面中都可能会产生不同程度的歧视。\n> \n\n<ImgView title=\"歧视\" url=\"https://5.z.wiki/images/20220226/187658ac8da045329de394e43438c620.png\" />\n\n### 常见案例\n\n#### 性别歧视：\n\n性别歧视指在关于性别上存在的偏见，指一种性别成员对另一种性别成员的不平等对待。尤其是男性对女性的不平等对待。两性之间的不平等，造成社会的性别歧视。但也可用来指称任何因为性别所造成的差别待遇。\n\n如：每年招聘季的时候，不少企业明目张胆的标注：\"只招男生\"，在无任何接触、评测之前直接拒绝了女性的就业机会。\n\n另外，按照《妇女权益保障法》第二十三条第一款规定\n\n> \"各单位在录用职工时，除不适合妇女的工种或者岗位外，不得以性别为由拒绝录用妇女或者提高对妇女的录用标准\"。\n\n除非岗位有特殊要求，否则禁止\"只招男生\"这类要求。\n\n另外，在就业中想避免\"性别歧视\"也需要国家政策响应调整，女性成本高（生育、生理因素等）只要还由企业负担，那就不可避免会产生歧视。\n\n例如：\"痛经假\"\n\n好多地方出台规定说，女性可以请“痛经假”，“痛经假”的出台本意是为了保护女性职工的权益，而事实上有可能成为就业障碍。\n\n<ImgView title=\"歧视\" url=\"https://5.z.wiki/images/20220226/a254a48fbb024c9f9aec759d1b1b1e8a.png\" />\n\n看上去是保护妇女权益，但国家给补贴吗？用人单位又不傻，这种情况下明显雇佣男性更划算。\n\n\n#### 地域歧视：\n\n北京中国首都，是国家经济、政治中心，全国各地的人已遍布北京城。\n然而都在北京的人相处缺未必都和谐。\n\n部分北京人歧视非北京人，例如：[北京正黄旗大妈](https://www.sohu.com/a/471120459_115479)\n\n<ImgView title=\"歧视\" url=\"https://4.z.wiki/images/20220226/703d786f17a945aa8fdc1014d6b1663d.png\" />\n\n> “我就瞧不起外地人，没素质，老弱病残上来不给让座，我瞧不起。”“臭外地的，我还真是正黄旗人，有通天纹，你看看，你有吗？”\n\n部分企业招聘人员歧视北京人，其认为北京人在智力和努力上不如他们，以至于连工作机会都不愿意提供给北京人。[招聘歧视北京人](https://www.sohu.com/a/218239415_487876)\n\n\n#### 种族歧视：\n\n种族歧视最典型的案例：宁夏、新疆公务员考试。\n\n伊犁汉族、回族占当地人口超过50%。2021年新疆公务员考试，伊犁录取的汉族、回族考生加起来25%。阿勒泰地区汉族、回族占当地40%。2021年新疆公务员考试，考试录取比例只占20%。\n\n汉族录取比例和人口比例严重失调。这种种族歧视不仅对应聘个人造成不公平，更对国家稳定带来隐患。\n\n[习五一的微博](https://weibo.com/1442246695/Lh5g5dzCE)\n\n<ImgView title=\"歧视\" url=\"https://5.z.wiki/images/20220226/1d4c1f791ad74a8c89d817deef83ed2f.png\" />\n\n\n\n### 逆向歧视\n\n以上大多为\"正向歧视\"，歧视生活中还有一种特殊的歧视，\"逆向歧视\"。\n\n#### 学历逆向歧视\n\n学历逆向歧视是：某些学历不怎么样的人能力不行却总憋着劲想证明专科不比本科差，总想挑出别人的毛病，天天试图通过车轱辘话跟人辩经洗脑。这类人对自己没有清醒的认识却喜欢怼天怼地。\n这种人，我真遇到过。喜欢不来。\n\n[逆向歧视的例子](https://www.zhihu.com/question/276843916/answer/2331021085)\n\n#### 种族逆向歧视\n\n\n如美国大学录取比例。\n\n长期以来，美国少数族裔（非洲裔）学生的大学入学率偏低，但这是有客观原因的：家庭背景、经济基础、智力水平等等。\n\n所以大部分公立大学会为“非白人学生”（主要是非洲裔）设下保障名额。\n由此导致考入相同的大学，亚裔、白人需 14400 、 1500 的 SAT 成绩，而非裔则只需要 1100 的 SAT 成绩 ,非裔生成比例是有多提升，然而此举更引来了很多人的不满。\n\n此外：中国的少数民族高考加分政策也是此类种族逆向歧视。\n\n<ImgView title=\"歧视\" url=\"https://5.z.wiki/images/20220226/82771cb600384118bd60cd96cd0b2327.png\" />: \"回复:\"哦哦哦哦哦哦哦哦哦\"\n\n------------\n\n啥意思？\",\n: \"哦哦哦哦哦哦哦哦哦\",
misc/discrimination
path is https://playground.z.wiki/comment/list?path=/misc/qrcode.html
---\nmeta:\n - name: description\n content: 二维码生成器,递归二维码,循环二维码\n - name: keywords\n content: 二维码生成器,递归二维码,循环二维码\ntags: [\"二维码\", \"敖武的二维码\"]\nsidebar: false\n\ncomment: false\n---\n\n### 二维码生成器\n\n<Qrcode />\n\n> <p style=\"font-size: 14px;\">循环编码：将二维码上传<code>OSS</code>并对在线连接再次进行二维码编码，想获取原始内容需要递归扫二维码。</p>
misc/qrcode
path is https://playground.z.wiki/comment/list?path=/misc/watermask.html
水印保护\n\n给网站上的照片添加了水印保护，效果如下：\n\n<ImgView title=\"水印保护\" url=\"https://z.wiki/images/20220520/33b6d65f4c6c48ffacea4ecae0eacc52.png\" />\n\n### 事儿是酱的\n\n我在开发 [图床](https://playground.z.wiki/img-cloud/index.html) 的时候，想让上传方可以自行添加水印，\n想到水印，我突然想到，我的博客上的照片可都没水印啊，这可咋整？\n\n<ImgView title=\"水印保护\" url=\"https://z.wiki/images/20220520/b35f5032e53f457b88dc0ae9440c8785.png\" />\n\n\n### 现状是酱的\n\n思考我博客中的照片，其实都是保存在 [oss](https://oss.console.aliyun.com/) 上，无非是直接、简介访问`oss`。\n\n\n<ImgView title=\"水印保护\" url=\"https://z.wiki/autoupload/2022-05-20/d467f33b231548c7bf788b712b2b0ceb.oss-%E6%B0%B4%E5%8D%B0.drawio.svg\" />\n\n### `OSS`图片处理\n\n`OSS`支持多种照片处理，如：\n\n1. 渐进显示，用以开启先模糊后清晰的呈现方式，仅对格式为 JPG 的图片有效。\n2. 自适应方向，会根据图片中 EXIF 旋转信息先旋转后进行缩略。\n3. 照片质量，质量参数仅对 JPG 和 WEBP 的图片有效，且对 WEBP 来说，相对质量等价于绝对质量。\n4. 缩放。\n5. 亮度、对比度、模糊、等处理。\n6. 水印，文字水印、图片水印。\n\n<ImgView title=\"水印保护\" url=\"https://z.wiki/images/20220521/d320f219fcbe43b5b757e3b69c568252.png\" />\n\n通过新建照片样式并在访问的时候通过追加参数``即可访问处理后的照片。\n\n新建照片样式时支持两种模式\n\n1. 基本编辑，提供可视化的编辑能力，但同一种效果无法多次应用\n2. 高级编辑，有门槛，但支持同一效果多次应用，例如：我就加了两种水印，一种浅红色、平铺水印，一种 右下角深黑色水印\n\n```\nimage/auto-orient,1/interlace,1/quality,Q_80/contrast,-8/watermark,text_aHR0cHM6Ly96Lndpa2k,color_fd0303,size_35,rotate_45,fill_1,g_center,t_4,x_100,y_50/watermark,text_aHR0cHM6Ly96Lndpa2k,color_0c0c0c,size_25,g_se,x_20,y_20\n```\n\n### 如何访问\n\n如何访问加水印的照片呢\n\n#### 方案一\n\n在前端修改照片`URL`，缺点是某些人可以通过去除参数来实现访问原图，如果原图敏感的话建议开启\"原图保护\"功能\n\n<ImgView title=\"水印保护\" url=\"https://z.wiki/images/20220521/8ff226ff3ef74941a7c361273cc6c284.png\" />\n\n#### 方案二\n\n通过`nginx`转发并在后台追加参数，优点：`URL`更美观且安全，缺点：需要转发一层，会有一定的性能损耗\n\n实现方式参考[nginx 反向代理并追加参数](https://snippets.z.wiki/#!./snippets/nginx/proxy/)\n\n```nginx\nlocation /v1/resources {\n resolver 8.8.8.8;\n proxy_pass https://domain.com$uri?key=value\n}\n```\n\n\n<TheEnd />: \"新年快乐🎊🎆🍾\",
misc/watermask
path is https://playground.z.wiki/comment/list?path=/misc/rom.html
---\nmeta:\n - name: description\n content: ROM是什么与ROM发展历史介绍\n - name: keywords\n content: ROM,手机存储,存储器\ntags: [\"ROM\", \"RAM\", \"闪存\", \"存储\", \"手机\"]\n---\n\n\n# 匪夷所思的 ROM\n\n### 故事背景\n\n今天我来逛手机，准备让手上的老同志下岗了\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/3c93654c54f34d16a71690420889925c.image.png\" />\n\n\n逛手机必看配置参数，无意中瞄到了`ROM`\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/61e91aface624488a04d634a7e841515.image.png\" />\n\n\n这是一个曾经让我困惑好久的名词。\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/04ed6113de894f899cd42f1ea7fa07ea.Thinking_Outline.svg\" />\n\n\n\n### ROM 是什么\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/8795ecefd3ba4220811a280648acb525.image.png\" />\n\n\n`ROM`的全称是：`Read Only Memory`，既：只读存储，其特点是一旦在其体内存储了资料就无法再被改写或删除，但其存储过的内容也不会因为电源关闭而丢失。\n\n与之对应的是`RAM`，`RAM`的全称是：`Random Access Memory，既：随机储存器，它可以随时读写，而且速度很快，通常作为操作系统或其他正在运行中的程序的临时资料存储介质。\n\n结合手机，`ROM`就是手机的存储内存，`RAM`就是手机的运行内存。\n\n\n### 我的困惑\n\n\n`ROM`表示只读存储，难道说我的手机是“只读存储”？？只能读不能写？？\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/4bb2611934554989a6da55533736ec0b.image.png\" />\n\n\n\n\n\n### ROM 历史\n\n要解释这个问题还得从`ROM`的发展历史说起\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/bdfc4fc680ad4db68939be0ac98edeec.image.png\" />\n\n\n#### 最古老的`ROM`：掩码`ROM`（`mask ROM`）\n\n`Mask ROM` 由字线（地址输入）和位线（数据输出）网格组成，通过晶体管开关选择性地连接在一起，并且可以表示具有规则物理布局和可预测传播延迟的任意查找表。\n\n在掩模 `ROM` 中，数据在电路中进行物理编码，因此只能在制造过程中进行编程。这导致了许多严重的缺点：\n\n1. 成本高，需要批量定制、购买才能降低成本。\n2. 周期长，只能在制作过程中进行编程。\n\n\n#### 可编程只读存储器（`PROM`）\n\n\n`PROM` 于 `1956` 年发明，使用方能够通过高压脉冲修改内部结构，从而可以对内容进行修改，尽管能修改，但也只能修改一次。\n\n#### 可擦除可编程只读存储器（`EPROM`）\n\n\n英特尔在`1971`年发明了可擦除可编程只读存储器(`EPROM`)。 `EPROM`可以通过强紫外线反复恢复到未编程状态下，至此，我们终于有了可反复修改的`ROM`。\n\n\n#### 电可擦除可编程只读存储器（`EEPROM`）\n\n\n历史车轮永不停止，终于，`EEPROM`于 `1972` 被发明，现在手机中用的存储内存（闪存）在分类上均属于`EEPROM`，闪存又可细分为`NOR`与`NAND`两种类型，详细介绍的话又得新开一篇。\n\n\n\n### 真相大白\n\n<ImgView title=\"内存\" url=\"https://z.wiki/autoupload/2022-07-29/1299d788039b4a198823936250b3fd3d.image.png\" />\n\n\n手机中的存储内存其实是`ROM`的一个分支，这个分支具备反复写入的能力，已经不仅仅是“只读存储”了，但是依然属于`ROM`的一种。\n\n\n<ImgPlayer :imgs=\"[\n'https://z.wiki/autoupload/2022-07-29/a8df299e18a24f658898ba4b9c819379.image.png',\n'https://z.wiki/autoupload/2022-07-29/da24b02dd9ae4cb3af980e744691c8a7.image.png',\n'https://z.wiki/autoupload/2022-07-29/a7dce58ddd78419e96769b152eeee8a1.image.png',\n'https://z.wiki/autoupload/2022-07-29/d559362e45b844c0bcd915e275b99a7b.image.png',\n'https://z.wiki/autoupload/2022-07-29/1434f68465c84f928f81440e918a4b83.image.png',\n]\" />\n\n<TheEnd />
misc/rom
path is https://playground.z.wiki/comment/list?path=/misc/robots.txt.html
---\nmeta:\n - name: description\n content: robots 是什么？如何使用 robots 进行爬虫爬取策略？如何优化搜索排名？如何优化SEO\n - name: keywords\n content: robots,爬虫协议,爬虫,搜索排名,SEO\ntags: [\"robots\", \"爬虫协议\", \"爬虫\", \"搜索排名\", \"SEO\"]\n---\n# robots.txt\n\n### robots.txt 是什么\n\n`robots.txt` 规范官网： [https://www.robotstxt.org/](https://www.robotstxt.org)\n\n`robots.txt` 是位于网站根目录下的纯文本文件，用于告知网络爬虫\"改网站中哪些可以被爬取，哪些不可以被爬取\"。\n\n`robots.txt` 只是约定俗成的协议，`Google`、百度、`bing`等爬虫都会遵守该规范，但并非所有搜索引擎都支持，故通过`robots.txt`无法 100% 地保证爬取效果（屏蔽效果）。\n\n### robots.txt 怎么用\n\n允许所有的爬虫：\n\n```\nUser-agent: *\nAllow:/\n```\n\n\n仅允许特定的爬虫：（`name_spider`用真实名字代替，具体爬虫名字可在附录连接中查看）\n\n```\nUser-agent: name_spider\nAllow: /\n```\n\n\n拦截所有的爬虫：\n\n```\nUser-agent: *\nDisallow: /\n```\n\n禁止所有爬虫访问特定目录：\n\n```\nUser-agent: *\nDisallow: /cgi-bin/\nDisallow: /images/\nDisallow: /tmp/\nDisallow: /private/\n```\n\n\n仅禁止坏爬虫访问特定目录（BadBot用真实的名字代替）：\n\n```\nUser-agent: BadBot\nDisallow: /private/\n```\n\n\n禁止所有爬虫访问特定文件类型：\n\n```\nUser-agent: *\nDisallow: /*.php$\nDisallow: /*.js$\nDisallow: /*.inc$\nDisallow: /*.css$\n```\n\n允许所有爬虫进行访问\n\n```text\nUser-agent: *\nDisallow:\n```\n\n### 非标准扩展协议\n\n#### Sitemap\n\n目前主流搜索引擎均支持`Sitemap`，`sitemap`用于告诉浏览器网站都包含哪些`URL`，\n\n使用方法（写到 `robots.txt` 中）\n\n```shell\nSitemap: <path-to-sitemap.xml>\n```\n\n`sitemap` 文件内容格式如下：\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:news=\"http://www.google.com/schemas/sitemap-news/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:mobile=\"http://www.google.com/schemas/sitemap-mobile/1.0\" xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\" xmlns:video=\"http://www.google.com/schemas/sitemap-video/1.1\">\n <url>\n <loc>https://z.wiki/</loc>\n <lastmod>2022-04-16T12:42:45.000Z</lastmod>\n <changefreq>daily</changefreq>\n </url>\n <url>\n <loc>https://z.wiki/life/</loc>\n <lastmod>2022-02-05T14:55:06.000Z</lastmod>\n <changefreq>daily</changefreq>\n </url>\n <url>\n <loc>https://z.wiki/life/bento.html</loc>\n <lastmod>2022-03-28T14:56:49.000Z</lastmod>\n <changefreq>daily</changefreq>\n </url>\n</urlset>\n```\n\n#### Crawl-delay 指令\n\n`Crawl-delay`参数设置爬虫的爬取时间间隔，避免对服务器的性能造成影响\n\n```\nUser-agent: *\nCrawl-delay: 10\n# 每次爬取等待10秒后继续爬取其他链接\n```\n\n### 其他替代品\n\n`robots.txt`是最为广泛使用的方法，\n此外也可以通过`robots Meta`标签针对特定页面做设置。\n\n```html\n<head>\n <meta name=\"robots\" content=\"noindex,nofollow\" />\n</head>\n```\n\n### 案例分析\n\n#### 腾讯\n\n腾讯官网为`https://www.tencent.com`，对应的 `robots.txt`链接为`https://www.tencent.com/robots.txt` ，内容如下：\n\n```text\nUser-agent: *\nDisallow:\n```\n\n从以上配置中可看出，腾讯官网对任意爬虫未设置禁止爬取的规则，既：整个腾讯官网允许任意爬虫进行爬取，那如何验证爬虫爬取了腾讯官网了？\n这里就用到了搜索小技巧`site`指令了。\n\n通过百度搜索以下关键字`腾讯 site:www.tencent.com`，如下图，我们能搜到腾讯官网上很多内容。\n\n<ImgView title=\"robots\" url=\"https://z.wiki/images/20220501/2be3526a6ff6448ebdc28a776514ddee.png\" />\n\n#### 淘宝\n\n> 2008年9月8日，淘宝网正式向百度宣战：淘宝网将屏蔽百度的搜索引擎抓取。\n> \n> from [https://www.guayunfan.com/baike/305946.html](https://www.guayunfan.com/baike/305946.html)\n\n淘宝屏蔽了百度爬虫，在技术上有很多种手段，但在这里我们只讨论`robots.txt`，查看淘宝的`robots.txt`，内容如下：\n\n```text\nUser-agent: Baiduspider\nDisallow: /\n\nUser-agent: baiduspider\nDisallow: /\n```\n\n<ImgView title=\"robots\" url=\"https://z.wiki/images/20220501/bc60a315f18c4d19bf732f83c9890ecb.png\" />\n\n唯独屏蔽百度爬虫，有意思，有意思！\n\n试试使用百度搜索淘宝上的东西吧，比如：手机，效果如下：\n\n<ImgView title=\"robots\" url=\"https://z.wiki/images/20220501/4ceadc46c25342e9a670807932c41354.png\" />\n\n嗯嗯，整体效果还是不错的，搜索到的内容没有是`taobao.com`域名下的，不过有`cpcwi.taobao.com`域名下的内容，难道有漏网之鱼？\n看下这个二级域名下的`robots.txt`，内容如下：\n\n```text\nUser-agent: *\nDisallow: /\n```\n\n咳咳，`cpcwi.taobao.com`这个域名是禁止所有爬虫的，难道是百度爬虫不道德？使用百度和必应搜索`手机 site:cpcwi.taobao.com`对比下结果吧。\n\n<ImgView title=\"robots\" url=\"https://4.z.wiki/images/20220501/2e75b51248b941b7b652c425886d7d3a.png\" />\n\n哈哈，果然是百度不道德了😒😒😒\n\n回到淘宝，淘宝专门屏蔽了百度，却没有屏蔽其他爬虫，那我们用必应搜索`手机 site:taobao.com`应该能搜索内容才对，看下吧：\n\n果不其然\n\n<ImgView title=\"robots\" url=\"https://z.wiki/images/20220501/edc227c484af4a559018ff9a3f1970c1.png\" />\n\n### 附录\n\n1. 爬虫列表 [https://www.robotstxt.org/db.html](https://www.robotstxt.org/db.html)\n2. 国内常见爬虫 [https://www.baidu.com/robots.txt](https://www.baidu.com/robots.txt)\n\n```text\n百度：Baiduspider\n谷歌：Googlebot\n微软：MSNBot\n百度图片：Baiduspider-image\n有道：YoudaoBot\n搜狗：Sogou web spider\n搜狗学术：Sogou inst spider\n搜狗：Sogou spider2\n搜狗博客：Sogou blog\n搜狗新闻：Sogou News Spider\n搜狗：Sogou Orion spider\n中搜：ChinasoSpider\n搜搜：Sosospider\n宜搜：yisouspider\n宜搜：EasouSpider\n```\n\n\n<TheEnd />\n\n: \"😄除夕快乐\",
misc/robots.txt
path is https://playground.z.wiki/comment/list?path=/misc/open-source-request.html
---\nmeta:\n - name: description\n content: Idea 开源使用许可申请\n - name: keywords\n content: Idea 开源使用许可申请\n---\n# Idea 开源使用许可申请\n\n一直用`Idea`，最头疼的就是`License`过期的问题了，尝试过多种方式（淘宝、激活码、激活服务器等各种方式），没有一个简单好用的，听说过有开源项目的话可以申请开源许可，今日提交申请试试😄😄\n\n\n### 发起申请\n\n> 申请链接：[opensource](https://www.jetbrains.com/shop/eform/opensource)\n\n随便找一个维护过三个月以上的项目，使用该开源项目进行申请，这里我把我的博客系统写了上去。\n\n<ImgView title=\"开源License申请\" url=\"https://1.z.wiki/autoupload/2022-08-20/71236661986b432fb328325a8b2eb825.image.png\" />\n\n提交成功！✌🏻✌🏻✌🏻\n\n<ImgView title=\"开源License申请\" url=\"https://1.z.wiki/autoupload/2022-08-20/c01e2cf6f6ef4f33b4c578ef84a9abec.image.png\" />\n\n### 自动邮件提示\n\n提交成功后会有两封自动发送的邮件提示，内容基本相当于：”您的申请我们已收到，我们会进行进行评估，请注意查收邮件“等等等等，😄😄，过几天看看吧~\n\n<ImgView title=\"idea 开源使用申请\" url=\"https://1.z.wiki/autoupload/2022-08-20/be6307fbd37940b5b5369ccdeca68b41.image.png\" />\n\n### 评估没通过\n\n唉，评估没通过？为啥呢？\n\n<ImgView title=\"开源License申请\" url=\"https://1.z.wiki/autoupload/2022-08-20/9efd01640313415b98474af3e456c601.image.png\" />\n\n发邮件过去问问，看看他们怎么说吧\n\n<ImgView title=\"开源License申请\" url=\"https://2.z.wiki/autoupload/2022-08-20/77a9d1332b8145cabfe46d3b28991edc.image.png\" />\n\n哦~，人工检查后发来邮件，说大部分内容都是非代码，(ˇˍˇ) ～ 也是啊，博客系统大部分都是`Markdown`文件。\n\n<ImgView title=\"开源License申请\" url=\"https://2.z.wiki/autoupload/2022-08-23/b994563ae1e14c3a9a5bb0fca0b84828.image.png\" />\n\n### 重新申请\n\n这次我使用 [敖武的游乐场](https://github.com/yihuaxiang/playground) 项目来申请试试，这个项目是个纯`java`的`web`项目，到目前已经存在了`5`个月以上，最新提交在`7`天前。\n\n<ImgView title=\"开源License申请\" url=\"https://2.z.wiki/autoupload/2022-08-23/975968d0f902403ab0dc871214fe0f50.image.png\" />\n\n为了申请先做下调整：\n\n1. 添加开源协议\n2. 完善 README.md\n\n> 开源项目定义：[https://opensource.org/docs/osd](https://opensource.org/docs/osd) ,尽量保证自己的项目满足开源项目的定义。\n\n\n### 突然的幸福\n\n仅仅第二天就收到了授权邮件，巨开心巨开心，幸福来的太突然了🥰🥰\n\n<ImgView title=\"Idea 开源License申请\" url=\"https://2.z.wiki/autoupload/2022-08-29/b9a56629ab70409589290a30b1885e30.image.png\" />\n\n登陆账号，能看到已授权的 license，有效期一年，一年收再申请续期😀😀😀，省的以后天天找激活码了😏😏\n\n<ImgView title=\"Idea 开源License申请\" url=\"https://3.z.wiki/autoupload/2022-08-29/3e619b10895c425d9d94390b3c4d7ac2.image.png\" />\n\n打开`IDEA`激活~，没想到这么顺利，惊喜惊喜。\n\n<ImgView title=\"Idea 开源License申请\" url=\"https://3.z.wiki/autoupload/2022-08-29/b6275ffb901d4191a6cd88513ea9513d.image.png\" />\n\n<ImgView title=\"Idea 开源License申请\" url=\"https://3.z.wiki/autoupload/2022-08-29/fbfdbf77dd064af194cf77f785f57365.image.png\" />\n\n\n\n### 一年后的续期\n\n<ImgView title=\"image.png\" url=\"https://3.z.wiki/autoupload/20230809/lUkb.894X1480-image.png\" />\n\n时间如梭，一年期限已到，按邮件提示的流程续期~\n\n
misc/open-source-request
path is https://playground.z.wiki/comment/list?path=/misc/algolia.html
---\nmeta:\n - name: description\n content: vuepress 使用 algolia 搜索引擎\n - name: keywords\n content: vuepress,algolia,搜索引擎,站内搜索\n---\n# algolia \n\n将 `vuepress` 默认的搜索引擎替换成 `algolia`了，实时搜索服务，支持秒级全文检索。\n\n<ImgView title=\"algolia\" url=\"https://z.wiki/images/20220416/896f1fd45836482486484fff4e560d38.png\" />\n
misc/algolia
path is https://playground.z.wiki/comment/list?path=/misc/old-videos.html
---\nmeta:\n - name: description\n content: 收藏的百年前的旧视频\n - name: keywords\n content: 旧,视频,大清,清朝,古代\n---\n# 收藏老视频\n\n### 100 年前各国视频\n\n<VideoPlayer poster=\"https://1.z.wiki/autoupload/20230808/PALp.668X1452-image.png\" src=\"https://z.wiki/autoupload/2022-09-14/ba91891a0b63489db167bedfb7d1770e.100-years-ago.mp4\" />\n\n### 清光绪年间的视频\n\n<VideoPlayer poster=\"https://6.z.wiki/autoupload/20230808/pXPS.952X1440-image.png\" src=\"https://z.wiki/autoupload/2022-09-17/a1eacd1d8de54eb7944dbf3b7115d506.清光绪年间的视频.mp4\" />: \"够老\",
misc/old-videos
path is https://playground.z.wiki/comment/list?path=/misc/goodthings.html
---\nmeta:\n - name: description\n content: 优秀软件,提效神器,工具,程序员必备,开发必备\n - name: keywords\n content: 优秀软件,提效神器,工具,程序员必备,开发必备\ntags: [\"iTerms\", \"终端\", \"神器\", \"效率\", \"程序员\"]\n---\n# 神器好物篇\n\n> 相关链接\n> \n> `chrome`插件推荐：[敖武的博客-chrome插件](https://z.wiki/misc/chrome-extensions.html)\n> \n> `neovim` 插件：[neovim 插件](https://z.wiki/tech/neovim.html#%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6)\n> \n\n### clipMenu\n`ClipMenu` 是一款 `Mac` 上的免费剪贴板增强工具，它可以帮助用户扩展剪贴板的容量，保存历史剪贴板内容，\n并快速访问剪贴板历史记录。`ClipMenu` 还支持自定义快捷键，让用户可以更方便地使用剪贴板功能。\n\n- [clipMenu 官网下载地址](http://www.clipmenu.com/)\n- [clipMenu 国内下载链接](https://z.wiki/autoupload/2022-09-16/a8241d8c04644ce2a75a1829a47d0270.ClipMenu.zip)\n\n\n### alfred\n程序启动器`Mac spotlight`的增强版，支持插件\n常用功能\n* 数学计算\n\n<ImgView title=\"alfred\" url=\"https://0.z.wiki/autoupload/2022-05-02/eaaba6b40de44a8aa1f134f2b891dd76.image.png\" />\n\n* 程序启动\n\n<ImgView title=\"程序启动\" url=\"https://0.z.wiki/autoupload/2022-05-02/9688bb111e794952ae35b16cda9e2904.image.png\" />\n\n* 搜索（本地搜索、网络搜索）\n* 翻译\n\n<ImgView title=\"翻译\" url=\"https://0.z.wiki/autoupload/2022-05-02/605273ed05d843f6a3e63299529a2aea.image.png\" />\n\n* 自定义插件\n\n<ImgView title=\"自定义插件\" url=\"https://0.z.wiki/autoupload/2022-05-02/5824d383c3be4c94bb2d0f1c9aefd041.image.png\" />\n\n* 编码、解码\n\n<ImgView title=\"解码\" url=\"https://1.z.wiki/autoupload/2022-05-02/e48741002f5c41b389ef4a869d3e545d.image.png\" />\n\n[下载地址](https://www.alfredapp.com/)\n\n### axel\n多线程下载工具\n\n### aria2\n\n`aria2` 是一个开源的命令行多线程下载工具，可以同时支持 `HTTP`、`HTTPS`、`FTP`、`BT`、磁力链等多种协议，\n支持断点续传、多个下载任务同时进行等功能。它能够通过使用多个连接和线程来加速下载速度，支持下载文件的分段，\n并能够自动重新连接断开的连接。它还支持通过 `RPC` 接口来进行远程控制和管理，\n基于 `RPC` 接口又衍生出了 `WebUI-Aria2` 这个项目，可以可视化的进行下载管理。\n\n<ImgView title=\"aria2\" url=\"https://1.z.wiki/autoupload/20230604/k4QQ.856X1554-image.png\" />\n\n### brew\n包管理工具，支持`macOS`和`Linux`系统。\n\n#### 安装 `brew`\n\n```shell\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n# 或国内镜像\n\n/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\"\n```\n\n> 注1：如果通过以上脚本安装失败的话可以从[releases](https://github.com/Homebrew/brew/releases)中下载最新版本，里面包含可执行文件。\n\n> 注2：通过`brew`安装程序时默认每次都会进行更新，如果需要关闭可以通过设置`export HOMEBREW_NO_AUTO_UPDATE=true`来取消更新。\n\n\n\n\n### Popclip\n鼠标拓展小工具，当选中文本后会自动弹出操作框，支持复制、粘贴、大小写转换、单词计数、搜词等诸多功能。\n\n<ImgView title=\"Popclip\" url=\"https://1.z.wiki/images/20220317/68a45b525b93406e964904c2e782ae6c.png\" />\n\n支持安装多种扩展程序，如下图：\n\n<ImgView title=\"Popclip\" url=\"https://1.z.wiki/images/20220317/38752814af6b47f2a1dfe559a4386f2a.png\" />\n\n\n### 1Password\n密码管理工具\n\n### go2shell\n在`finder`中直接打开`shell`\n\n[安装链接 app store](https://apps.apple.com/us/app/go2shell/id445770608?mt=12)\n\n### omyzsh\n\n`omyzsh`以及常用插件（ [下载链接](https://juejin.im/entry/5ae00e54f265da0b8635ea5c) ）\n\n#### 安装`omyzsh`\n\n```shell\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n### SwitchKey\n\n`SwitchKey` 是一款可以根据当前 `macOS` `app` 窗口自动切换指定的输入法，让你无需再关注“输入法切换”这些琐碎的操作。特别是在代码编辑器、命令行和微信等程序之间切换的时候，非常方便。\n\n安装方式：\n```shell\nbrew install switchkey\n```\n\n### iShot 截图\n\n介绍文章： [https://z.wiki/misc/ishot.html](https://z.wiki/misc/ishot.html)\n\n注：我认为延迟截屏是他最好用的工具了，很多弹框功能在你进行任何操作的时候都会自动消失，普通截图软件截取不到😓。\n\n### Beyond Compare\n\nBeyond Compare中文版是一款专业的文本文件对比工具,可以高效的针对文件、文件夹、表格、mp3、图片、数据、注册表等文件并进行比较、合并、同步分析,并把相差的每一个字节用颜色加以表示,查看方便。\n\n### thor launcher\n\n全局激活某个 app 的快捷键设置程序\n\n<ImgView title=\"thor launcher\" url=\"https://3.z.wiki/images/20220123/3f659b2ae9454def86b92a8223cf9f5d.png\" />\n\n\n### iTerm2\n\n对于需要长期与终端打交道的工程师来说，拥有一款称手的终端管理器是很有必要的，对于 `Windows` 用户来说，最好的选择是 `Xshell`，\n这个大家都没有异议。但对于 `macOS` 用户来说，仍然毋庸置疑，`iTerm2` 就是你要的利器\n\n喜欢`iTerm2`的一个重要原因就是它支持快捷键绑定，如下图：\n\n<ImgView title=\"iTerm2\" url=\"https://3.z.wiki/images/20220317/2b9b39dd89fc408a9b71a7d155c3f94b.png\" />\n\n当我按下`Command+/`时，`iTerm2`会自动输入`,cc`,在`vim`编辑文件的时候自动将当前行给注释掉。从而实现类似`VS Code`、`idea`很多相同的快捷键。\n\n更多`iTerm2`配置可以参考[iTerm2 配置](https://z.wiki/misc/iterm2.html)\n\n### sshpass\n\n平时通过`ssh`登陆服务器，都会交互式进行密码输入，有些特殊的服务器操作需要自动化，例如：提交代码后自动登陆服务器、拉取代码、重新部署。\n这种情况下为了自动化，交互式密码输入无法满足，需要一种免密登陆方案，常见免密登陆有如下两种：\n\n1. 基于密钥的认证\n\n<ImgView title=\"sshpass\" url=\"https://3.z.wiki/images/20220322/ed6739bed9534abcb32510b71ac9a94d.png\" />\n\n2. sshpass\n\n针对少量服务器，使用方案一较为便捷，然而针对批量+非固定机器，方案二优势更为明显。\n\n`sshpass`是一个简单轻量级的命令行工具，\n它使我们能够在脚本中显示指定密码（非交互式密码验证），以便可以自动化执行服务器上的 `shell` 脚本。\n\n### snap\n\nSnap是一款快速启动程序的插件App， 功能虽小，但是对开发体验和效率提升很大。用快捷键 command + 数字（0-9）启动/唤起Dock对应的程序。\n\n<ImgView title=\"snap\" url=\"https://3.z.wiki/images/20220330/6a64681197f849388e3e3c79660f1630.png\" />\n\n右侧`option`键一般用不到，故通过`karabiner`将右侧`option`改成了`command`键，通过右侧`option`+数字启动/唤起Dock对应的程序。\n\n\n### LightProxy\n\n`LightProxy` 是 `IFE` 团队开发的一款基于 `Electron` 和 `whistle` 的开源桌面代理软件，致力于让前端开发人员能够精确的掌握自己的开发环境，通过 HTTP 代理使用规则转发、修改每一个请求和响应的内容。\n\n通过`LightProxy`用户可以快速进行转包、修改包，解决开发过程中的各个拦路虎。\n\n<ImgView title=\"LightProxy\" url=\"https://3.z.wiki/images/20220330/bdb51ebd3fb94a479cad74fb631bd68e.png\" />\n\n1. 下载链接：[github/alibaba/lightproxy](https://github.com/alibaba/lightproxy/releases)\n2. 国内下载：[LightPxory](https://z.wiki/autoupload/2022-09-14/57a22caeb1b24568bd5a588f1062c5e2.LightProxy.app.zip)\n\n典型应用场景一：\n由于安全原因，前端发布后，对应的`sourcemap`文件不会发布到公网上，需要`debug`的时候可以通过`lightproxy`做下映射。\n\n```\nhttps://xxx.cnd.com/web.js.map file:///Users/xxx/xxx/web.js.map\n```\n\n解决跨域问题\n```\nhttps://xxx.com/path resCors://https://xxx.com\n```\n\n添加 `header`\n```\nhttps://xxx.com/path resHeaders://`\n{\n \"key\": \"value\"\n}\n`\n```\n\n添加`cookie`\n```\nhttps://xxx.com reqCookies://{“cookie_name”:”cookie_value”}\n```\n\n[更多常见配置](https://z.wiki/misc/lightproxy.html)\n\n### mockoon\n\n本地`mock API`服务，搭配`LightProxy`成为前端开发利剑。\n\n<ImgView title=\"mockoon\" url=\"https://5.z.wiki/images/20220331/94ae7c76fd8549aab17783f47c997328.png\" />\n\n\n### Go2Shell\n\n`Go2Shell`是`Finder`的一个扩展软件，正如其名字描述的那样，`Go2Shell`支持在`Finder`中一键使用终端打开当前目录。终端爱好者必备良器。\n\n<ImgView title=\"Go2Shell\" url=\"https://5.z.wiki/autoupload/2022-04-23/287920b1229e42af8043f32bd3f17212.image.png\" />\n\n### TotalFinder\n\n<ImgView title=\"TotalFinder\" url=\"https://z.wiki/images/20220423/a120002c11e6428a91a0cefa77b78f3a.png\" />\n\n\n`TotalFinder` 是`Mac`上一款好用的`Finder`增强工具，`TotalFinder` 提供了多标签式浏览、拷贝路径、剪切文件、显示隐藏文件、多栏窗口模式、彩色标签等功能。\n\n<ImgView title=\"TotalFinder\" url=\"https://5.z.wiki/images/20220423/2a2589b2a18d4682acdcd14d667e8206.png\" />\n\n### 超级右键\n\n超级右键是`Mac`上最强大的右键菜单工具，丰富的功能，让你的右键菜单如虎添翼，深入人心的交互设计，助你大幅提升`macOS`使用体验！\n\n下载地址：[超级右键](https://apps.apple.com/cn/app/%E8%B6%85%E7%BA%A7%E5%8F%B3%E9%94%AE-irightmouse/id1497428978?mt=12)\n\n<ImgView title=\"超级右键\" url=\"https://z.wiki/images/20220501/bc7a37c1906c4dc7a7e81bf7e2c9d1c0.png\" />\n\n\n\n### LICEcap\n\n轻量级录屏工具，下载地址[LICEcap](https://www.macupdate.com/app/mac/49461/licecap)\n\n<ImgView title=\"LICEcap\" url=\"https://5.z.wiki/images/20220501/dbfba0970e4643e897470b7a21c81c65.png\" />\n\n\n### drawio-desktop\n\n`drawio`用于创建图流程图、线框、UML图、组织图、网络图等。\n\n客户端下载链接 [drawio-desktop](https://github.com/jgraph/drawio-desktop/releases/)\n\n### PDDON\n\n和其他绘图工具相比，`PDDON`最大的特点是支持手绘风格、支持一键美化。\n\n<ImgView title=\"PDDON\" url=\"https://9.z.wiki/autoupload/20230809/DY3A.926X1374-image.png\" />\n\n### Clipboard Viewer\n\n剪切板查看软件，当你复制的时候，剪切板内存的并不是一个内容，而是多个，有普通文本、有`html`、有二进制文件等等，通过`Clipboard Viewer`能更深入的了解剪切板。\n\n<ImgView title=\"Clipboard Viewer\" url=\"https://5.z.wiki/autoupload/2022-10-31/47088f002301463f83bfbef6dc64cf3d.image.png\" />\n\n> 复制粘贴也不是人人都懂啊 [语雀如何自动将粘贴的内容识别为代码块？](https://z.wiki/u/Cp8Rgl)\n\n### squid\n\n<ImgView title=\"squid 代理服务\" url=\"https://5.z.wiki/autoupload/20230425/GiIr.1888X1882-image.png\" />\n\n`Squid`是一种高性能的代理服务器软件，它可以帮助减少网络流量、提高访问速度并增加安全性。\n`Squid`可以作为`HTTP`、`HTTPS`、`FTP`等多种协议的代理服务器，同时支持缓存、访问控制、日志记录等多种功能。\n`Squid`还可以作为反向代理服务器，将外部请求转发到内部服务器上。\n\n#### 安装\n\n针对`centos8`可以按如下步骤安装\n\n1. 安装`dnf`包管理器（`Dandified YUM`）：\n\n```shell\nsudo yum install dnf\n```\n\n2. 安装`Squid`：\n\n```shell\nsudo dnf install squid\n```\n\n启动`Squid`服务：\n\n```shell\nsudo systemctl start squid\n```\n\n配置`Squid`：默认配置文件位于`/etc/squid/squid.conf`，可以根据需要进行修改。\n\n```shell\nsudo vi /etc/squid/squid.conf\n```\n\n重启`Squid`：\n\n```shell\nsudo systemctl restart squid\n```\n\n安装完成后，可以使用浏览器或者curl等工具测试Squid是否正常工作。例如：\n\n```shell\ncurl -x http://localhost:3128 http://www.baidu.com\n```\n\n以上命令将会使用`Squid`代理访问百度网站。\n\n注意：如果系统上已经安装了`Squid`，请使用以下命令卸载先前安装的`Squid`：\n\n```shell\nsudo dnf remove squid\n```\n\n\n### 网络监控\n\nifstat 和 iftop 都是 Linux 系统下用于监测网络流量的命令。\n\nifstat 命令是一个简单的命令行工具，\n用于监测网络接口的流量。\n它可以输出网络接口（如 eth0 ）的输入和输出流量，\n以及其他一些统计信息。ifstat 命令可以显示实时数据，\n也可以设置间隔时间输出一段时间内的网络流量。\n\niftop 命令是一个类似于 top 命令的交互式网络流量监测工具。\niftop 命令可以查看网络接口的流量、源和目的IP地址、端口以及协议等信息。\niftop 命令可以以实时方式显示网络流量，并允许用户以各种方式过滤和排序流量信息。\n\n\n\n\n### 磁盘监控\n\niotop 是一个 Linux 下的磁盘 I/O 监控工具，\n它可以用来监测磁盘 I/O 的负载和磁盘 I/O 请求的相关进程、\n线程信息，\n可以实时查看哪些进程正在进行磁盘读写操作，\n以及这些操作占用了多大的磁盘 I/O 带宽。\n\n### KeyCastr\n\n按键可视化神器，给人录屏演示的时候很有帮助。[KeyCastr](https://github.com/keycastr/keycastr)\n\n<ImgView title=\"按键可视化神器\" url=\"https://7.z.wiki/autoupload/20240126/dkrF.832X1265-neovim.gif\" />\n\n一键安装：\n```shell\nbrew install --cask keycastr\n```: \"\",\n: \"挺好用的 感谢楼主推荐\",
misc/goodthings
path is https://playground.z.wiki/comment/list?path=/misc/ip-query.html
---\nmeta:\n - name: description\n content: IP归属地查询,ip查询 \n - name: keywords\n content: IP归属地查询,ip查询 \ntags: [\"IP 归属地查询\", \"敖武的游乐园\", \"IP 查询\"]\n---\n# IP 归属地查询\n\n[web 端传送门](https://playground.z.wiki/lbs/showIp)\n\n<ImgView title=\"ip查询\" url=\"https://5.z.wiki/images/20220409/b0ee56ce038a47889d283820bdda759f.png\" />\n\n[alfred 插件](https://github.com/yihuaxiang/alfred-workflow-ipip)\n\n<ImgView title=\"ip查询\" url=\"https://6.z.wiki/images/20220410/45708155a39e45b989d0f2194e03a2d8.png\" />\n\n# 背景\n\n\n经常有获取`IP`地址的需求，之前用过网上随便找的一些`API`，不过不怎么稳定。。。\n\n干脆自己做一个，`API`+前端+小程序+`chrome`插件+`alfred`插件\n\n目标如下：\n\n<ImgView title=\"ip查询\" url=\"https://8.z.wiki/autoupload/2022-05-02/a13d3cbd720549618dc20d846e266049.ipip.drawio.svg\" />\n\n<img width=\"220\" src=\"https://z.wiki/images/20220409/c42d3008d9ac405aad02c456cc2a7a88.png\" />\n\n经过短暂的开发有了阶段性结果（意思是到此为止吧🤣)\n\n### 阶段性成果\n\n前端地址：\n\n[https://playground.z.wiki/lbs/showIp](https://playground.z.wiki/lbs/showIp)\n\n<ImgView title=\"ip查询\" url=\"https://9.z.wiki/images/20220409/038dadb133ee4a1285876a634ee48b40.png\" />\n\n`alfred` 插件：\n\n[alfred-workflow-ipip](https://github.com/yihuaxiang/alfred-workflow-ipip)\n\n<ImgView title=\"ip查询\" url=\"https://4.z.wiki/images/20220410/d68b782087bd45909d9e814bb8393272.png\" />\n\n`API`接口：\n\n接口地址：\n```\nhttps://playground.z.wiki/lbs/getIp\n```\n\n接口参数：\n\n| 参数 | 类型 | 是否必填 | 备注 |\n|-----|-----|-------------|----------|\n| ip | 字符串 | 否（默认取调用方IP） | 仅支持 IPv4 |\n\n请求示例：\n\n```shell\ncurl -s -L \"https://playground.z.wiki/lbs/getIp?ip=153.37.191.6\" | jq\n```\n\n<ImgView title=\"ip查询\" url=\"https://5.z.wiki/images/20220409/9c59a855d7a542388c94ccb4c7d035f0.png\" />: \"很实用，收藏了 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/good.png\" /> \",\n: \"<p>可以用用</p>\n\",
misc/ip-query
path is https://playground.z.wiki/comment/list?path=/misc/ru.html
---\nmeta:\n - name: description\n content: 美国生物实验室 乌克兰 美俄冲突 俄乌冲突\n - name: keywords\n content: 美国生物实验室 乌克兰 美俄冲突 俄乌冲突\n---\n# 生物实验室\n\n据说，这是美国在乌克兰设立的生物实验室资料，吃瓜\n\n<ImgView title=\"生物实验室\" url=\"https://1.z.wiki/images/20220312/fd9655fb59214c8f8ec57a27339ffa39.png\" />\n\n原资料已保存🥰，[点此下载](https://z.wiki/autoupload/2022-08-24/9dbc7237112d436aa9f6f0bbb3a14a93.doc-2022-03-10.zip)\n\n以下是资料截图😂\n\n\n<ImgView title=\"生物实验室资料\" url=\"https://1.z.wiki/images/20220312/133936dd7aef4111b5a87c25cc927d7d.png\" />\n\n<ImgView title=\"生物实验室资料\" url=\"https://1.z.wiki/images/20220312/5f3dfeea6c8e428fb2927f78c44b2535.png\" />\n\n<ImgView title=\"生物实验室资料\" url=\"https://1.z.wiki/images/20220312/9e1b78de5a374081ba557cd8d8a2f3c9.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://2.z.wiki/images/20220312/ae4446bf7f114ee5b5a13f6dc2a89862.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://2.z.wiki/images/20220312/069d2d4434fe48bfb475e8ed831bfe26.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://2.z.wiki/images/20220312/7cd0e7c3fa374685a92d7adfb69431f4.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://2.z.wiki/images/20220312/82beeb475726472ab6469a7703fda2f0.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://3.z.wiki/images/20220312/507b38250db74fa18e96043278ca7966.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://3.z.wiki/images/20220312/0e1ee2d2e2a74fdc8d7db3e20e8a7b30.png\" />\n\n<ImgView title=\"生物实验室\" url=\"https://3.z.wiki/images/20220312/9d9067ab968f4e6ca13c793b0daace84.png\" />: \"围观\",\n: \"大毛骗人的😠\",
misc/ru
path is https://playground.z.wiki/comment/list?path=/misc/art-of-strategy.html
博弈论: \"回复:&quot;打算什么时候写？&quot;\n\n------------\n\n测试一下\",\n: \"回复:\"打算什么时候写？\"\n\n------------\n\n春节集五福？\",\n: \"打算什么时候写？\",
misc/art-of-strategy
path is https://playground.z.wiki/comment/list?path=/misc/iOS16.html
---\nmeta:\n - name: description\n content: 苹果手机升级 IOS 16\n - name: keywords\n content: 苹果手机升级 IOS 16\n---\n\n# iOS 16\n\n升级`IOS 16`啦，体验体验\n\n<div class=\"ctn\">\n <PhoneSnapshot url=\"https://z.wiki/autoupload/2022-09-13/5d0340319cbb4937a2db1fe2e7d0c581.IMG_8310.PNG\" title=\"苹果手机升级 IOS 16\" alt=\"苹果手机升级 IOS 16\" />\n\n <PhoneSnapshot url=\"https://z.wiki/autoupload/2022-09-13/b43fce2236b648d1aa6c5741b411873d.IMG_8311.PNG\" title=\"苹果手机升级 IOS 16\" alt=\"苹果手机升级 IOS 16\" />\n\n <PhoneSnapshot url=\"https://z.wiki/autoupload/2022-09-13/b22aa33eb7d34535aaf871be004c09ff.IMG_A604D4E2A133-1.jpeg\" title=\"苹果手机升级 IOS 16\" alt=\"苹果手机升级 IOS 16\" />\n</div>: \"iOS 16 居然有一个安卓外壳，666.\",
misc/iOS16
path is https://playground.z.wiki/comment/list?path=/work/performance.html
---\nmeta:\n - name: description\n content: 程序员 绩效 考核 自评 年终 工作总结 打工人\n - name: keywords\n content: 程序员 绩效 考核 自评 年终 工作总结 打工人\n---\n# 技术人员如何写绩效自评\n\n### 背景\n\n每到年底的时候，都需要在公司系统中填写年终总结\n\n尽管不想写，而且技术开发往往擅长写代码，不擅长写总结报告，抓耳挠腮，憋个半死，\n但是制度如此，不得不写，同时对自己负责，写写回顾、展望未来，想必也定是极好的\n\n<ImgView title=\"想必定是极好的\" url=\"https://z.wiki/images/20220220/a87a312aad2e4cdb8652bf48c82cf34e.png\" />\n\n\n\n年终总结，写好的话，有助于说明自己的工作绩效，绩效好可以多拿年终奖，还有机会争取晋升。\n\n那该如何写好年终总结呢？🤔\n\n\n### 积累在平时\n\n#### 素材收集\n胖子不是一天长成的，年终报告也不是仅仅靠年底的一天冲刺就能搞定的。平时的工作中需要有心，有心意味着：\n\n1. 收集工作素材（周报、月报等等）-- 你做了哪些工作\n2. 阶段性的总结所参与的项目，当项目结束的时候需要有阶段性的总结、回顾 -- 你的总结、回顾\n3. 重点记录所做的突出的地方（有亮点的地方）-- 你的亮点、突出点\n4. 业务中的关键数字（业务增长、同比环比、QPS、PV、资源水位、性能等等） -- 能说明收益的数字\n\n平时注意多收集相关素材、资料，养兵千日用兵一时，一年来生产的炮弹在年终的时候都会打出去。\n\n![火力覆盖](https://z.wiki/images/20220220/d59c0993d0424ef088987e257b68f005.gif)\n\n#### 技术规划\n\n技术规划最好的时间是年初，其次是现在。\n\n年初的时候需要规划好这一年有哪些技术迭代规划、有哪些架构升级、概念升级，\n然后在项目开发中尽可能往这些技术、架构、概念上靠拢，机会不会从天而降，需要自己去寻找。\n\n<ImgView title=\"技术规划\" url=\"https://z.wiki/images/20220219/2d052d98c01e401b86152f572bcd7839.png\" />\n\n\n技术规划需要从一下两个方面去考虑\n\n1. 业务痛点\n2. 向上管理（领导、团队关注哪些技术）\n3. 业界动态\n\n业务痛点：上一财年，业务上有哪些未能解决的问题？这些痛点有的可能很明显，有的可能大家都麻木、感觉不到了。\n明显的问题，大概率需要大家协力优化、完成，这类可以尝试牵头解决（毕竟容易解决的话也不会一直留下来）。\n针对后者（大家已经麻木了的问题），如果能通过技术解决，往往也能让大家对你刮目相看。\n\n领导、团队关注哪些技术？这个主要靠平时的沟通、探讨了,不光和技术领导沟通，也需要和业务方探讨。\n\n业界动态：可以通过微信、微博、技术博客等手段关注业界（你所在行业内）的技术动态、业务动态。尤其是竞对，通过学习竞对来进行技术规划。\n\n#### 创新\n\n创新分为业务创新和技术创新，作为研发，往往是跟着业务跑，领导定好方向、产品定好方案后，技术进行功能开发，想要引领业务还是很有挑战的，所以，业务创新更多适合领导层或产品层去考虑，我们一线研发可以重点关注技术创新。\n\n比如：我所在的XX团队，有很多大屏业务，最开始是一个一个业务大屏开发，后来通过建设组件库、基础库、大屏业务库等基础生态，增加了技术积累，提高了开发效率，再往后建设了低代码平台，这些技术服务于同一个业务，但是通过技术迭代实现了创新。\n\n创新的同时也要考虑到避免内卷，我之前有一篇 [如何避开内卷](https://z.wiki/life/involution.html) 的文章，\n如何避开内卷？有一个词叫降维，意思是避开高手，降低竞争维度，就是蓝海，从蓝海中拿成绩比从红海中拿成绩容易多了。\n通过避开内卷，创新往往就容易多了。\n\n结合工作，能做到避开内卷有如下一点：\n1. 国家降维，把国外的技术引进到过国内，进一步引申为：把团队外、公司外的技术引进到团队内，人与人之间不仅有竞争关系，更多的是合作、互利管理，前提是你能用好这些关系，他们做底层你就做上层，生态上相互补充，互相拿到一个相对好的绩效。\n\n<ImgView title=\"珠海旅游\" url=\"https://4.z.wiki/images/20220220/4f46ee1626d745a5af207e4193d8f32d.png\" />\n\n\n\n### 开写总结\n\n有了以上积累后我们就可以开始写年终总结了。\n\n<ImgView title=\"珠海旅游\" url=\"https://z.wiki/images/20220219/748f3f3f673b442ba27b41dd8018c644.png\" />\n\n\n#### 错误示范\n\n1. 流水账\n\n流水账：一月份做了什么，二月份做了什么，三月份又做了什么项目… 一条条列出来，价值不大。\n\n2. 佛性总结\n\n佛性总结：今年按时按量完成了领导交给我的工作任务，明年准备在技术上有所提升。\n\n以上两种错误的示范给人躺平的感觉，无欲无求。\n\n<ImgView title=\"躺平\" url=\"https://z.wiki/images/20220220/b55dec45c6da4740a1ead1afc187d9f7.png\" />\n\n\n#### 正确总结原则\n\n年终总结要坚守一下几条原则\n\n1. 扬长避短\n2. 真实无水分\n\n在不弄虚作假的前提下，突出自己的优点、长处\n\n<ImgView title=\"珠海旅游\" url=\"https://z.wiki/images/20220219/0600a3c582b64e6aa5ab4b2021e0179e.png\" />\n\n\n\n典型案例： “屡败屡战”\n\n> 闻诸先辈云：平江李次青元度本书生，不知兵。曾国藩令其将兵作战，屡战屡败。国藩大怒，拟奏文劾之，有“屡战屡败”语。曾幕中有为李缓颊者，倒为“屡败屡战”，意便大异。元度乃得免罪.\n\n* “屡战屡败”：会传达给人失败和绝望的感觉\n* “屡败屡战”：则带给人坚强、执着的感觉\n\n同时是对战况的介绍，“屡败屡战”就比“屡战屡败”更适合写到自评中。\n\n#### 自评整体结构\n\n1. 业务交付\n\n 业务交付是最基础、最底线的要求，只要拿了公司的薪资这一块就该做好，但同时呢仅仅靠完成业务交付是很难拿到高绩效的（需要有创新、突出点）\n\n\n2. 技术专项\n\n 技术专项是技术同学牵头进行的技术迭代专项，通过技术更好的赋能业务，此项为加分项，需要平时重点透出\n\n\n3. 稳定性建设\n\n 稳定向建设包括服务监控、运维等平台的建设或线上问题的跟进、答疑等，通过用反来有针对性的优化系统稳定性\n\n\n4. 团队贡献\n\n 注意：非leader岗位不建议写团队建设，需要些团队贡献，文字类似而含义相差很大\n\n\n5. 核心业务专项\n\n 核心业务可以从“业务交付”中提出来，作为业务专项进行单独介绍\n\n#### 项目详细介绍\n\n有了整体结构，就需要往里面逐个填写内容了，在详细介绍项目的时候有如下几点需要关注\n\n\n1. 拿出数据证明\n\n平时产品发的周报或节假日总结报告，需要重点收集和你相关的数据，作为重要数据来证明你的成绩，另外，业务上的数据往往是纵向（运营、产品、研发、运维）一起努力的结果，仅仅有数字说服力也是有限的，还要拿出案例来说明你比同岗位的其他人做的好，这些案例可以是：你主动提出的方案、你主导的技术开发、你的拉通能力等等，总之就是：你的不同助力了业务成绩，你是不可或缺的\n\n举例说明：\n我开发了XX系统，该系统支撑XXX的客户（用户），同比增长XXX、环比增长XXXX\n\n上述中的数字（XXX）和你的工作有关联，但未必有因果关系，如果换一个人就做不到这些数字了吗？这些数字是你的成绩还是平台的成绩？\n你开发一个页面，放到淘宝上，瞬间有千万级的客户，但是这个“千万级客户”不是你的能力，是淘宝这个平台的能力\n\n\n你需要拿出案例说明你的独一无二，比如：技术选型，之前是什么方案（A方案），你选的是什么方案（B方案）？同期其他人的方案（C方案）是什么？拿出B方案优于A方案、C方案的证据，这是里的贡献是最有利的支撑\n\n<ImgView title=\"珠海旅游\" url=\"https://z.wiki/images/20220220/902ec797ff584baa8085df718649141c.png\" />\n\n\n\n2. 你是如何把普通的事情做的不普通了\n\n同时是业务开发，你需要做出亮点（不同点），比如：当大家都是按部就班一步一步开发的时候，你要想如何做出花儿，这些花儿可以是技术文章输出、可以是技术分享输出、可以是新技术升级等等，\n技术文章：不见得一定多高级，但一定是把一个、多个知识点搞透彻、能解决很多人不了解的知识点的这种文章，能给别人帮助的就是好文章，比如：集团安全扫描经常扫描到各种安全漏洞，收到漏洞的人往往按部就班的修复，如果这时，能有人写篇文章结合前后端、结合写好的DEMO来演示这些漏洞的原理，那这个文章就是有帮助、能提升自己影响力的文章，能突出自己的亮点，\n同样是安全漏洞，能通过技术分享会议分享出去就更好了，\n\n\n3. STAR 原则\n\n* S（situation）：描述实现关键元素的背景和目标，eg.为了降低30%的机器成本\n* T（task）：为创造你所取得的成就拆解的任务，eg.在最高QPS不变的情况下，通过异步IO降低资源占用\n* A（action）：完成的有助于结果的动作，包括意外插入的，eg.进行异步化改造\n* R（result）：拿到了什么样的结果，可以的话，量化它，eg. 同样的机器能够支撑更多QPS，进而实现机器成本下降\n\n<ImgView title=\"珠海旅游\" url=\"https://4.z.wiki/images/20220220/8b9fde33e8bf45808cac63c730bf966a.png\" />\n\n\n\n4. 适当的高级词汇\n\n如：复盘、赋能、抓手、沉淀、中体、点线面、反哺、感知度、颗粒度、组合拳、体系、共建、垂直领域、联动、布局等等\n利用适当的高级词汇是内容更加饱满、立体。\n\n[From pua-lang](https://github.com/flaneur2020/pua-lang)\n\n<ImgView title=\"珠海旅游\" url=\"https://z.wiki/images/20220220/192c31ad9eb54c26893274607877f4d6.png\" />\n\n\n\n### 结尾\n\n一年下来的个人生活也需要总结，这一年的得失，回顾一下，也是对自己的负责。: \"<p>学到了，兄弟可以啊 <img alt=\"bow\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e7/2018new_zuoyi_org.png\"/></p>\n\",
work/performance
path is https://playground.z.wiki/comment/list?path=/work/index.html
工作思考\n\n<LastPost :random=\"true\" prefix=\"/work\" :number=\"10\"/>: \"<p>博主写文章不错啊</p>\n\",
work/index
path is https://playground.z.wiki/comment/list?path=/work/the-answers-of-alibaba.html
阿里人的答案书\n\n### 没有过程的结果是垃圾，没有结果的过程是放屁\n\n> Results without process are worthless; process without results is nonsense.\n\n没有过程的结果是垃圾，如同瞎猫碰到死耗子，这种结果无法复制、无法推广、无法规模化，只是单纯的一次性收益，所以这种没有过程的结果是垃圾。\n\n没有结果的过程是放屁，过程很好、值得点赞，但是我们要为结果买单，所以没有结果的过程是放屁、是没有价值的。\n\n根本原因是：我们既要过程又要结果。\n\n### 不要让人吃惊\n\n> No surprise.\n\n不要让人吃惊其实在强调过程管理，在阿里巴巴工作中，过程管理是机器重要的一个环节。作为`leader`，不能在分配工作后充当甩手掌柜坐等结果，作为一线员工，不能忽视开发过程中和`leader`的沟通，一味地想憋一个大招只会让结果更不理想。\n\n### 为过程鼓掌，为结果买单\n\n> Applaud for effort, pay for performance.\n\n阿里巴巴是一家理想主义色彩很浓烈的公司，但是阿里巴巴又是一家非常务实的公司。阿里巴巴从第一天开始，就要绩效导向。要为过程鼓掌，为结果买单。\n\n\n### 做正确的是，正确的做事\n\n> Do the right thing in the right way.\n\n每个阿里人，都要坚持做正确的事，正确地做事。做正确的事是战略，正确地做事是战术。做正确的事，是指我们要始终坚持客户价值。在这条路上可能会寂寞，可能会有KPI（关键绩效指标）的压力、老板的压力，但路走对了，就不怕远。如果阿里人只是为了KPI活着，阿里走不远，也走不好。正确地做事，是指要找到正确的做事方法，在过程中，要能够快速学习，能够影响更多的人，共同拿到结果。\n\n### 既要低头拉车，也要抬头看路\n\n> Put your head down without losing sight of what's ahead.\n\n我们做工作，在低头拉车的同时，一定要抬头看路，一定要多出去跟别人交流，要多走到年轻人、走到创业公司中去，去感知他们在发生什么，去感知这个社会在发生什么，这样才能有源源不断的创新力。\n\n### 山不过来，我过去\n\n> If the mountain does not come to me, I will go to the mountain.\n\n在成功的过程中，困难总是无法避免的，而且有很多东西我们无法改变，就像大山不能向我们走来，那就改变自己，山不过来我过去。\n\n### 不难，要你干吗？\n\n> If it is not hard, why do we need you?\n\n面对困难、挑战，不要有畏惧的情绪，正是这些困难才能突出我们的价值。\n\n### 冬天不可怕，可怕的是没有准备\n\n> Don't feat the winter, Fear not being ready for it.\n\n任何一次灾难都是难得的新机会，冬天意味着春天不远了，所以冬天不可怕，可怕的是我们没有准备好面对冬天，可怕的是我们熬不到春天。\n\n### 男人的胸怀是被冤枉撑大的\n\n> Overcome grievances, then you'll have a big heart.\n\n在工作和生活中，我们难免不被别人理解。特别是快速成长的过程，往往是一个人经历苦难最多的时候。在冤枉、委屈的磨砺中，虽然会经历很多风雨，甚至会遍体鳞伤，但最终我们得到的成长，会比付出的多很多。在逆境中成长，把冤枉、委屈、压力转化为动力，是一份宝贵的经验。如果上天忽然关闭了一扇门，你会委屈。把这种委屈转化成力量，让自己强大到再开一扇窗的时候，你会感激。\n\n\n### 合理的要求叫锻炼，不合理的要求叫磨炼\n\n> Reasonable demands provide training; unreasonable demands hold you feet to the fire.\n\n假如上级的要求很难达到，就当成锻炼或者磨炼，反正今天不过这个关，明天还得过。我们要在自己心里，很好地去释放压力。在这个过程中，不断锻炼、磨炼自己承受压力的能力，没有什么压力是扛过不去的。生活有时候会让我们受伤，但到后来，那些受伤的地方一定会变成我们最强壮的地方。\n\n\n### 你感觉不舒服的时候，就是成长的时候。\n\n> Feeling uncomfortable is the key to growth.\n\n感觉不舒服的时候，通常也是在面对自己以前没有面对过的挑战，承担自己以前不曾承担过的重任的时候。人总是希望待在自己的舒适圈里，这种不舒服是驱动我们突破舒适圈，获得从未有过的进步和成长的良药。因为总有一天，那些让你难过的事情，你都能笑着说出来。\n\n### 要驱动别人，先点燃自己\n\n> To inspire others, you must inspire yourself first.\n\n要想驱动伙伴，最好的方式是先点燃自己。只有点燃自己，你周围的伙伴、同学们才会感受到你在用什么方式工作，用什么方式在跟他们交流，你是真的在意客户，还是在有口无心地讲“客户第一很重要”。这是自驱力，是阿里这个组织非常重要的能力。你的努力程度，决定了你将看到什么样的风景，承担什么样的责任，展现什么样的自我，活出什么样的未来。愿意点燃自己照亮同路的人，才有更多人愿意同行。\n\n\n### 一个错误的决策比没有决策更好\n\n> A wrong decision is better than no decision.\n\n在互联网时代，一个错误的决策比没有决策要好。与其原地踏步，不如勇敢踏出第一步。不做决策，一味等在那里，才是真正的问题。一旦做了决定，立刻goahead（实施）。如果在执行中，发现之前的决策有问题，第一反应就是转弯，调整决策。这样的团队，一个连可以打败一个团，这就是阿里的文化。\n\n\n### 聚是一团火，散是满天星\n\n> Together, we burn like a bonfire, Separated, wo glow like stars at night.\n\n阿里人聚在一起，凝聚力非常强，就像一团熊熊燃烧的火焰，分散各地的时候又像满天繁星，各自散发着光芒。\n\n### 心要慈，刀要快\n\n> Be kind,but be decisive.\n\n作为leader，在管理上，你的心要慈，刀要快。不合适的人，要尽早开除。如果你对一个人很不满意，你既不找他谈话，要求他改进，又不开除他，这对他是最残酷的，对团队也是不负责任的。尽快地开除不合适的人，对团队和当事人都不是坏事，很多时候对他是一种帮助。\n\n\n### 团队和谐到一定境界，就危险到一定境界\n\n> An overly harmonious team is in danger.\n\n\n简单、开放、透明，是阿里文化里最纯粹、最值得我们欣喜的部分。如果一个团队很和谐，一定不是一件太好的事情。正常的家庭里，夫妻天天吵架肯定不行；从来不吵架的，肯定也有问题；隔三岔五吵一吵，日子才能过得好。这是因为相互间的亲密和欣然，让直接、简单的沟通成为可能。所以，有话就说。\n\n如果一个团队和谐到一定程度，也就意味着这个团队如一潭死水，很难掀起波澜了。\n\n### 借假修真，借事修人\n\n> Your work is a journey to self-discovery and improvement.\n\n人生就是一个“借假修真”的过程。做业务、做产品，这些其实是“假”，我们的主要目的是让自己更加强大，让自己更加与众不同，修炼自己的“真”。\n\n“借事修人”,就是在用的过程中养人,在养的过程中用人。比如,每一次开会、每一次开会、每一次讨论事情的时候，并不只是在开一个业务会议，这同时也是一个修炼人的过程。\n\n### 直言有讳\n\n> Speak your mind but show respect.\n\n直言，是阿里人对事情的态度；有讳，是阿里人对同事讲话的方式。事得好好做，话当然也得好好说。畅所欲言的内网、各种沟通渠道，营造了阿里自由、开放的言论氛围。我们鼓励大家正视问题，并带着积极的心态去解決问题，但不希望大家带着情绪胡乱放炮，冷语伤人。\n\n你待世界以温柔，世界也会回馈以温柔。\n\n### 心有多大，舞台就有多大\n\n> Your job is as big as your ambition.\n\n这句话真正的含义是，你的责任心有多大，你的舞台就有多大。你愿意为一个人担当，你就是自己；你愿意为十个人担当，你就是经理；你愿意为公司担当，愿意为天下人担当，你的舞台一定会更大。所以，责任心才是关键。同时，阿里要有全球视野，要有为人类社会创造价值的胸怀。只有这样，有一天，我们才有可能成为真正为人类社会做出巨大贡献的公司。\n\n### 认真的人自带光芒\n\n> Dedicated people have halos.\n\n一个活得很努力、很认真的人，自带万丈光芒；一个人认真的样子，比任何时候都要美好；一个人能够自律自控，他的人生也就成功了大半。世间每一种美好，从来都只为懂得努力认真的人盛装而来，
work/the-answers-of-alibaba
path is https://playground.z.wiki/comment/list?path=/index.html
---\nmeta:\n - name: description\n content: 敖武的博客，分享我的生活、技术、经验、总结\n - name: keywords\n content: 敖武的博客,技术,博客,经验,总结,思考,github\n---\n# 欢迎👏🏻👏🏻👏🏻\n\n## 关于博主\n\n<p>\n <img title=\"敖武的头像\" alt=\"敖武的头像\" src=\"https://z.wiki/autoupload/2022-05-09/fa4355da3640453380d18ce97f4ce98e.IMG_7223.JPG\" style=\"width: 40px;height: 40px; border-radius: 8px;\">\n</p>\n\n<style>\n.links {\n flex-wrap: wrap;\n}\n.links > a {\n margin-right: 15px;\n flex-shrink: 0;\n}\n</style>\n\n\n<div class=\"links\" style=\"display: flex;\">\n <a target=\"_blank\" href=\"https://weibo.com/u/2558497932\"><img src=\"https://z.wiki/shieldio/weibo.svg\" title=\"敖武的微博\" /></a>\n <a target=\"_blank\" href=\"https://1.z.wiki/autoupload/20231209/2Vsb.1164X1122-IMG_1279.JPG\"><img src=\"https://z.wiki/autoupload/20231209/rt4Z.%E5%BE%AE%E4%BF%A1-%E5%85%AC%E4%BC%97%E5%8F%B7-0ac261.svg\" title=\"敖武的博客 公众号\" /></a>\n <a target=\"_blank\" href=\"https://github.com/yihuaxiang\"><img src=\"https://z.wiki/shieldio/github.svg\" title=\"敖武的github\" /></a>\n <a target=\"_blank\" href=\"https://stats.uptimerobot.com/jM7p3TY1ng\"><img src=\"https://z.wiki/shieldio/uptime.svg\" title=\"z.wiki 的服务状态\" /></a>\n</div>\n\n本站作者[敖武](https://z.wiki)，站点为 [z.wiki](https://z.wiki)。\n\n<NaviLinks />\n\n<LastPost :random='true' prefix=\"\" :number=\"10\"/>\n\n## 封面图：有脾气的人\n\n<br />\n<ImgWithTitle :img=\"{\n url: 'https://z.wiki/images/20211115/1548709a2750430cadb3021b209fa847.png',\n title: '有脾气的人',\n desc: '2020年10月拍于天津泰达航母。',\n darkInfo: true,\n bgColor: 'rgb(0 0 0 / 25%)'\n}\" />\n\n\n\n## 序\n\n请赐予我力量，全力改变那些可以改变的事情，平静接受那些无能为力的事情，拥有智慧区分这两者。\n\n\n[京ICP备2021035392号](https://beian.miit.gov.cn/): \"楼主挺能坚持啊 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/laugh-without-word.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/laugh-without-word.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/laugh-without-word.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/clap.png\" /> \",\n: \"回复:&quot;博主有工作吗&quot;\n\n------------\n\n有哇\",\n: \"博主有工作吗\",\n: \"博主是个大美女啊 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/stupid.png\" /> \",\n: \"👍👍👍\",\n: \"羡慕～\",\n: \"回复:\"<p>请问封面是哪个明星 <img alt=\"bow\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e7/2018new_zuoyi_org.png\"/></p>\n\"\n\n------------\n\n楼主吧\",\n: \"....\",\n: \"test content\",\n: \"贵司哪里的？\",\n: \"博主考虑直播吗，来我司吧\",\n: \"博主考虑直播吗，来我司吧\",\n: \"God bless you\",\n: \"...\",\n: \"😄😄\",\n: \"Nice!\n \",\n: \"Nice!\n \",\n: \"<p>i can also type in english</p>\n\",\n: \"<p>牛</p>\n\",\n: \"<p>博主文章可以，支持一下</p>\n\",\n: \"<p>博主厉害</p>\n\",\n: \"<p>这封面谁啊 <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",\n: \"<p>???</p>\n\",\n: \"<p>请问封面是哪个明星 <img alt=\"bow\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e7/2018new_zuoyi_org.png\"/></p>\n\",\n: \"<p><a class=\"at\" href=\"#6193852483ad7a74a1bbadd6\">@摄影师阿杰 </a> , 👏</p>\n\",\n: \"<p>壁纸 <img alt=\"not easy\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/aa/2018new_bingbujiandan_thumb.png\"/></p>\n\",\n: \"<p>壁纸 <img alt=\"not easy\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/aa/2018new_bingbujiandan_thumb.png\"/></p>\n\",\n: \"<p> <img alt=\"clap\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/6e/2018new_guzhang_thumb.png\"/></p>\n\",\n: \"<p>博主不错</p>\n\",
index
path is https://playground.z.wiki/comment/list?path=/resource/system-mirror-iso.html
---\nmeta:\n - name: description\n content: 系统镜像下载，包括 windows、ubuntu、centos等多种操作系统 \n - name: keywords\n content: 操作系统,镜像,iso,系统下载 \ntags: [\"操作系统\", \"镜像\", \"iso\", \"系统下载\"]\n---\n\n\n# 系统镜像\n\n为了方便使用，这里整理了常用的操作系统`iso`文件兵上传到了`oss`上，可直接点击下载。\n如果下载速度较慢可通过多线性并发下载，如通过`axel`（详细介绍：[axel 敖武的博客](https://z.wiki/misc/goodthings.html#axel)）下载。\n\n### Windows 系统镜像\n\n1. `windows 7` 专业版：[windows_7_ultimate_x64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/windows/cn_windows_7_ultimate_x64_dvd_x15-66043.iso)\n2. `windows 7` 企业版：[windows_7_enterprise_x64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/windows/cn_windows_7_enterprise_x64_dvd_x15-70741.iso)\n3. `windows 7` 家庭版：[windows_7_home_premium_x64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/windows/cn_windows_7_home_premium_x64_dvd_x15-65718.iso)\n4. `windows 8` `8.1`：[cn_windows_8_1_x64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/windows/cn_windows_8_1_x64_dvd_2707237.iso)\n5. `windows 11` 教育版：[windows_11_editions_x64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/windows/zh-cn_windows_11_consumer_editions_x64_dvd_904f13e4.iso)\n\n### Linux 系统镜像\n\n1. `ubuntu 20` 服务器版：[ubuntu-20-live-server-amd64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/linux/ubuntu-20.04.4-live-server-amd64.iso)\n2. `ubuntu 16` 桌面版：[ubuntu-16-desktop-amd64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/linux/ubuntu-16.04.7-desktop-amd64.iso)\n3. `ubuntu 20` 精简版：[ubuntu-20-desktop-amd64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/linux/ubuntu-20.04.4-desktop-amd64.iso)\n4. `ubuntu 22` 桌面版：[ubuntu-22-desktop-amd64](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/linux/ubuntu-22.04-desktop-amd64.iso)\n5. `centos 8.2` 精简版：[CentOS-8.2.x86_64-minimal](http://resources-zwiki.oss-cn-beijing.aliyuncs.com/system-mirror-iso/linux/CentOS-8.2.2004-x86_64-minimal.iso)\n\n\n### 相关链接\n1. [centos 官网下载链接](https://www.centos.org/download/)\n: \"有用，已收藏。 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bad-laugh.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/blackness.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/laugh-without-word.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/titter.png\" /> \",
resource/system-mirror-iso
path is https://playground.z.wiki/comment/list?path=/resource/ebooks.html
---\nmeta:\n - name: description\n content: 电子书 程序员 编程 IT\n - name: keywords\n content: 电子书 程序员 编程 IT\ntags: [\"电子书\", \"编程\", \"程序员\", \"IT\"]\n---\n\n# 电子书\n\n### \n\n\n[代码整洁之道.epub](https://z.wiki/autoupload/20230902/lmXU.%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.epub)\n\n[图解HTTP_.pdf](https://z.wiki/autoupload/20230902/KClD.%E5%9B%BE%E8%A7%A3HTTP_.pdf)\n\n[代码之外的功夫：程序员精进之路.pdf](https://z.wiki/autoupload/20230902/hiLv.%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96%E7%9A%84%E5%8A%9F%E5%A4%AB%EF%BC%9A%E7%A8%8B%E5%BA%8F%E5%91%98%E7%B2%BE%E8%BF%9B%E4%B9%8B%E8%B7%AF.pdf)\n\n[第一本docker书.epub](https://z.wiki/autoupload/20230902/twry.%E7%AC%AC%E4%B8%80%E6%9C%ACdocker%E4%B9%A6.epub)\n\n[大话数据结构.epub](https://z.wiki/autoupload/20230902/8hb0.%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.epub)\n\n[HTTP权威指南.pdf](https://z.wiki/autoupload/20230902/WVJl.HTTP%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97.pdf)\n\n[淘宝技术这十年.pdf](https://7.z.wiki/autoupload/20230902/TnZj.%E6%B7%98%E5%AE%9D%E6%8A%80%E6%9C%AF%E8%BF%99%E5%8D%81%E5%B9%B4.pdf)\n\n[大型分布式网站架构设计与实践.pdf](https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/20230902/xQov.%E5%A4%A7%E5%9E%8B%E5%88%86%E5%B8%83%E5%BC%8F%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5.pdf)\n\n[大话设计模式.mobi](https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/20230902/Rku1.%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.mobi)\n: \"书很多，但是看不下去\",
resource/ebooks
path is https://playground.z.wiki/comment/list?path=/resource/apps.html
---\nmeta:\n - name: description\n content: 破解软件下载,parallels\n - name: keywords\n content: 破解软件下载,parallels \ntags: [\"破解软件\", \"下载\", \"parallels\"]\n---\n\n\n# Parallels Desktop\n\n[Parallels Desktop 18.1.1 53328 破解教程（pd18永久授权）](https://z.wiki/images/apps/Parallels%20Desktop%2018.1.1_MacApp.dmg)
resource/apps
path is https://playground.z.wiki/comment/list?path=/tech/edge-rubbish.html
Edge 的垃圾功能\n\nEdge 从 112 版本开始内置 JSON 查看器，这个查看器的体验实在无法恭维\n\n1. 默认无法折叠（需要每次手动开启折叠）\n2. 完全阻止其他 JSON 查看插件的使用\n3. 不具备区块高亮\n\n[edge JSON 折叠](https://learn.microsoft.com/zh-cn/microsoft-edge/devtools-guide-chromium/whats-new/2023/04/devtools-112#the-json-viewer-in-microsoft-edge-supports-code-folding)\n\n\n<ImgView title=\"Edge JSON 折叠\" url=\"https://6.z.wiki/autoupload/20240122/LELD.2072X1502-Pasted_Graphic.png\" />\n\n: \"没办法，只能用 edge，谷歌没法进行多设备之间的同步。\",\n: \"唯一的好处就是在国内可以用他的云服务\",
tech/edge-rubbish
path is https://playground.z.wiki/comment/list?path=/tech/http2.html
全站开启 http 2.0 协议\n\n\n<ImgView title=\"全站开启 http 2.0 协议\" url=\"https://2.z.wiki/autoupload/20231111/Hvx9.1860X1714-image.png\" />\n\n\n\n> 参考文档：[nginx 开启 http2.0](https://www.tecmint.com/enable-http-2-in-nginx/)
tech/http2
path is https://playground.z.wiki/comment/list?path=/tech/vim-jump.html
在匹配括号之间跳转\n\nvim 提供了大量快速移动的命令，例如：`%` 可以在闭合括号之间快速移动，该括号包括小括号、中括号、大括号。\n\n经常有需求需要修改括号类型，如将小括号改成中括号\n\n```\nthis is a test content (Yes 。。。。。。。。)\n```\n\n如需要将上述中的小括号改成中括号，在改之前可以从左括号直接跳转到右括号，但是一旦左边改了就没办法跳转到右边了，尴尬了。\n\n\n```\nthis is a test content [Yes 。。。。。。。。)\n```\n\n这时候最好的办法是：修改前进行一次跳转，修改一边后点击`''`就可以回到原来的位置了，原来每次`%`跳转，vim 都会将跳转前的位置 `mark` 为`'`，\n于是就能通过`''`快速回去了，\n通过查看 mark 内容能看到各个 mark 的位置。\n\n\n<ImgView title=\"在匹配括号之间跳转\" url=\"https://9.z.wiki/autoupload/20240228/eOf2.1766X2540-image.png\" />\n\n\n\n新技能 get。\n
tech/vim-jump
path is https://playground.z.wiki/comment/list?path=/tech/download-speed.html
---\nmeta:\n - name: description\n content: 文件大小与下载速度\n - name: keywords\n content: 文件大小,下载速度,性能优化\n---\n# 文件大小与下载速度\n\n在`web`开发中，有一个重要的性能优化就是压缩文件、减少体积以此来试下加载速度的提升，然而文件大小和加载速度到底是怎样的关系呢？做个小实验研究下吧\n\n<ImgView title=\"研究文件大小和下载速度的关系\" url=\"https://3.z.wiki/autoupload/2022-09-06/469df116be87444c97e80a55539a8c82.image.png\" />\n\n\n### 实验背景\n\n<ImgView title=\"服务器配置 \" url=\"https://3.z.wiki/autoupload/2022-09-06/ffe86ab53db34af18da4b55ff412d004.image.png\" />\n\n* 腾讯云服务器：`4C4G`，`8M`上行带宽，既从该服务器上下载资源最快可达到`8M`每秒\n* 本地环境：`MacBook Pro` `300M`带宽\n\n### 实验计划\n\n1. 在服务器上动态生成各种大小的资源，从`1K`到`100K`\n2. 本地通过公网去下载资源，每个资源下载`100`次并计算平均下载时间\n3. 分析结论，看看文件大小和下载速度到底是怎样的关系\n\n\n### 生成资源\n\n```shell\n#!/bin/bash\nfor n in {1..100}\ndo\n echo $n\n $(dd if=/dev/zero of=./$n.html bs=1024 count=$n)\ndone\n```\n\n通过`shell`脚本生成`100`个文件，大小分别从`1K`到`100K`。\n\n<ImgView title=\"生成测试文件\" url=\"https://3.z.wiki/autoupload/2022-09-06/169940ffc0a84c64806fdcc8f6452f74.image.png\" />\n\n查看文件大小如下：\n\n<ImgView title=\"查看文件大小\" url=\"https://3.z.wiki/autoupload/2022-09-06/0daa2d5de85c44398ffad414b13ef59d.image.png\" />\n\n从图中可以看出所有文件最小占用`4K`，所有文件大小都是4k的整数倍。这是因为一个文件至少要占用一个分配单元的空间，而默认一个分配单元为`4K`。[关于4K的解释](https://www.zhihu.com/question/347758704/answer/836811084);\n\n\n### 开启`web`服务\n\n通过 [http-server](https://www.npmjs.com/package/http-server) 启动一个简单的`http`服务器，服务器需要修改防火墙配置，允许通过该端口进行访问。\n\n<ImgView title=\"开启http服务\" url=\"https://3.z.wiki/autoupload/2022-09-06/a61fc39739ba4ddda9427ec5e6accb7c.image.png\" />\n\n### 平均下载耗时\n\n通过`shell`脚本进行资源下载与耗时计算，每个文件访问`100`次并取平均值。\n\n```shell\n#!/bin/bash\nfor n in {1..100}\ndo\n total=0;\n for i in {1..100}\n do\n content=$(curl -o /dev/null -s -w '%{time_total}' http://51shazhu.com:8082/$n.html)\n total=`echo \"scale=2;( $total + $content )\" | bc -l`\n done\n avg=`echo \"scale=2;( $total / 100 )\" | bc -l`\n echo size is $n, avg time is $avg\n total=0;\ndone\n```\n\n\n### 执行结果\n\n\n```\nsize is 1, avg time is .04\nsize is 2, avg time is .05\nsize is 3, avg time is .05\nsize is 4, avg time is .05\nsize is 5, avg time is .05\n...\n...\n...\nsize is 95, avg time is .13\nsize is 96, avg time is .16\nsize is 97, avg time is .19\nsize is 98, avg time is .23\nsize is 99, avg time is .25\nsize is 100, avg time is .21\n```\n\n\n以上为脚本输出结果，针对每一个文件访问`100`次并计算平均下载时间。从日志可看出`100K`的文件明显下载速度更慢了。\n\n### 分析\n\n<ImgView title=\"分析结论\" url=\"https://3.z.wiki/autoupload/2022-09-05/f9e9064e473b445c9f193f7fbdcc69d1.image.png\" />\n\n让我们通过图表分析下吧~\n\n<ImgView title=\"文件大小和下载速度趋势图\" url=\"https://1.z.wiki/autoupload/2022-09-06/6c90b271d40c484294d66e2f8cced37f.image.png\" />\n\n> 文件从`1K`到`13K`的过程中下载时间几乎没有变化\n> \n> 文件从`14K`到`27K`的过程中下载时间几乎没有变化\n> \n> 文件从`28K`到`41K`的过程中下载时间几乎没有变化\n> \n> 文件从`41K`到`59K`的过程中下载时间几乎没有变化\n> \n> 再往后数据有些抖动，上下浮动较大\n> \n> 好神奇的现象\n\n\n1. 文件占用空间都是4k的整数倍，所以过小的体积并无助于加快下载速度\n2. 文件一定范围内变大并不会导致下载速度变慢，\n3. 下载时间和文件大小呈现阶梯式上升，每个阶梯大概`13K`，（这是为什么呢？）\n\n### 升华\n\n能否用到数学回归？用一个函数来表达这个曲线、趋势关系，🤔🤔，改天试试\n\n
tech/download-speed
path is https://playground.z.wiki/comment/list?path=/tech/cdn.html
---\nmeta:\n - name: description\n content: CDN 加速 下载速度 网络优化 性能优化\n - name: keywords\n content: CDN 加速 下载速度 网络优化 性能优化\ntags: [\"CDN\", \"性能优化\", \"前端优化\", \"http 协议\", \"测评\"]\n---\n\n# CDN 加速\n\n[图床](https://playground.z.wiki/img-cloud/index.html)上传的照片支持`CDN`加速域名，本地跑脚本测了下，速度提升`70%`以上，真赞，后续有空整站都进行`CDN`加速。\n\n<ImgView title=\"CDN 加速\" url=\"https://8.z.wiki/autoupload/20230205/1IZR.400X1180-image.png\" />\n\n### 测试函数\n\n首先使用`shell`编写函数用来测试下载资源所需要的时间。\n\n```shell\n# 参数1：URL\n# 参数2：循环次数\nfunction download_time_avg() {\n local url=\"$1\"\n local count=\"$2\"\n local total_time=0\n\n for ((i=0; i<count; i++)); do\n local start_time=$(date +%s.%N)\n curl -o /dev/null -s \"$url\"\n local end_time=$(date +%s.%N)\n local elapsed_time=$(echo \"scale=6; $end_time - $start_time\" | bc)\n total_time=$(echo \"scale=6; $total_time + $elapsed_time\" | bc)\n done\n\n local avg_time=$(echo \"scale=6; $total_time / $count\" | bc)\n echo $avg_time\n}\n```\n\n这个函数使用了`curl`命令下载指定的`URL`，并计算了下载所需的时间。循环指定的次数，累加每次下载所需的时间，最后计算平均时间，并返回结果。可以使用`bc`命令实现浮点数计算。\n\n\n### 非CDN测速\n\n测试脚本:\n\n```shell\nfor n in {1..5}\ndo\n avg=`download_time_avg https://z.wiki/autoupload/20230205/kipU.1154X1742-image.png 20`\n echo 非CDN域名，下载时间： $avg 秒\n total=0;\ndone\n```\n\n测试结果：\n\n```\n非CDN域名，下载时间： .25 秒\n非CDN域名，下载时间： .44 秒\n非CDN域名，下载时间： .60 秒\n非CDN域名，下载时间： .54 秒\n非CDN域名，下载时间： .41 秒\n```\n\n\n### CDN测速\n\n测试脚本:\n\n```shell\n#!/bin/bash\nfor n in {1..5}\ndo\n avg=`download_time_avg https://1.z.wiki/autoupload/20230205/kipU.1154X1742-image.png 20`\n echo CDN域名，下载时间： $avg 秒\n total=0;\ndone\n```\n\n测试结果：\n\n```\nCDN域名，下载时间： .11 秒\nCDN域名，下载时间： .10 秒\nCDN域名，下载时间： .10 秒\nCDN域名，下载时间： .10 秒\nCDN域名，下载时间： .11 秒\n```\n\n\n\n### Siege 压测\n\n使用[Siege](https://z.wiki/misc/cmd-recommend.html#siege)模式`10`个用户`10`次访问，结果如下：\n\n```\n# CDN 域名测试结果\nTransactions: 1600 hits\nAvailability: 100.00 %\nElapsed time: 110.14 secs\nData transferred: 32.32 MB\nResponse time: 0.38 secs\nTransaction rate: 14.53 trans/sec\nThroughput: 0.29 MB/sec\nConcurrency: 5.52\nSuccessful transactions: 1600\nFailed transactions: 0\nLongest transaction: 55.06\nShortest transaction: 0.01\n```\n\n```\n# 非 CDN 域名测试结果\nTransactions: 1600 hits\nAvailability: 100.00 %\nElapsed time: 209.74 secs\nData transferred: 81.43 MB\nResponse time: 1.14 secs\nTransaction rate: 7.63 trans/sec\nThroughput: 0.39 MB/sec\nConcurrency: 8.70\nSuccessful transactions: 1600\nFailed transactions: 0\nLongest transaction: 113.36\nShortest transaction: 0.00\n```\n\n总共`1600`个请求，`CDN`加速域名耗时`110`秒，比飞加速域名快了将近`100`秒，同时数据传输量也减少`60%`。\n
tech/cdn
path is https://playground.z.wiki/comment/list?path=/tech/coroutine.html
协程\n\n协程是一种线程之间的轻量级并发机制，\n它能够在同一线程中实现多个任务的交替执行，\n从而提高程序的效率。\n故,协程就是一种能够在一个线程中进行多个任务的并发机制，\n它可以避免线程切换带来的性能损失，\n并且能够更加灵活地管理任务的执行顺序，\n协程就是一种更加高效、更加灵活的并发编程方式，可以更好地处理并发问题。
tech/coroutine
path is https://playground.z.wiki/comment/list?path=/tech/html-space-entity.html
html 字符实体 - 空格\n\n<ImgView title=\"html 字符实体 - 空格\" url=\"https://z.wiki/images/20220522/3e47dfea08b7490c868ae5624735ee49.jpg?x-oss-process=image/resize,w_800/quality,q_80\" width=\"250px\" />\n\n今日看到`html`字符实体中的空格部分，原以为`nbsp`只是普通空格符的等价映射，结果发现空格字符也别有洞天。\n\n### 定义\n\n[https://www.w3.org/TR/html401/sgml/entities.html](https://www.w3.org/TR/html401/sgml/entities.html)\n\n```text\n<!ENTITY nbsp CDATA \"&#160;\" -- no-break space = non-breaking space, U+00A0 ISOnum -__->\n```\n\n从`w3`的定义上看，`nbsp`是\"非折行空格符\"，一段文字在宽度不足的情况下会按空白符进行折行，\n其中普通空格就是折行符的一个，而`nbsp`是非折行空格符，意味着`nbsp`前后的单词紧密连接在一起不会中间折行。\n\n### 应用\n\n在书名、系统名称等单词中使用`nbsp`这个字符实体，可以保证书名、系统名称不会中间折断，此外`html`中相连的多个普通空格字符会在解析式解析成一个空白字符，\n但是`nbsp`字符实体不会进行合并。\n\n### 扩展\n\n`nbsp` 全称为`non-breaking space`，那是不是还有其他空白字符实体呢？还真有，继续看`w3`的文档。\n\n```text\n...\n<!ENTITY ensp CDATA \"&#8194;\" -- en space, U+2002 ISOpub -->\n<!ENTITY emsp CDATA \"&#8195;\" -- em space, U+2003 ISOpub -->\n<!ENTITY thinsp CDATA \"&#8201;\" -- thin space, U+2009 ISOpub -->\n...\n```\n\n同样叫空白字符还有`ensp`、`emsp`、`thinsp`等。\n\n1. `ensp`：`en space`,`en`是排版领域的一个单位，长度为字体的一般，如：字体为`12px`，那`1en`表示`6px`，故`ensp`为长度为字体一半的宽度的空格符，在中文中等同于半角的空格符。\n2. `emsp`： `em space`，`em`也是排版领域的一个单位，与前者的区别是`1em`表示字体大小，如：字体为`12px`，则`1em`同为`12px`，`emsp`即为字体相同长度的空格符，在中文中等同于全角的空格符。\n3. `thinsp`： `thin space`，顾名思义，就是比较瘦的空格符，宽度为`ensp`的一半。\n: \"<p> <img alt=\"smile\" referrerpolicy=\"no-referrer\" class=\"vemoji\" src=\"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/e3/2018new_weixioa02_org.png\"/></p>\n\",
tech/html-space-entity
path is https://playground.z.wiki/comment/list?path=/tech/chromeext.html
---\nmeta:\n - name: description\n content: 谷歌插件 chrome 插件开发\n - name: keywords\n content: 谷歌插件 chrome 插件开发\ntags: [\"谷歌插件\", \"浏览器\", \"开发\"]\n---\n\n# 谷歌插件\n\n回想下，到现在自己做过的插件都有四五个了吧，多列搜索、默认首页、地图可视化搭建平台扩展工具、标签选择器等，但是真正发布出去的还真没有呢\n\n\n### 插件发布\n\n发布谷歌插件得申请专门的用于发布的账号，很久之前申请的了，当时还专门花了5美元开通什么服务来着。。。记不清了，没外币卡估计这一步会卡住。。。\n\n\n今天把标签选择器插件提交了发布申请，过几天看看吧，据以往经验，得5天才会审核，😌。\n\n\n\n# 2021-11-09 更新\n尴尬了，删除默认快捷键后没测就提交了。。还得重新等待审核\n<ImgView title=\"neovim\" url=\"https://6.z.wiki/images/20211115/efc061658d504072acd12c962ed4b8e0.png\" />\n\n\n# 2021-11-11 更新\n上线成功👏👏👏\n\n\n# 2021-11-13 更新\n两个已上线，两个审核中👏👏👏\n\n# 2021-11-13 更新\n`manifest 3` 尝试升级中\n上传了一个，看看是否真的审核快吧\n\n# 2021-11-15 更新\n经测，`manifest 3`确实审核快😏: \"<p>上线了没？</p>\n\",\n: \"<p>哈哈哈哈哈</p>\n\",
tech/chromeext
path is https://playground.z.wiki/comment/list?path=/tech/ripgrep.html
ripgrep 是个好东西\n\n[项目地址](https://github.com/BurntSushi/ripgrep)\n\n\n### 背景\n\n工作中最害怕的事情之一就是：上游服务变更，作为下游，可能多个服务都要调整，每当如此都要通过IDE打开每个每个项目，根据关键词查找代码，看看项目中是否有使用到上游服务。\n也许是习惯了，又或许是麻木了，我看周边每个同时都如此做着重复的事情。\n\n不想这样，我大抵是厌倦了，横竖不想这么麻烦，打开谷歌搜了下\"shell 文本查找\"，歪歪扭扭的每页都写满了`grep`\n\n<ImgView title=\"ripgrep\" url=\"https://8.z.wiki/images/20220204/86d986c9244442048c80c9bc46395f65.png\" />\n\n\n\n### 解决方案\n\n`grep` 是 `Linux`系统内置的一款强大的文本搜索工具，支持使用正则表达式递归对目录中的文件内容进行匹配。\n\n用法如下：\n```shell\ngrep -F -r \"KEY_WORD\" --exclude-dir=node_modules change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work -B 3 -A 3\n```\n\n含义讲解：\n\n> `-F`：需要匹配字符串为固定字符串（非正则表达式）\n> \n> `-r`：进行递归匹配\n> \n> `--exclude-dir=node_modules`: 进行文件匹配的时候排查`node_modules`目录\n> \n> `*`： 对任意文件名进行内容匹配\n> \n> `-B 3 -A 3`:对匹配到的内容，打印前3行+后3行\n\n相比，逐个项目查找，利用`grep`已经极大提升了效率\n\n我作为一个程序员，找到`grep`这个命令来进行内容匹配，这也是很合理的。\n\n<ImgView title=\"ripgrep\" url=\"https://7.z.wiki/images/20220204/3f713382c9d44784baea3f0252419ab9.png\" />\n\n\n### 更好的方案\n\n`grep` 作为系统内置的内容匹配工具，已经很好了，然而，对于特大型项目，速度还是不够理想，开源方案如`Ack`、`Ag`都是更优秀的方案\n\n从16年起，其实就已经有了更好的（最好）的替代方案：`ripgrep`\n\n<ImgView title=\"ripgrep\" url=\"https://9.z.wiki/images/20220204/530d349519f34ee1bd2b8f181f391d69.gif\" />\n\n`ripgrep` 相比 `grep`，有很多特性，\n\n1. 多线程，运行更快\n2. 自动递归搜索\n3. 支持 `.gitignore`，自动跳过已经忽略的文件\n4. 支持压缩文件搜索（zip、xz、bzip2、lz4、等等）\n5. 等等（懒得写了🤣）\n\n<ImgView title=\"ripgrep\" url=\"https://5.z.wiki/images/20220204/40caec342a1240438ff0a2c3ae63d85d.gif\" />\n: \"风趣 幽默 点赞\",
tech/ripgrep
path is https://playground.z.wiki/comment/list?path=/tech/meeting.html
---\nmeta:\n - name: description\n content: 抢购脚本，通过程序自动进行页面点击、订单下载\n - name: keywords\n content: 脚本,js,抢购,自动化,程序,下单\n---\n# 抢购脚本\n\n每周都要抢 _***_ ，作为程序员的我怎么能纯人肉抢呢？于是这个脚本应运而生。\n\n<ImgView title=\"脚本\" url=\"https://8.z.wiki/autoupload/2022-09-12/be11be625b444277b6c348e12f37a29c.image.png\" />\n\n### 脚本内容\n\n```JavaScript\n(function() {\n 'use strict';\n var clicked = false; // 标记抢订状态，确保只抢订一次\n function doClick() {\n var minutes = new Date().getMinutes();\n if(minutes == 0 && !clicked) { // 时间点分钟数正好为0️⃣的时候进行抢订\n console.info('doClick', new Date(), new Date().getMilliseconds());\n document.querySelector('.next-dialog button.next-btn-primary').click(); // 需要点击的按钮，根据实际需要来修改\n clicked = true;\n } else {\n console.info('not doClick')\n }\n }\n\n function loop() {\n doClick();\n requestAnimationFrame(loop); // 循环执行抢订函数\n }\n\n requestAnimationFrame(loop);\n})();\n```\n\n### 使用方法\n\n打开浏览器控制台，切换到`console`面板，复制以上内容并粘贴进去回车执行即可\n\n<ImgView title=\"脚本\" url=\"https://8.z.wiki/autoupload/2022-09-12/929cf03e38e843c3bd8b409e3b475afd.image.png\" />\n\n自此，生产力极大提升\n\n<ImgView title=\"脚本\" url=\"https://4.z.wiki/autoupload/2022-09-12/12fa5566e24c4ceaaadce8271f55827c.红领巾.gif\" />\n\n### 免责声明\n\n请勿使用该脚本抢月饼哟🐶🐶🐶\n\n<TheEnd />\n\n
tech/meeting
path is https://playground.z.wiki/comment/list?path=/tech/pronunciation.html
容易发音错误的单词\n\n> from [chinese-programmer-wrong-pronunciation](https://github.com/shimohq/chinese-programmer-wrong-pronunciation)\n\n\n中国程序员容易发音错误的单词(点击▶️收听正确读音)\n\n\n| 单词 | 发音 | 在线发音(英式发音) |\n|---------------|-------------------------------|-----------------------------------------------------------------------------------------|\n| access | /'&aelig;kses/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=access&amp;type=1\" /> |\n| Adobe | /ə'dəʊbi/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=Adobe&amp;type=1\" /> |\n| admin | /'&aelig;dmɪn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=admin&amp;type=1\" /> |\n| adversarial | /ˌ&aelig;dvəˈseəriəl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=adversarial&amp;type=1\" /> |\n| agile | /'&aelig;dʒaɪl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=agile&amp;type=1\" /> |\n| amazon | /'&aelig;məzən/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=amazon&amp;type=1\" /> |\n| analogy | /əˈn&aelig;lədʒi/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=analogy&amp;type=1\" /> |\n| Angular | /'&aelig;ŋgjʊlə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=Angular&amp;type=1\" /> |\n| AJAX | /'eidʒ&aelig;ks/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=AJAX&amp;type=1\" /> |\n| alias | /ˈeɪliəs/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=alias&amp;type=1\" /> |\n| Apache | /ə'p&aelig;tʃɪ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=Apache&amp;type=1\" /> |\n| app | /&aelig;p/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=app&amp;type=1\" /> |\n| archive | /'ɑːkaɪv/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=archive&amp;type=1\" /> |\n| array | /ə'rei/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=array&amp;type=1\" /> |\n| ASCII | /'&aelig;ski/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=ascii&amp;type=1\" /> |\n| aspect | /'&aelig;spekt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=aspect&amp;type=1\" /> |\n| async | /əˈsɪŋk/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=async&amp;type=1\" /> |\n| avatar | /'&aelig;vətɑː/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=avatar&amp;type=1\" /> |\n| Azure | /'&aelig;ʒə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=azure&amp;type=1\" /> |\n| bind | /baɪnd/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=bind&amp;type=1\" /> |\n| cache | /k&aelig;ʃ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=cache&amp;type=1\" /> |\n| Chrome | /krəʊm/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=chrome&amp;type=1\" /> |\n| clang | /kl&aelig;ŋ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=clang&amp;type=1\" /> |\n| debt | /det/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=debt&amp;type=1\" /> |\n| deny | /dɪ'naɪ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=deny&amp;type=1\" /> |\n| deprecate | /ˈdeprəkeɪt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=deprecate&amp;type=1\" /> |\n| digest | n. /'dɑɪdʒɛst/ v. /dɑɪ'dʒɛst/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=digest&amp;type=1\" /> |\n| doc | /dɒk/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=doc&amp;type=1\" /> |\n| dotnet | /dɒtnet/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=dotnet&amp;type=1\" /> |\n| ephemeral | /<AudioPlayer link=\"emərəl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=ephemeral&amp;type=1\" /> |\n| epoch | /ˈiːpɒk/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=epoch&amp;type=1\" /> |\n| execute | /ˈeksɪkjuːt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=execute&amp;type=1\" /> |\n| facade | /fə'sɑːd/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=facade&amp;type=1\" /> |\n| fedora | /fɪ'dɔːrə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=fedora&amp;type=1\" /> |\n| format | /'fɔːm&aelig;t/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=format&amp;type=1\" /> |\n| gauge | /ɡeɪdʒ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=gauge&amp;type=1\" /> |\n| Git | /ɡɪt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=git&amp;type=1\" /> |\n| GUI | /ˈɡu:i/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=%7BGUI%7D&amp;type=1\" /> |\n| height | /haɪt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=height&amp;type=1\" /> |\n| hidden | /'hɪdn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=hidden&amp;type=1\" /> |\n| image | /'ɪmɪdʒ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=image&amp;type=1\" /> |\n| implement | /'ɪmplɪm(ə)nt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=implement&amp;type=1\" /> |\n| integer | /'ɪntɪdʒə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=integer&amp;type=1\" /> |\n| issue | /'ɪʃuː/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=issue&amp;type=1\" /> |\n| Java | /'dʒɑːvə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=java&amp;type=1\" /> |\n| key | /kiː/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=key&amp;type=1\" /> |\n| Ldap | /el'd&aelig;p/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=ldap&amp;type=1\" /> |\n| linear | /'lɪnɪə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=linear&amp;type=1\" /> |\n| LINQ | /lɪŋk/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=link&amp;type=1\" /> |\n| Linux | /'lɪnəks/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=linux&amp;type=1\" /> |\n| locale | /ləʊ'kɑːl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=locale&amp;type=1\" /> |\n| Lucene | /lu'siːn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=lucene&amp;type=1\" /> |\n| main | /meɪn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=main&amp;type=1\" /> |\n| margin | /'mɑːdʒɪn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=margin&amp;type=1\" /> |\n| matrix | /ˈmeɪtrɪks/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=matrix&amp;type=1\" /> |\n| maven | /'meɪvn/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=maven&amp;type=1\" /> |\n| Microsoft | /'maikrəusɔft/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=Microsoft&amp;type=1\" /> |\n| miscellaneous | /ˌmɪsəˈleɪniəs/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=miscellaneous&amp;type=1\" /> |\n| obsolete | /ˈɒbsəliːt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=obsolete&amp;type=1\" /> |\n| parameter | /pə'r&aelig;mɪtə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=parameter&amp;type=1\" /> |\n| privilege | /'prɪvəlɪdʒ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=privilege&amp;type=1\" /> |\n| Prometheus | /prə-ˈmē-thē-əs/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=prometheus&amp;type=1\" /> |\n| Qt | /kjuːt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=cute&amp;type=1\" /> |\n| Realm | /relm/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=realm&amp;type=1\" /> |\n| reconcile | /ˈrekənsaɪl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=reconcile&amp;type=1\" /> |\n| resume | /rɪ'zju:m/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=resume&amp;type=1\" /> |\n| resolved | /rɪ'zɒlvd/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=resolved&amp;type=1\" /> |\n| resort | /rɪˈzɔ:t/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=resort&amp;type=1\" /> |\n| retina | /'retɪnə/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=retina&amp;type=1\" /> |\n| route | /ruːt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=route&amp;type=1\" /> |\n| safari | /sə'fɑːrɪ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=safari&amp;type=1\" /> |\n| scheme | /skiːm/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=scheme&amp;type=1\" /> |\n| scala | /ˈskɑːlɑ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=scala&amp;type=1\" /> |\n| segue | /'sɛɡwe/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=segue&amp;type=1\" /> |\n| thymeleaf | /ˈtaɪmˌlɪːf/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=thymeleaf&amp;type=1\" /> |\n| tuple | /tjʊpəl/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=tuple&amp;type=1\" /> |\n| Vagrant | /ˈveɪɡrənt/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=Vagrant&amp;type=1\" /> |\n| verbose | /vɜːˈbəʊs/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=verbose&amp;type=1\" /> |\n| vue | /v'ju:/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=vue&amp;type=1\" /> |\n| width | /wɪdθ/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=width&amp;type=1\" /> |\n| YouTube | /'juː'tjuːb/ | <AudioPlayer link=\"https://dict.youdao.com/dictvoice?audio=youtube&amp;type=1\" /> |: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> \",\n: \"👍\",
tech/pronunciation
path is https://playground.z.wiki/comment/list?path=/tech/java-httpclient.html
java httpClient\n\n在`Java`中和其他系统进行交互，`http`接口调用是最频繁不过的的一种方式了。\n\n<ImgView title=\"http-client\" url=\"https://0.z.wiki/autoupload/2022-05-15/fb51e14d6fc548f895b2f6020150aa01.http-call.drawio.svg\" />\n\n### HttpURLConnection\n\n最初都是使用`Java`自带的`HttpURLConnection`进行接口调用.\n\n```java\n URL url = new URL(\"https://z.wiki\");\n HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n conn.setRequestMethod(\"GET\");\n conn.setUseCaches(false);\n conn.setConnectTimeout(5000); // 请求超时5秒\n conn.connect();\n \n if (conn.getResponseCode() != 200) {\n throw new RuntimeException(\"bad response\");\n }\n \n // 获取响应内容:\n InputStream input = conn.getInputStream();\n```\n\n直接使用`HttpURLConnection`的成本还是比较高的，另外代码也比较冗余。\n\n### apache HttpClient\n\n后来发现 [Apache httpClient](https://hc.apache.org/httpcomponents-client-5.1.x/) 很好用。\n\n```java\nRequest.Get(\"https://z.wiki\")\n .execute().returnContent();\n```\n\n### OKHttpClient\n\n<ImgView title=\"okHttpClient\" url=\"https://square.github.io/okhttp/4.x/okhttp/okhttp3/-ok-http-client/\" />\n也不错。\n\n```java\n private final OkHttpClient client = new OkHttpClient();\n\n public void run() throws Exception {\n Request request = new Request.Builder()\n .url(\"https://z.wiki\")\n .build();\n client.newCall(request).execute();\n }\n```\n\n### RestTemplate\n\n在`spring boot`中也可以用`RestTemplate`\n\n```java\nBo product = restTemplate.getForObject(url, Bo.class);\n```\n\n不过，从`Java 11`开始，有了更优的选项，全新的`HttpClient`\n\n### Java11 HttpClient\n\n`Java 11`中全新的`HttpClient`提供了链式调用`api`简化操作，由于该`HttpClient`线程安全且内部通过线程池优化性能，可以创建全局实例。\n\n```java\nstatic HttpClient httpClient = HttpClient.newBuilder().build();\n```\n\n`GET`请求示例如下：\n\n```java\npackage com.itranswarp.oauth.provider;\n\nimport java.net.URI;\nimport java.net.http.HttpClient;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\n\npublic class T {\n // 线程安全且内部通过线程池优化性能，故创建全局实例\n static HttpClient httpClient = HttpClient.newBuilder().build();\n\n public static void main(String[] args) throws Exception {\n String url = \"https://z.wiki/\";\n HttpRequest request = HttpRequest.newBuilder(new URI(url)).build();\n HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n System.out.println(response.body().toString());\n }\n}\n```\n\n如果接口返回的是`html`内容，可以通过[jsoup](https://jsoup.org/) 进行`html`解析、修改。\n\n如果接口返回的并非是字符串，可以通过`HttpResponse.BodyHandlers.ofByteArray()`、`HttpResponse.BodyHandlers.ofInputStream()`等方式获取到二进制数据（数据流）。\n\n<TheEnd />\n: \"图片好评\",
tech/java-httpclient
path is https://playground.z.wiki/comment/list?path=/tech/shell.html
shell 函数指北\n\n### 创建函数\n\n<TextTitle text=\"创建\" title=\"创建函数\" />\n\n在`shell`中有两种创建函数的方法。\n\n一：关键字`function`\n\n```shell\nfunction name {\n commands\n}\n```\n\n如上示例，`name`为函数唯一名称，在`shell`脚本中每个函数名必须唯一，`commands`为构成函数的多条`shell`命令。\n\n\n二：无关键子\n\n```shell.md\nname() {\n commands\n}\n```\n\n在函数名后面直接调价括号，大括号内味函数包含的`shell`命令。\n\n\n### 使用函数\n\n<TextTitle text=\"使用\" title=\"使用函数\" />\n\n在`shell`中使用函数只需要调用函数名即可（注：无需在函数名后面加括号）\n\n示例如下：\n\n```shell\n#!/bin/bash\n\nfunction funName1() {\n echo \"在函数中打印内容\"\n}\n\ncount=1\nwhile [ $count -le 5 ] \ndo\n funName1\n count=$[ $count + 1 ]\ndone\n\necho 循环结束\n```\n\n> [点此下载以上脚本](https://z.wiki/autoupload/20221127/GSD8.fun.sh)\n\n\n执行结果如下：\n\n```shell\n在函数中打印内容\n在函数中打印内容\n在函数中打印内容\n在函数中打印内容\n在函数中打印内容\n循环结束\n```\n\n\n注意事项：\n\n1. 函数必须在调用之前进行定义，否则会报错`xxx: command not found`\n2. 函数名必须唯一，否则后定义的函数会覆盖先定义的函数，并且不会有任何提示\n\n\n### 返回值\n\n函数执行结束后都会返回一个状态码（返回码、退出码），有三种不同的方式来为函数生成状态码。\n\n#### 一：默认退出状态码\n\n默认情况下，函数退出码就是函数中最后一条命令返回的退出码，在函数执行后可以通过`$?`来获取函数的退出码。\n\n```shell\n#!/bin/bash\n\nfun1() {\n echo \"显示一个不存在的文件\"\n ls -l file-non-exist\n}\n\necho 开始调用函数\nfun1\necho 退出码为：$?\n```\n\n> [点此下载以上脚本](https://z.wiki/autoupload/20221127/GSD8.fun.sh)\n\n执行结果如下：\n\n```shell\n显示一个不存在的文件\n开始调用函数\n退出码为：1\n\n```\n\n函数退出码为`1`，因为函数中最后一条命令没有运行成功，默认状态码仅考虑最后一条命令的运行状态而不考虑其他代码的运行状态，故而有了其他两种状态码返回方法\n\n> 在`shell`中`0`为运行成功的状态码，其他均为异常状态码\n\n\n\n\n#### 二：return 关键字\n\n通过`return`退出函数是可以指定特定的状态码\n\n```shell\n#!/bin/bash\n\nfun1() {\n if [ -f /file-non-exit ] \n then\n return 2 # 函数返回状态吗\n fi\n\n echo find file /file-non-exit\n}\n\necho 开始调用函数\nfun1\necho 状态吗是: $?\n```\n\n> [点此下载以上脚本](https://z.wiki/autoupload/20221127/qWdP.fun.sh)\n\n运行结果如下：\n\n```shell\n开始调用函数\n状态吗是: 2\n```\n\n> 注：函数状态吗在`0~255`之间，超出该范围将导致报错。\n\n\n#### 三：echo\n\n正常的命令输出结果可以保存到`shell`变量中，对函数也可以采用同样的方案：在函数中进行`echo`输出，调用的地方将输出结果保存起来\n\n```shell\n#!/bin/bash\n\nfun1() {\n read -p \"请输出任意信息\" input\n echo input\n}\n\nresult=$(fun1)\necho return value is $result\n```\n\n> [点此下载以上脚本](https://z.wiki/autoupload/20221127/Vvye.fun.sh)\n\n通过该方案可以返回小数、字符串类型的返回值。\n\n\n### 在函数中使用变量\n\n<TextTitle text=\"变量\" title=\"在函数中使用变量\" />\n\n#### 参数变量\n\n在`shell`中调用函数同时需要传参的时候，函数和参数必须在用一行，如：`fun arg1 arg2`，同时函数内部可以通过`$1`、`$2`等变量获取对应的参数\n\n```shell\n#!/bin/bash\n\nfun() {\n echo '$1 is' $1\n echo '$2 is' $2\n}\n\nfun arg1 arg2\n```\n\n> [点此下载以上脚本](https://z.wiki/autoupload/20221127/DkTI.fun.sh)\n\n\n#### 全局变量\n\n默认情况下，在`shell`脚本中定义的都是全局变量，在脚本任意地方均可读取，包括函数内部。\n\n#### 局部变量\n\n局部变量使用`local`来定义，这样在函数内部定义的变量就不会影响全局\n\n### 函数库\n\n如果相同函数在不同`shell`脚本中都用到了，这时候可以将通用的函数放到单独的文件中，既函数库，例如：`myFuncs.sh`\n\n\n```shell\n#!/bin/bash\n\nfunctioin add {\n echo $[ $1 + $2 ]\n}\n\nfunction multem {\n echo $[ $1 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work $2 ]\n}\n\nfunction divem {\n echo $[ $1 / $2 ]\n}\n\n```\n\n\n在使用的脚本中通过`source /path-to-myFunc.sh` 或 `. /path-to-myFunc.sh` 加载函数库，加载后即可使用`add`、`multem`、`divem`三个函数。\n\n### shtool\n\n如同其他编程语言都有各种第三方库一样，`shell`也有自己的第三方库，如非常流行的`shtool`，该函数库就提供了很多便捷的函数。\n\n#### 安装：\n\n\n下载地址：[shtool fpt](ftp://ftp.gnu.org/gnu/shtool/shtool-2.0.8.tar.gz)\n下载后执行以下脚本即可安装：\n\n```shell\ntar -zxvf shtool-2.0.8.tar.gz\n./configure\nmake\n```\n\n安装后`shtool`提供的函数便可以再任意地方使用\n\n> brew 用户可以通过`brew install shtool`来快速安装\n\n| 函数 | 功能描述 |\n|--------------|-----------|\n| Arx | 创建归档文件|\n| Echo | 显示字符串，提供了一些扩展功能|\n| install | 安装脚本或文件 |\n| mdate | 显示文件或目录的修改时间 |\n| mkln | 根据相对路径创建链接 |\n| move| 移动文件，支持文件替换 |\n| Prop | 显示一个带有动画的进度条 |\n| version | 创建版本信息文件 |\n\n\n\n
tech/shell
path is https://playground.z.wiki/comment/list?path=/tech/nodejs_chart.html
重温8年前写的聊天室\n\n附上链接 [聊天室](https://chat.z.wiki/)\n\n[代码](https://github.com/yihuaxiang/nodejs_chat)\n\n### 本地预览\n\n经过层层努力，终于本地运行起来了，倍感欣慰\n\n之前做的简单的音乐播放器😂，硬编码进去两手歌曲，`Moon River` `Sound Of Silence`，曾经很喜欢这两首个，现在已经很少听了\n\n<ImgView title=\"聊天室\" url=\"https://2.z.wiki/images/20220206/ced6e3cb4b44482aae45087e92161811.png\" />\n\n[音乐播放器](https://chat.z.wiki/player)\n\n还有如此简陋的聊天室😂\n\n<ImgView title=\"聊天室\" url=\"https://2.z.wiki/images/20220206/b10f53ed62e54c0ebff4b4ac592c4e08.png\" />\n\n [聊天室](https://chat.z.wiki/)\n\n真的喜极而泣🤡\n\n<ImgView title=\"5fd3ad2c1eabd90ea26ff40b78dc1fce.gif\" url=\"https://2.z.wiki/images/20220206/c4f42f78a1ac4845b4e0666e2a2d6546.gif\" />\n\n发上去了😅 感动自己了😚😋😛: \"<p>牛啊，博主</p>\n\",
tech/nodejs_chart
path is https://playground.z.wiki/comment/list?path=/tech/here-document.html
here document\n\n\n在 `shell` 脚本语言中，`here document`（有时也称作 `heredoc` 或 `here-document`）是一种`IO`重定向的方法，\n允许你将一个字符串文本块作为输入传递给程序。\n\n`here document` 允许你定义一个输入界定符（通常命名为 `EOF` 或其他任何你选择的文本），\n然后在两个界定符之间包含文本。`Shell` 解释器会读取两个界定符之间的所有文本，并将其作为单个数据块提供给程序。\n\n这种技术的一个主要用途是避免多次使用 `echo` 或其他输出命令，\n或者省去创建和维护额外的文件。相反，你可以在脚本内部直接包含必要的多行数据，使得脚本更加自包含和可移植。\n\n下面是一个`here document`的示例，在 `Shell` 脚本中使用 `cat` 命令将内联文本输出到 `stdout`：\n\n\n```shell\ncat <<'EOF'\n这里是第一行文本。\n这里是第二行文本。\n这里是第三行文本。\nEOF\n\n```\n\n在这个例子中，文本直到遇到第二个 `EOF` 为止会被作为 `cat` 命令的输入数据。\n注意，如果在第一个界定符（`<<EOF`）后使用了引号（比如 `<<'EOF`'或 `<<\"EOF\"`），\n那么内嵌的文本不会进行 `shell` 环境变量的替换。如果没有使用引号，则文本内容中的所有 $变量 都会被替换为它们的相应值。\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/happy.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/happy.png\" /> \",
tech/here-document
path is https://playground.z.wiki/comment/list?path=/tech/github-passkey.html
github passkey 登陆\n\n> 从 2023 年 3 月开始到 2023 年底，GitHub 将逐渐开始要求在 GitHub.com 上贡献代码的所有用户启用一种或多种形式的双因素身份验证 (2FA)。 如果你在符合条件的组中，当选择该组进行注册时，将收到一封通知电子邮件，该电子邮件标志着 45 天的 2FA 注册期的开始，并且你会看到要求你在 GitHub.com 上注册 2FA 的横幅。 如果未收到通知，则表示你不是需要启用 2FA 的组的成员，但我们强烈建议启用 2FA。\n\n\n### 登陆的苦恼\n\nGitHub 的双重验证，也称为双因素认证（2FA），是一种安全措施，用于在用户登录时提供额外的保护。启用双重验证后，用户在输入账户的用户名和密码进行登录时，还需要提供第二个验证因素，如一次性密码（TOTP）\n\n由于开启了双因素认证，每次登录都需要拿起手机、打开 Authenticator ，输入一次性密码（TOTP），甚是烦恼😣\n\n\n<ImgView title=\"登陆的苦恼\" url=\"https://3.z.wiki/autoupload/20231211/MGis.1216X1006-image.png\" />\n\n\n步骤繁琐也就罢了，我还经常思考，如果一旦手机丢了我该怎么才能登录 GitHub 呢？\n\n》 思考\n\n\n当让 GitHub 告诉我无法获取一次性密码（TOTP）的时候可以使用 recovery code 进行恢复，然而理想很丰满现实很骨感，这种一年不用一次的 recovery code 等你真用的时候真的找得到吗？🤔\n\n\n### 谷歌的双因子认证\n\n对比之下，谷歌的双因子认证就方便的多了。\n\n\n<ImgView title=\"谷歌的双因子认证\" url=\"https://1.z.wiki/autoupload/20231211/mb9S.1808X1212-image.png\" />\n\n谷歌支持如下双因子认证方式：\n\n* 其他谷歌 APP\n* Authenticator\n* 手机验证码\n* 备用验证码\n\n其中我最喜欢的就数手机验证码了，因为我随时随地就能获取到，更为关键的是：手机丢了可以补办手机卡，不影响登录。\n\n\n那 GitHub 为什么不提供手机验证码呢？🤔\n\n\n查看了 GitHub 的 F2A 文档，原来是在国内不支持 😑\n\n<ImgView title=\"github的双因子认证\" url=\"https://1.z.wiki/autoupload/20231211/jE0N.1904X1306-image.png\" />\n\n没办法，天朝自有国情在。\n\n[支持 SMS 身份验证的国家/地区](https://docs.github.com/zh/authentication/securing-your-account-with-two-factor-authentication-2fa/countries-where-sms-authentication-is-supported)\n\n### 更方便的方式\n\n***Passkey***\n\nGitHub 的 Passkey 是一种基于 [WebAuthn](https://webauthn.io/)（Web 身份认证）标准的无密码认证方式。WebAuthn 是一个由 W3C 和 FIDO 联盟开发的网络标准，它允许用户只需使用生物识别（如指纹或面部识别）、安全密钥或其他本地身份验证手段，而不需输入传统的密码来登录和认证网络服务。这种技术是 FIDO2 标准的一部分，旨在为用户提供更为安全和便捷的登录体验。\n\nWebAuthn 原理如下：\n\n\n#### 注册过程（用户注册新设备）\n\n<br />\n\n<ImgView title=\"webauthn\" url=\"https://0.z.wiki/autoupload/20231211/NfY9.1207X1080-image.png\" />\n\n* 用户请求注册：用户在支持WebAuthn的网站上请求注册一个新的认证器设备（如指纹扫描器、面部识别摄像头、安全密钥等）。\n\n* 网站生成 Challenge：网站创建一个随机生成的“Challenge”（也就是一串随机数）并发给用户的设备。\n\n* 用户验证身份：用户通过本地设备上的生物识别技术、PIN码或其他方式验证身份。\n\n* 创建密钥对：一旦用户验证成功，设备会生成一对密钥，包括一个私钥（永远不离开设备，安全存储）和一个公钥。\n\n* 注册公钥：设备使用私钥对“Challenge”签名，并连同公钥和签名发送回网站。网站将公钥存储为用户的认证凭证。\n\n#### 登录过程（用户使用已注册设备认证）\n\n<br />\n\n<ImgView title=\"webauthn\" url=\"https://0.z.wiki/autoupload/20231211/z9qx.1207X1080-image.png\" />\n\n* 用户请求登录：用户尝试登录支持WebAuthn的网站。\n\n* 网站生成 Challenge：网站再次生成一个随机“Challenge”并发给用户的设备。\n\n* 用户验证身份：用户通过本地设备验证身份，就像注册过程一样。\n\n* 设备签名：设备使用存储的私钥对“Challenge”签名。\n\n* 验证签名：设备将签名和其他信息（如认证器数据）发送给网站，网站利用之前存储的公钥来验证签名的有效性。\n\n* 如果签名验证成功，意味着用户已经成功验证了他们的身份，用户就可以完成登录过程。这一过程不仅不需要用户输入密码，而且因为私钥永远不离开用户的设备，也增加了安全性。\n\n此外 WebAuthn 还支持跨平台认证，这意味着用户可以使用手机或其他移动设备来认证笔记本电脑或台式电脑上的登录过程。\n\n这种基于公钥加密和本地验证的方法提供了一个更安全、更难以伪造的用户认证方式，因为它依赖用户拥有的物理设备和/或生物特征，而这些都是难以被黑客远程窃取的。\n\n### 浏览器兼容性\n\n[MDN Web Authentication API](https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7)\n\n<ImgView title=\"webauthn\" url=\"https://6.z.wiki/autoupload/20231211/W0YU.1936X1424-image.png\" />: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> 学到了新知识\",\n: \" :smile: :clap:\",
tech/github-passkey
path is https://playground.z.wiki/comment/list?path=/tech/apple-privacy-protection.html
隐私保护\n\n苹果的隐私保护原来只是个幌子啊，\n\n<ImgView title=\"隐私保护\" url=\"https://6.z.wiki/autoupload/20240224/Okf7.440X1544-image.png\" />\n\n\n> 邮件隐私保护\n> \n> 你收到的电子邮件可能包括远程内容，使电子邮件发件人能够了解你的信息。打开电子邮件时，发件人即可收集你的“邮件”活动信息，此过程不透明，且你无法控制共享哪些信息。电子邮件发件人可能会了解你打开其电子邮件的时间和次数、是否转发了该电子邮件、你的互联网协议(IP)地址以及其他可用于建立你个人行为档案并知晓你位置的数据。\n> \n> “保护邮件活动”可阻止包括Apple在内的电子邮件发件人了解你“邮件”的活动信息，从而保护你的隐私。在“邮件”App中收到电子邮件时，无论你是否与电子邮件进行交互，“保护邮件活动”都会默认在后台下载远程内容，而非在你打开电子邮件时下载远程内容。Apple不会获取与内容相关的任何信息。\n> \n> 此外，“保护邮件活动”会通过由不同实体运行的两次独立中继转接“邮件”下载的所有远程内容。第一次中继知道你的IP地址，但不知道你收到的远程“邮件”内容。第二次中继知道你收到的远程“邮件”内容，但不知道你的IP地址，而是向目的位置提供一个泛化的身份信息。通过这种方式，任何实体都无法掌握可同时识别你身份和你收到远程“邮件”内容的信息。发件人无法将你的IP地址作为唯一标识符与你在网站或App中的活动关联，并以此建立你的档案。\n> \n> 前往“设置”>“邮件”>“隐私保护”，然后轻点关闭“保护邮件活动”，即可随时在iOS和iPadOS设备上停用“保护邮件活动”。在Mac上，前往“邮件”>“设置”>“隐私”，然后取消选择“保护邮件活动”。\n> \n> 若你选择停用“保护邮件活动”，“隐藏IP地址”功能将仍沿用两次独立互联网中继的设计遮盖你的IP地址。前往“设置”>“邮件”>“隐私保护”，然后轻点关闭“隐藏IP地址”，即可随时在iOS和iPadOS设备上停用“隐藏IP地址”。在Mac上，前往“邮件”>“设置”>“隐私”，然后取消选择“隐藏IP地址”。\n> \n> 使用这些功能即表示你同意和允许Apple及其下属公司及代理机构按上述条件传输、收集、维护、处理和使用这些信息。\n> \n> Apple收集的信息始终会遵照Apple的“隐私政策”处理，其内容可参阅www.apple.com/cn/privacy。\n\n\n说的这么神奇，然而我测了下，依然可以跟踪到用户的真是IP，以及邮件的首次查看情况。\n\n测试原理如下：\n\n1. 发送邮件给自己，其中邮件中包含一个远程图片\n2. 在服务器上查看这个图片的访问情况\n3. 当第一次我打开邮件的时候，能检测到图片被访问一次\n4. 远程 IP 确实是我的真是 IP\n\n<ImgView title=\"隐私保护\" url=\"https://4.z.wiki/autoupload/20240224/o7mC.915X1777-xxxxxxxx.gif\" />\n\n<VideoPlayer src=\"https://z.wiki/autoupload/20240224/JuJE.RPReplay_Final1708779365.MP4\" />\n\n> Mac 的邮件客户端好歹会提示“无法通过隐私模式加载”，手机邮箱客户端可是什么提示都没有。。。\n\n通过上述步骤 3 和 4 说明\n\n1. “而非在你打开电子邮件时下载远程内容” 这个是不真实的，当我第一次打开的时候才进行下载远程内容（手机邮箱客户端直接下载的）\n2. 我可以获取到用户公网 IP ，进而推断出用户的位置\n\n\n此外，苹果官网说由于 [VPN 和代理](https://support.apple.com/zh-cn/102289)导致的，然而我并没有任何 VPN 或代理。: \"回复:&quot;涨见识了，感谢大佬&quot;\n\n------------\n\n感谢支持🙏\",\n: \"涨见识了，感谢大佬\",\n: \"很有道理的样子 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/titter.png\" /> \",
tech/apple-privacy-protection
path is https://playground.z.wiki/comment/list?path=/tech/db.html
数据库选型\n\n<ImgView title=\"数据库选型\" url=\"https://5.z.wiki/autoupload/20221202/lsGY.656X711-image.png\" />
tech/db
path is https://playground.z.wiki/comment/list?path=/tech/beian.html
---\nmeta:\n - name: description\n content: 网站备案\n - name: keywords\n content: 网站,备案,阿里云,腾讯云,域名\ntags: [\"网站\", \"备案\", \"域名\", \"阿里云\", \"腾讯云\"]\n---\n\n# 域名备案流程\n\n\n### 第一次备案\n5年前曾有一次走过一次本案流程，当时在阿里云的域名+阿里云的机器，备案最麻烦的是还得去照相馆拍照😌\n\n\n### 第二次备案\n\n双十一的时候，腾讯轻量级服务器打折扣，2C4G的机器，3年只需要不到200块钱，简直太划算了，远比阿里云的教育优惠还便宜\n\n\n\n> [阿里云](https://playground.z.wiki/search/page?keyword=%E9%98%BF%E9%87%8C%E4%BA%91)教育优惠：8块钱1C1G一个月，但是只有学生才能享受该优惠\n\n> 2022-04-09 更：腾讯又搞活动，给免费升级`4C4G`，nice~\n> \n> <ImgView title=\"网站备案\" url=\"https://z.wiki/images/20220409/1cb4d2402c514752a5a142d17b0453bb.png\" />\n\n\n\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/1488e183525d43b29dea72e8c109d898.png\" />\n\n\n\n机器都搞好了，而且一次性买了三年，咬咬牙，备案再麻烦也得试试\n\n尝试之前还在想，难道现在还得去照相馆吗？还没升级吗？果然，手机就能搞定了✌🏻✌🏻✌🏻\n\n备案得有域名啊，干脆在腾讯新买一个域名好了（后来发现，阿里云的域名+腾讯的机器也可以备案，直接在腾讯申请就行）\n\n### 开始备案\n\n\n#### 设置域名解析\n\n给域名添加`A`记录，解析到指定的`IP`\n\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/d1459dc3cfff4245a69e56313c971c06.png\" />\n\n\n添加好`A`记录后几分钟即可访问，但是没多久便会被腾讯拦截\n\n> 网站未备案，需要备案后才可访问。吧啦吧啦\n\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/b59037b763374238bbcd728ecfc42f3d.png\" />\n\n\n\n#### 申请备案\n\n首先在腾讯云官网申请，填写申请单\n\n1. 填写域名+机器IP\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/9312a62bdba041369f5ac594ea98600d.png\" />\n\n\n2. 填写网站信息、负责人信息（各种证件照片、视频等）\n\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/70c7e88bd2324ae98cfa10b93d98e25d.png\" />\n\n\n\n3. 提交备案\n\n<ImgView title=\"网站备案\" url=\"https://4.z.wiki/images/20211118/2be227120a4c4c4c9297c23f1d2c3220.png\" />\n\n\n\n5. 腾讯审核\n\n腾讯审核过程中会打电话咨询，可能会对备案内容做稍微调整\n\n\n5. 管局审核\n\n管局审核时间比较长，一周左右\n\n6. 完成\n\n<ImgView title=\"网站备案\" url=\"https://4.z.wiki/images/20211118/24b53e282d024fe2a7d09531f79bed54.png\" />\n\n\n开开心心的给网站添加`ICP`号啦~\n\n<ImgView title=\"网站备案\" url=\"https://z.wiki/images/20211118/079473f9753c46928ac1beafea3032d0.png\" />\n\n\n\n\n\n\n: \"好文章\",\n: \"回复:\"中国大陆\"\n\n------------\n\n是的，内地都有这问题\",\n: \"中国大陆\",\n: \"决页面报错无法打开的问题\",\n: \"备案太麻烦了。😠\",
tech/beian
path is https://playground.z.wiki/comment/list?path=/tech/docker.html
---\nmeta:\n - name: description\n content: 从零到一介绍 docker 的使用\n - name: keywords\n content: docker 容器 微服务 程序员 开发 后端技术\ntags: [\"docker\", \"发布\", \"镜像\"]\n---\n\n# docker\n\n<ImgView title=\"docker\" url=\"https://3.z.wiki/autoupload/20230501/VkEH.2160X3840-image.png\" />\n\n### 介绍与基础概念\n\n<TextTitle text=\"概念\" title=\"介绍与基础概念\" />\n\n`Docker`是一种容器化技术，它可以轻松地打包、部署和运行应用程序或服务。\n`Docker`的核心组件包括`Docker Engine`、`Docker Hub`和`Docker CLI`。\n`Docker Engine`是一个运行在主机上的后台服务，用于管理容器、镜像和网络等`Docker`组件。\n`Docker Hub`是一个在线的镜像仓库，用户可以在其中存储、分享和拉取`Docker`镜像。\n`Docker CLI`是一个命令行工具，它提供了一系列用于管理`Docker`的命令。\n\n在`Docker`中，容器是一种轻量级、可移植、可自包含的软件单元，它可以在任何地方运行。\n`Docker`容器是基于镜像创建的，镜像是一个只读的模板，它包含了应用程序或服务运行所需的所有组件和配置。\n`Docker`镜像是由`Dockerfile`定义的，`Dockerfile`是一个包含了一系列指令的文件，它描述了如何构建`Docker`镜像。\n`Docker`网络是一个附加的组件，它允许容器之间互相通信，以及容器和主机之间的通信。\n\n### 常用命令\n\n<TextTitle text=\"命令\" title=\"常用命令\" />\n\n`docker run`：该命令用于在 `Docker` 容器中运行一个新的镜像。语法如下：\n\n```shell\ndocker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n```\n\n其中 `OPTIONS` 可以指定容器的各种选项，如 `-p` 表示指定端口映射，`-v` 表示挂载数据卷等。\n\n举例说明：\n\n```shell\ndocker run -itd -v $(pwd):/var/opt/home -p 80:3000 node:18\n```\n\n该命令将宿主机的`80`端口映射到容器的`3000`端口，将当前目录挂在到容器的`/var/opt/home`目录。\n\n`docker ps`：该命令用于列出当前正在运行的容器。语法如下：\n\n```shell\ndocker ps [OPTIONS]\n```\n\n其中 `OPTIONS` 可以指定各种筛选条件，如 `-a` 表示列出所有容器，包括已停止的容器。\n\ndocker images：该命令用于列出当前系统中所有的镜像。语法如下：\n\n```shell\ndocker images [OPTIONS] [REPOSITORY[:TAG]]\n```\n\n其中`OPTIONS`可以指定各种筛选条件，如 `-a` 表示列出所有镜像，包括中间层镜像。\n\n`docker build`：该命令用于根据 `Dockerfile` 构建一个新的镜像。语法如下：\n\n```shell\ndocker build [OPTIONS] PATH\n```\n\n其中 `OPTIONS` 可以指定各种选项，如 `-t` 表示指定新镜像的名称和标签。\n\n`docker stop`：该命令用于停止运行中的容器。语法如下：\n\n```shell\ndocker stop [OPTIONS] CONTAINER [CONTAINER...]\n```\n\n其中 `OPTIONS` 可以指定停止容器的选项，如 `-t` 表示指定等待容器停止的时间。\n\n`docker rm`：该命令用于删除一个或多个容器。语法如下：\n\n```shell\ndocker rm [OPTIONS] CONTAINER [CONTAINER...]\n```\n\n其中 `OPTIONS` 可以指定删除容器的选项，如 -f 表示强制删除容器。\n\n`docker rmi`：该命令用于删除一个或多个镜像。语法如下：\n\n```shell\ndocker rmi [OPTIONS] IMAGE [IMAGE...]\n```\n\n其中 `OPTIONS` 可以指定删除镜像的选项，如 `-f` 表示强制删除镜像。\n\n`docker exec`：该命令用于在运行中的容器中执行命令。语法如下：\n\n```shell\ndocker exec [OPTIONS] CONTAINER COMMAND [ARG...]\n```\n\n其中 `OPTIONS` 可以指定执行命令的选项，如 `-it` 表示在交互模式下执行命令。\n\n举例说明：\n\n```shell\ndocker exec -it jolly_fermat bash\n```\n\n以上命令以交互模式下执行容器`jolly_fermat`里面的`bash`程序。\n\n\n### 创建应用\n\n<TextTitle text=\"创建\" title=\"创建应用\" />\n\n1. 从[start.spring.io](https://start.spring.io)初始化一个`web`应用\n2. 运行`package`生命周期，打包成`jar`\n\n<ImgView title=\"docker\" url=\"https://3.z.wiki/images/20211115/1c75893dcf694b7e94bcba31ef6c9ace.png\" />\n\n\n### 通过`docker`发布应用\n\n<TextTitle text=\"发布\" title=\"发布应用\" />\n\n#### 找到`OpenJDK`的镜像\n\n地址：[https://hub.docker.com/_/openjdk](https://hub.docker.com/_/openjdk)\n\n```shell\ndocker pull openjdk\n```\n\n#### 查看本地镜像\n```shell\ndocker images\n```\n\n运行接入如下：能看到`OpenJDK`镜像即可\n\n```shell\nREPOSITORY TAG IMAGE ID CREATED SIZE\nopenjdk latest deaa5a1a5f98 10 days ago 471MB\nhttpd latest 1132a4fc88fa 3 weeks ago 143MB\nphp latest dae5324f443c 3 weeks ago 476MB\nmysql latest ecac195d15af 3 weeks ago 516MB\nubuntu latest ba6acccedd29 4 weeks ago 72.8MB\nnginx latest 87a94228f133 4 weeks ago 133MB\n```\n\n\n\n#### 定制镜像\n\n在一个空目录下，新建一个名为 Dockerfile 文件，并在文件内添加以下内容：\n\n```shell\n# 定制的镜像都是基于 FROM 的镜像，这里的 openjdk 就是定制需要的基础镜像。后续的操作都是基于 openjdk\nFROM openjdk \n\n# 将打包好的应用复制到镜像中\nCOPY ./springproject/target/springproject-0.0.1-SNAPSHOT.jar /root\n\n# 运行程序，监听 8080 端口\nCMD java -jar /root/springproject-0.0.1-SNAPSHOT.jar\n\n```\n\n#### 构建镜像\n\n```shell\ndocker build -t fddweb:latest .\n```\n\n注：命令中的`.`是上下文路径，是指 docker 在构建镜像，有时候想要使用到本机的文件（比如复制），docker build 命令得知这个路径后，会将路径下的所有内容打包。\n\n构建结果如下：\n\n```shell\n[+] Building 0.2s (7/7) FINISHED\n => [internal] load build definition from Dockerfile 0.0s\n => => transferring dockerfile: 179B 0.0s\n => [internal] load .dockerignore 0.0s\n => => transferring context: 2B 0.0s\n => [internal] load metadata for docker.io/library/openjdk:latest 0.0s\n => [internal] load build context 0.0s\n => => transferring context: 150B 0.0s\n => [1/2] FROM docker.io/library/openjdk 0.0s\n => CACHED [2/2] COPY ./springproject/target/springproject-0.0.1-SNAPSHOT.jar /root 0.0s\n => exporting to image 0.1s\n => => exporting layers 0.1s\n => => writing image sha256:36dbcd1aa38da48e8f6e4bb20346a3320f5f93946c7a812366c4aba151acaaa2 0.0s\n => => naming to docker.io/library/fddweb:latest 0.0s\n\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\n```\n\n查看本地镜像，镜像列表中多了一条\n\n```shell\nfddweb latest 36dbcd1aa38d 2 minutes ago 488MB\n```\n\n#### 本地运行与测试\n\n```shell\ndocker run -d -p 8080:8080 fddweb\n```\n运行后访问[http://localhost:8080](http://localhost:8080)即可\n\n#### 发布\n\n1. 登陆\n```shell\ndocker login\n```\n\n根据提示输入用户名密码，第一次需要去官网进行注册\n\n2. 打标\n\n```shell\ndocker tag fddweb fudocker/fddweb:latest\n```\n\n3. 上传\n```shell\ndocker push fudocker/fddweb:latest\n```\n\n运行结果：\n```shell\nThe push refers to repository [docker.io/fudocker/fddweb]\n04540b06bf06: Pushed\nbf43d511e1ed: Mounted from library/openjdk\n86ab8b6eae75: Mounted from library/openjdk\n8178e842e73e: Mounted from library/openjdk\nlatest: digest: sha256:8ad87d86d41e7953f7c2542719b0d82f30f832b0eeb9fd7e8cb2012bc7ed5073 size: 1166\n```\n\n### 使用应用镜像\n\n<TextTitle text=\"镜像\" title=\"使用应用镜像\" />\n\n拉取镜像\n```shell\ndocker push fudocker/fddweb:tagname\n```\n\n使用镜像\n```shell\ndocker run -d -p 8811:8080 fudocker/fddweb:latest\n```\n运行后访问[http:localhost:8811](http://localhost:8811)即可\n\n### docker-compose\n\n`docker-compose`是用于定义和运行多容器 `Docker` 应用程序的工具。\n通过 `docker compose`，您可以使用 `YML` 文件来配置应用程序需要的所有服务。\n然后，使用`docker-compose up`或`docker-compose up -d`命令，就可以从 `YML` 文件配置中创建并启动所有服务。\n\n\n#### docker-compose 安装 \n\n```shell\n# 下载 docker-compose 可执行文件，具体版本号 [github](https://github.com/docker/compose/releases) 获取\nsudo curl -L \"https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\n# 添加可执行权限\nsudo chmod +x /usr/local/bin/docker-compose\n\n# 软连接到 /usr/bin/docker-compose\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\n# 检查是否安装成功\ndocker-compose version\n```\n\n[docker-compose 安装文档](https://docs.docker.com/compose/install/)\n\n安装后在有`docker-compose.yml`文件的目录中执行`docker-compose up -d`即可运行程序。\n\n#### docker-compose.yml\n\n`docker-compose.yml`的写法可以参考官网文档：[docs.docker.com](https://docs.docker.com/compose/compose-file/03-compose-file/)。\n\n\n\n#### 参考文档\n1. [runoob](https://www.runoob.com/docker/docker-dockerfile.html)\n2. [docker.com](https://docs.docker.com/get-started/): \"<p>支持一下博主 很厉害</p>\n\",
tech/docker
path is https://playground.z.wiki/comment/list?path=/tech/sse.html
---\nmeta:\n - name: description\n content: sever-send-event sse http协议 服务端推送\n - name: keywords\n content: sever-send-event sse http协议 服务端推送\ntags: [\"sse\", \"sever-side-events\", \"server-send-events\", \"http 协议\", \"服务端推送\"]\n---\n\n# Server-Send-Event\n\n想从服务端进行数据推送的话有哪些方案呢？\n\n以前我只知道有`WebSocket`\n\n<ImgView title=\"WebSocket\" url=\"https://1.z.wiki/autoupload/20230706/1u0z.580X1302-image.png\" />\n\n最近在搞`AI`，大模型在生成回复的时候都是实时推送的，今天自己了解了下，原来用的是`Server-Send-Event`方案。\n\n### Server-Send-Event\n\n`Server-Sent-Events`（`SSE`）是一种`HTML5` `API`，用于在服务器和客户端之间实时推送数据流。\n它基于`HTTP`协议，通过建立一个持久连接，服务器可以推送消息给客户端，而无需客户端发起请求。\n这使得服务器可以实时向客户端发送数据，而不需要客户端轮询服务器。`SSE`可以用于实现实时通知、实时聊天、实时数据更新和实时监控等功能。\n\n#### 技术上：\n\n1. `SSE`是基于`HTTP`长连接实现的，由客户端发起一次请求，服务器端保持连接打开，随时可以向客户端推送数据，直到客户端关闭连接。\n\n2. `SSE`使用的是`text/event-stream` `MIME`类型，服务器端通过这个`MIME`类型告诉客户端它将发送一系列事件流。\n\n3. 服务器可以发送多个事件流，每个事件流以`event`关键字开始（如果没有`event`字段则前端只能通过`onmessage`监听 ），\n数据字段以`data`关键字开始，并以一个换行符结束。整个事件流以连续两个换行符结束。\n\n4. 服务器可以发送一个`retry`字段，用来指定在连接断开后重新连接的时间间隔。\n\n```\nevent: ${eventName}\nid: 1\nretry: 5000\ndata: ${dataString}\n\n```\n\n5. 客户端通过`EventSource` `API`接收`SSE`。\n\n\n#### DEMO\n\n[源码](https://github.com/yihuaxiang/koa-sse)\n\n[在线 DEMO](https://playground.z.wiki/sse)\n\n[SSE 前端](https://z.wiki/jsbin/roqepikolu)\n\n<WebFrame src=\"https://z.wiki/jsbin/roqepikolu\" />\n\n\n#### PHP 代码\n\n```php\ndate_default_timezone_set(\"America/New_York\");\nheader(\"Cache-Control: no-store\");\nheader(\"Content-Type: text/event-stream\");\n\n$counter = rand(1, 10);\nwhile (true) {\n // Every second, send a \"ping\" event.\n echo \"event: ping\n\";\n $curDate = date(DATE_ISO8601);\n echo 'data: {\"time\": \"' . $curDate . '\"}';\n echo \"\n\n\";\n // Send a simple message at random intervals.\n $counter--;\n if (!$counter) {\n echo 'data: This is a message at time ' . $curDate . \"\n\n\";\n $counter = rand(1, 10);\n }\n ob_end_flush();\n flush();\n // Break the loop if the client aborted the connection (closed the page)\n if (connection_aborted()) break;\n sleep(1);\n}\n```\n\n### nginx 代理 Server-Send-Events\n\n如果需要使用`nginx`对`Server-Send-Events`进行反向代理的话，需要进行如下额外配置：\n\n```\nproxy_http_version 1.1;\nproxy_set_header Connection \"\";\nproxy_buffering off;\n```\n\n\n#### 参考\n\n1. [Server-sent events](https://developer.mozilla.org/zh-CN/docs/Web/API/Server-sent_events/Using_server-sent_events)\n2. [EventSource](https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource)\n3. [Server-Sent Events: пример использования](https://habr.com/ru/articles/519982/)\n4. [Nginx proxy for SSE](https://serverfault.com/questions/801628/for-server-sent-events-sse-what-nginx-proxy-configuration-is-appropriate)\n
tech/sse
path is https://playground.z.wiki/comment/list?path=/tech/growth.html
如何成长\n\n### 在业务中如何成长？\n\n\n总结一下，希望新的一年做地更好\n\n<ImgView title=\"技术进步\" url=\"https://7.z.wiki/images/20220310/03103d78a28c4f4cba676800aa4557fe.png\" />\n\n#### 业务\n\n在业务中成长，如果业务都支撑不好（或者作出的产品bug很多、体验很差）那肯定不能算一个优秀的开发者，所以，第一步要把业务支撑好\n\n<ImgView title=\"技术进步\" url=\"https://7.z.wiki/images/20220310/d8a48a8f8f544b3ab6b6f7cab2941cf2.png\" />\n\n#### 解脱\n\n支撑好业务之后，比较好的支撑业务之后，容易进入这种状态：日复一日的重复、重复、重复。\n这时候就需要自己去提升，从重复的业务中提升难度，比如：一个通用的日期选择功能，很多地方都有，那如何去提炼呢？\n需要提取每个模块对日期组件的要求，需要参考别人是如何设计的（比如antd，这时候要看API也要看源码），\n模仿好的案例，组件提炼好后，可能会逐步开始开发自己的组件库，这时候要了解其他组件库的整体设计并学习。\n\n通过技术深度，来实现从重复的业务中解脱出来\n\n<ImgView title=\"技术进步\" url=\"https://7.z.wiki/images/20220310/072ef572ff2a4638a97161f51d92ed91.png\" />\n\n#### 广度\n\n有了一定深度后，接下要要扩充广度，广度扩充的机会时刻都在身边，\n广度从一个专业的领域到宽泛的生活都有广度扩充的机会。\n\n比如：\n\n1. 3D可视化，通过网上的可视化项目来熟悉这个领域，知道这个领域是什么、有什么能力、有哪些应用场景等等\n2. 高并发，各个大公司的开放平台都是如何设计、实现的。\n3. 你发现产品给你的资料格式有问题，需要自己整理，通过java、awk、js、shell、多行编辑、excel函数等等很多种方式，\n4. 世界政治局势（咦，这个也算？）\n\n但是如何才能知道有这些方式可以用呢？关注社区、关注别人。\n\n<ImgView title=\"技术进步\" url=\"https://4.z.wiki/images/20220310/e2cbb6b1079c4aa182f704d1f61188e2.gif\" />\n\n\n#### 探索\n\n探索就是去摸索新技术。 \n学习新技术一定要和业务结合起来，好处是 \n\n1. 有充分的时间\n2. 环境会逼迫自己深入去学\n3. 学以致用，天天接触不容易忘掉\n\n<ImgView title=\"技术进步\" url=\"https://7.z.wiki/images/20220310/341040c9f9df49c8bafcc2f113ca67b4.png\" />\n\n#### 工具\n\n俗话说得好，好记性比如烂笔头，这里的烂笔头就是工具，工具用的好，晚上下班早\n\n<ImgView title=\"技术进步\" url=\"https://7.z.wiki/images/20220310/b7c6144b548c4da9ae1049daaa84ed37.png\" />\n\n##### 常用工具如下\n\n1. 搜索技巧\n 1. 搜索的时候需要会提炼关键字，坏的习惯：”xxx和yyy哪个好“，好的习惯 “xxx vs yyy”\n 2. 搜索引擎的技巧，比如双引号表示必须有，site 可以显示搜索范围等\n2. 英文文档\n 1. 习惯阅读英文文章、英文搜索、查看官网文档（而非劣质二手文章）: \"<p>有点内容👍👍</p>\n\",\n: \"<p>good</p>\n\",
tech/growth
path is https://playground.z.wiki/comment/list?path=/tech/jsbin.html
jsbin\n\n部署了一套`jsbin`服务，平时用来写写`demo`啥的~\n\n访问地址：[https://z.wiki/jsbin](https://z.wiki/jsbin)\n\n<ImgView title=\"jsbin\" url=\"https://1.z.wiki/autoupload/2022-10-06/3341553baa334fb79efe5862c408bec7.image.png\" />\n\n<ImgView title=\"jsbin\" url=\"https://1.z.wiki/autoupload/2022-10-06/dd918a3b955044c88de3268898cc2629.image.png\" />
tech/jsbin
path is https://playground.z.wiki/comment/list?path=/tech/docker-container-port.html
docker 动态修改端口映射\n\n### Docker 端口映射动态修改方法\n\n在 `Docker` 中，通常使用 `docker run -p` 命令将容器内部端口映射到宿主机的指定端口上。\n但有些情况下需要临时映射端口，例如 `Docker` 运行 `MySQL` 容器时，默认端口是不开放的。\n那么有什么办法可以让正在运行的容器暴露指定的端口呢？\n\n一种方法是通过修改 `Docker` 的配置文件来实现。\n需要修改的文件包括 `config.v2.json` 和 `hostconfig.json`，\n默认路径是 `/var/lib/docker/containers/<container_name>`。具体操作步骤如下：\n\n\n1. 首先使用 `systemctl stop docker` 命令关闭 `Docker` 服务。\n2. 然后修改 `config.v2.json` 文件中的 `ExposedPorts` 配置信息，例如添加内部端口 `8080/tcp` 的映射：\n\n```\n\"Config\": {\n \"ExposedPorts\": {\n \"8080/tcp\": {}\n },\n ...\n},\n```\n\n3. 接着修改 `hostconfig.json` 文件中的 `PortBindings` 配置信息，例如添加内部端口 `8080/tcp` 和外部端口 `8080` 的映射：\n\n```\n\"PortBindings\": {\n \"8080/tcp\": [\n {\n \"HostIp\": \"\",\n \"HostPort\": \"8080\"\n }\n ]\n}\n\n```\n\n4. 完成以上配置后使用 `systemctl restart docker` 命令重启 `Docker` 服务。最后重启指定容器即可访问对应的端口。\n\n\n需要注意的是，修改 `Docker` 配置文件的操作风险较高，\n需要谨慎操作并备份文件。此外，修改 `Docker` 配置文件是一次性的操作，需要重启 `Docker` 服务或容器后才能生效。\n因此，除非特别需要，一般不建议使用这种方法来暴露容器的端口。可以通过使用 `docker run -p` 命令来指定需要暴露的端口，\n避免不必要的风险。\n
tech/docker-container-port
path is https://playground.z.wiki/comment/list?path=/tech/snippets.html
snippets\n\n新开发的\"代码片段\"功能，收集常用的小脚本、小片段，\n目前包括`htaccess`、`JavaScript`、`shell`、`css`、`Nginx`、`html`等语言或服务的部分小片段。\n\n[点此围观 snippets](https://snippets.z.wiki/)\n\n<ImgView title=\"代码片段\" url=\"https://7.z.wiki/images/20220420/97c1d6d262d14e46b8b6a36f33e01c8e.png\" />: \"挺好的，不过UI有点丑\",
tech/snippets
path is https://playground.z.wiki/comment/list?path=/tech/my-first-post-in-stackoverflow.html
---\ntags: [\"ANSI\", \"ANSI 转义序列\", \"ANSI escape code\"]\n---\n\n\n# `ANSI`转义序列\n\n### `[36m` 是什么\n\n曾在做云构建的时候，收到的日志中经常有`[36m`、`[2K`、`[1G`类似的字符\n\n> 云构建就是讲本地构建移植到云上，需要在前端实时显示日志\n\n<ImgView title=\"[36m 是什么\" url=\"https://8.z.wiki/images/20220408/36a762a83c3b4555b28262ef2105ca32.png\" />\n\n```shell\n2022-04-08 21:48:35[36m⠙[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:35[2K[1G[36m⠹[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:35[2K[1G[36m⠸[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:35[2K[1G\n2022-04-08 21:48:35[36m⠼[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:35[2K[1G[36m⠴[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:35[2K[1G[36m⠦[39m [0/43] Installing vue-template-compiler@^2.6.5\n2022-04-08 21:48:36[2K[1G[36m⠧[39m [2/43] Installing is-buffer@~1.1.6\n2022-04-08 21:48:36[2K[1G[36m⠇[39m [3/43] Installing tiny-emitter@^2.0.0\n2022-04-08 21:48:36[2K[1G[36m⠏[39m [4/43] Installing to-array@0.1.4\n2022-04-08 21:48:36[2K[1G[36m⠋[39m [4/43] Installing terraformer@~1.0.5\n2022-04-08 21:48:36[2K[1G\n2022-04-08 21:48:36[36m⠙[39m [4/43] Installing eslint-plugin-vue@^4.7.1\n2022-04-08 21:48:36[2K[1G\n2022-04-08 21:48:36[36m⠹[39m [4/43] Installing sortablejs@1.10.2\n2022-04-08 21:48:36[2K[1G[36m⠸[39m [4/43] Installing source-map@^0.5.7\n2022-04-08 21:48:36[2K[1G[36m⠼[39m [4/43] Installing worker-farm@^1.7.0\n2022-04-08 21:48:36[2K[1G[36m⠴[39m [4/43] Installing semver@^6.3.0\n2022-04-08 21:48:36[2K[1G[36m⠦[39m [4/43] Installing debug@=3.1.0\n2022-04-08 21:48:36[2K[1G\n```\n\n感觉像是某种特殊字符，想百度下，却又无从下手，实在想不出来该搜索什么关键字\n\n<ImgView title=\"[36m 是什么\" url=\"https://8.z.wiki/images/20220408/5b383319d9524e9e97b855f3b9f5decb.png\" />\n\n### 献出我的一血\n\n今天正好逛到`Stack Overflow`，献出我的一血：\n\n[What does \"\[0;31m\" means?](https://stackoverflow.com/questions/71796687/what-does-031m-means)\n\n<ImgView title=\"Stack Overflow\" url=\"https://8.z.wiki/images/20220408/2ffdf2d3a8b74c85b8d45bc6409d4fe4.png\" />\n\n### 探索真相\n\n根据网友的回复，所有线索都指向了 **ANSI转义序列**\n\n**ANSI转义序列**是程序和终端交互的重要手段，**ANSI转义序列**是一种特殊的字符，通过这些字符，程序可以控制终端的行为、样式等（如：控制输出文本的前景色、背景色、控制光标位置等）。\n\n以下通过多个例子来体验**ANSI转义序列**之美🌹\n\n#### 富文本\n\n通过终端打印的文字默认是黑白风格，通过最基本的**ANSI转义序列**可以自定义文本渲染样式，\n如：颜色、背景色。\n\n```shell\nprint \"\u001b[31mHelloWorld\"\n```\n\n<ImgView title=\"富文本\" url=\"https://8.z.wiki/images/20220408/36470f8dd8e74e25b1eebe9e31ec0bfe.png\" />\n\n\n其中含义如下：\n\n1. 黑色：`\u001b[30m`\n2. 红色：`\u001b[31m`\n3. 绿色：`\u001b[32m`\n4. 黄色：`\u001b[33m`\n5. 蓝色：`\u001b[34m`\n6. 洋红色：`\u001b[35m`\n7. 青色：`\u001b[36m`\n8. 白色：`\u001b[37m`\n9. 重置：`\u001b[0m`\n\n> 类似语法不仅仅在`shell`中支持，`java`、`JavaScript`、`Python`也都有一定的支持，`js`运行效果如下：\n> \n<ImgView title=\"富文本\" url=\"https://4.z.wiki/images/20220408/868adfad725e4891a1ef4f1665e074d0.png\" />\n\n\n更多例子如下：\n\n```shell\nprint \"\u001b[30m A \u001b[31m B \u001b[32m C \u001b[33m D \u001b[0m\"\nprint \"\u001b[34m E \u001b[35m F \u001b[36m G \u001b[37m H \u001b[0m\"\n```\n\n<ImgView title=\"富文本\" url=\"https://8.z.wiki/images/20220408/4c5e43a7339c4d80a9ad50f018710118.png\" />\n\n\n除了以上 8 中基础颜色，大多数终端还支持**加亮**、**粗体**等配色或显示效果，并在原来代码后面多了`;1`这个标志。\n\n1. 亮黑色：`\u001b[30;1m`\n2. 鲜红色：`\u001b[31;1m`\n3. 亮绿色：`\u001b[32;1m`\n4. 亮黄色：`\u001b[33;1m`\n5. 亮蓝色：`\u001b[34;1m`\n6. 亮洋红色：`\u001b[35;1m`\n7. 亮青色：`\u001b[36;1m`\n8. 亮白：`\u001b[37;1m`\n9. 重置：`\u001b[0m`\n\n同理，背景色代码如下：\n\n普通背景色\n\n1. 背景黑色：`\u001b[40m`\n2. 背景红色：`\u001b[41m`\n3. 背景绿色：`\u001b[42m`\n4. 背景黄色：`\u001b[43m`\n5. 背景蓝色：`\u001b[44m`\n6. 背景洋红色：`\u001b[45m`\n7. 背景青色：`\u001b[46m`\n8. 背景白色：`\u001b[47m`\n\n加亮版背景色\n\n1. 背景亮黑色：`\u001b[40;1m`\n2. 背景亮红色：`\u001b[41;1m`\n3. 背景亮绿色：`\u001b[42;1m`\n4. 背景亮黄色：`\u001b[43;1m`\n5. 背景亮蓝色：`\u001b[44;1m`\n6. 背景明亮的洋红色：`\u001b[45;1m`\n7. 背景亮青色：`\u001b[46;1m`\n8. 背景亮白色：`\u001b[47;1m`\n\n\n测试例子一如下：\n```shell\nprint \"\u001b[40m A \u001b[41m B \u001b[42m C \u001b[43m D \u001b[0m\";\nprint \"\u001b[44m A \u001b[45m B \u001b[46m C \u001b[47m D \u001b[0m\";\nprint \"\u001b[40;1m A \u001b[41;1m B \u001b[42;1m C \u001b[43;1m D \u001b[0m\";\nprint \"\u001b[44;1m A \u001b[45;1m B \u001b[46;1m C \u001b[47;1m D \u001b[0m\";\n```\n<ImgView title=\"shell\" url=\"https://3.z.wiki/images/20220408/a66e9aeac6794c28832e2dfac60be5a4.png\" />\n\n测试例子二如下：\n```shell\nfunction showcolors256() {\n local row col blockrow blockcol red green blue\n local showcolor=_showcolor256_${1:-bg}\n local white=\"\033[1;37m\"\n local reset=\"\033[0m\"\n\n echo 16 standard color codes:\n for row in {0..1}; do\n for col in {0..7}; do\n $showcolor $(( row*8 + col )) $row\n done\n echo\n done\n echo\n\n echo 6·6·6 RGB color codes:\n for blockrow in {0..2}; do\n for red in {0..5}; do\n for blockcol in {0..1}; do\n green=$(( blockrow*2 + blockcol ))\n for blue in {0..5}; do\n $showcolor $(( red*36 + green*6 + blue + 16 )) $green\n done\n echo -n \" \"\n done\n echo\n done\n echo\n done\n\n echo 24 grayscale color codes:\n for row in {0..1}; do\n for col in {0..11}; do\n $showcolor $(( row*12 + col + 232 )) $row\n done\n echo\n done\n echo\n}\n\nfunction _showcolor256_fg() {\n local code=$( printf %03d $1 )\n echo -ne \"\033[38;5;${code}m\"\n echo -nE \" $code \"\n echo -ne \"\033[0m\"\n}\n\nfunction _showcolor256_bg() {\n if (( $2 % 2 == 0 )); then\n echo -ne \"\033[1;37m\"\n else\n echo -ne \"\033[0;30m\"\n fi\n local code=$( printf %03d $1 )\n echo -ne \"\033[48;5;${code}m\"\n echo -nE \" $code \"\n echo -ne \"\033[0m\"\n}\n\nshowcolors256\n```\n\n<ImgView title=\"shell show color 256\" url=\"https://3.z.wiki/images/20220413/919d8511629e4d2d999704b1d34b0ee7.png\" />\n\n\n\n其他修饰效果\n\n1. 粗体 `\u001b[1m`\n2. 下划线 `\u001b[4m`\n3. 反转 `\u001b[7m`\n\n#### 光标导航\n\n相比文本修饰转义字符，光标导航相关转义字符更为复杂，\n它允许程序控制光标的位置、删除部分内容等等。\n\n##### 移动光标\n\n基本操作\n\n1. 上：`\u001b[{n}A`\n2. 下：`\u001b[{n}B`\n3. 左：`\u001b[{n}D`\n4. 右：`\u001b[{n}C`\n\n进阶操作\n\n1. 后N行 :`\u001b[{n}E`将光标向下移动到`n`行首\n2. 前N行 :`\u001b[{n}F`将光标向下移动到`n`行首\n3. 设置列 ：`\u001b[{n}G`将光标移动到列`n`\n4. 设置位置 ：`\u001b[{n};{m}H`将光标移动到`n`行列`m`\n5. 保存位置：`\u001b[{s}`保存当前光标位置\n6. 保存位置：`\u001b[{u}`将光标恢复到上次保存的位置\n\n利用光标的上下左右移动，我们可以做一个加载进度效果，代码如下：\n\n###### 初级进度条\n\n```shell\n#!/bin/bash\n\nfor((i=1;i<100;i++))\ndo\n printf \"\u001b[1000D 进度：${i}\";\n sleep 1;\ndone\n```\n\n运行效果如下：\n\n<ImgView title=\"shell loading\" url=\"https://4.z.wiki/images/20220408/46a17eb651684ba49d960f87a4dd7d11.gif\" />\n\n###### 高级进度条\n\n```shell\n#!/bin/bash\ni=0\nstr=\"\"\narry=(\"\\\" \"|\" \"/\" \"-\")\nwhile [ $i -le 100 ]\ndo\n let index=i%4\n printf \"\u001b[1000D[%-100s] %d %c\" \"$str\" \"$i\" \"${arry[$index]}\"\n sleep 0.1\n let i=i+1\n str+=\"#\"\ndone\necho \"\"\n```\n\n运行效果如下：\n\n<ImgView title=\"shell loading\" url=\"https://3.z.wiki/images/20220408/1ceac5fd91294989b9cc7fdd09dffbf0.gif\" />\n\n\n通过不断将光标左移 1000 个字符从而实现后打印的字符覆盖前打印的字符。\n\n\n##### 删除内容\n\n1. 清屏： `\u001b[{n}J` \n\n> `n=0`从光标清除直到屏幕结束\n> \n> `n=1`从光标清除到屏幕开头\n> \n> `n=2`清除整个屏幕\n\n2. 清行： `\u001b[{n}K`\n\n> `n=0`从光标清除到行尾\n> \n> `n=1`从光标清除到行首\n> \n> `n=2`清除整行\n\n\n### 不忘初心\n\n学习完毕，不忘初心，让我们回到最初的问题上，日志中的这些特殊字符到底什么含义呢？\n\n```shell\n2022-04-08 21:48:36[2K[1G[36m⠸[39m [4/43] Installing source-map@^0.5.7\n2022-04-08 21:48:36[2K[1G[36m⠼[39m [4/43] Installing worker-farm@^1.7.0\n```\n\n#### 答案\n\n`[2K`该字符前其实有一个不可见字符`\u001b`(`Esc`字符)，根据上文中的学习资料，\n`\u001b[2K`的含义就是清除整行\n\n`[1G`同理，将光标移动到第一列\n\n`[36m`同理，设置后面的文本样式为青色\n\n如果前端在显示日志的时候能支持这些控制指令的话，那最终效果将和在终端安装依赖类似：安装进度不断在同一行刷新刷新刷新...\n\n<ImgView title=\"shell\" url=\"https://3.z.wiki/images/20220408/1f6b8d5b24e948c29aad2df3035b5e40.gif\" />\n\n\n\n\n<TheEnd />\n: \"学到了学到了👍\",
tech/my-first-post-in-stackoverflow
path is https://playground.z.wiki/comment/list?path=/tech/tls.html
TLS 指纹\n\n<ImgView title=\"TLS 指纹\" url=\"https://z.wiki/autoupload/20240113/o2WU.186X163-image.png\" />\n\n大多数现代网站现已普遍采用 HTTPS，其建立过程涉及服务器与客户端之间进行 TLS 握手。在此握手阶段，双方会相互交换支持的 TLS 版本、加密算法等关键信息。鉴于不同客户端之间存在显著差异，且这些信息通常较为固定，服务器能够利用 TLS 握手的特征数据来区分请求类型，判断是常规用户的浏览器访问还是来自如 Python 等脚本的自动化访问工具。\n\nJA3 是生成 TLS 指纹的一个常用算法。它的工作原理如下：\n\n1. 收集客户端特征\n\n a. 在解析 TLS 握手客户端发送的 ClientHello 报文中获取 SSLVersion 版本、Cipher 客户端支持的加密套件、SSLExtention SSL的扩展内容集合、 EllipticCurve SSL的扩展内容里面的【supported_groups】(CurveP256,CurveP384,CurveP521,X25519)、 EllipticCurvePointFormat SSL的扩展参数里面的【sec_point_formats】(uncompressed,ansiX962_compressed_prime,ansiX962_compressed_char2)\n\n\n```\nSSLVersion,Cipher,SSLExtension,EllipticCurve,EllipticCurvePointFormat\n```\n\n2. 特征举例\n\n```\n769,47-53-5-10-49161-49162-49171-49172-50-56-19-4,0-10-11,23-24-25,0\n```\n\n该特征值可以通过 [Wireshark](https://www.wireshark.org/) 抓包获取\n\n\n<ImgView title=\"TLS 指纹\" url=\"https://6.z.wiki/autoupload/20240113/XiPV.760X1248-image.png\" />\n\n<ImgView title=\"TLS 指纹\" url=\"https://5.z.wiki/autoupload/20240113/o3vv.611X998-image.png\" />\n\n3. 对特征值进行哈希运算，产生 32 位长度的哈希值\n\n ```\n769,47-53-5-10-49161-49162-49171-49172-50-56-19-4,0-10-11,23-24-25,0 --> ada70206e40642a3e4461f35503241d5\n769,4-5-10-9-100-98-3-6-19-18-99,,, --> de350869b8c85de67a350c8d186f11e6\n ```\n\n4. 和已知的哈希值进行对比判断是否为爬虫\n\n a. 如将常见的爬取工具（curl、wget、urllib、httpx、requests、golang）的指纹加入黑名单，从而屏蔽相关爬虫。\n b. 将浏览器的指纹加入白名单，防止误伤。\n c. TLS 指纹可以用作反爬，但是也并非不可伪造（伪造成本高），必要时需要和其他指纹搭配使用。\n d. 想要获取 TLS 指纹需要依赖网络设备或代理服务器或安全网关，应用层很难直接获取。\n\n\n5. 常见工具的指纹（通过 https://tls.browserleaks.com/json 获取的指纹）\n\n\ncurl\n\n```\n{\n \"user_agent\": \"curl/8.1.2\",\n \"ja3_hash\": \"2bab0327a296230f9f6427341e716ea0\",\n \"ja3_text\": \"771,4866-4867-4865-49200-49196-49192-49188-49172-49162-159-107-57-52393-52392-52394-65413-196-136-129-157-61-53-192-132-49199-49195-49191-49187-49171-49161-158-103-51-190-69-156-60-47-186-65-49169-49159-5-4-49170-49160-22-10-255,43-51-0-11-10-13-16,29-23-24-25,0\",\n \"ja3n_hash\": \"89c23ef504c3cc9ccd6580643494edae\",\n \"ja3n_text\": \"771,4866-4867-4865-49200-49196-49192-49188-49172-49162-159-107-57-52393-52392-52394-65413-196-136-129-157-61-53-192-132-49199-49195-49191-49187-49171-49161-158-103-51-190-69-156-60-47-186-65-49169-49159-5-4-49170-49160-22-10-255,0-10-11-13-16-43-51,29-23-24-25,0\",\n \"akamai_hash\": \"64a832f547be33249bf4d33e8a46c5dc\",\n \"akamai_text\": \"3:100;4:10485760;2:0|1048510465|0|m,s,a,p\"\n}\n\n```\n\n\nwget\n\n```\n{\n \"user_agent\": \"Wget/1.21.1\",\n \"ja3_hash\": \"b9c865e0f840d0946a3b80a0e142610c\",\n \"ja3_text\": \"771,4866-4867-4865-49196-49200-163-159-52393-52392-52394-49327-49325-49315-49311-49245-49249-49239-49235-49195-49199-162-158-49326-49324-49314-49310-49244-49248-49238-49234-49188-49192-107-106-49267-49271-196-195-49187-49191-103-64-49266-49270-190-189-49162-49172-57-56-136-135-49161-49171-51-50-69-68-157-49313-49309-49233-156-49312-49308-49232-61-192-60-186-53-132-47-65-255,0-11-10-35-22-23-49-13-43-45-51,29-23-30-25-24,0-1-2\",\n \"ja3n_hash\": \"0be23e71d7ae7d0c839040ef3ef66e19\",\n \"ja3n_text\": \"771,4866-4867-4865-49196-49200-163-159-52393-52392-52394-49327-49325-49315-49311-49245-49249-49239-49235-49195-49199-162-158-49326-49324-49314-49310-49244-49248-49238-49234-49188-49192-107-106-49267-49271-196-195-49187-49191-103-64-49266-49270-190-189-49162-49172-57-56-136-135-49161-49171-51-50-69-68-157-49313-49309-49233-156-49312-49308-49232-61-192-60-186-53-132-47-65-255,0-10-11-13-22-23-35-43-45-49-51,29-23-30-25-24,0-1-2\",\n \"akamai_hash\": \"\",\n \"akamai_text\": \"\"\n}\n\n```\n\n\n\nchrome\n\n```\n\n{\n \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\",\n \"ja3_hash\": \"23a162006f0b85619ad19cb155e69511\",\n \"ja3_text\": \"771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,23-51-43-0-10-16-5-11-13-65281-18-27-17513-45-65037-35,29-23-24,0\",\n \"ja3n_hash\": \"473f0e7c0b6a0f7b049072f4e683068b\",\n \"ja3n_text\": \"771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-5-10-11-13-16-18-23-27-35-43-45-51-17513-65037-65281,29-23-24,0\",\n \"akamai_hash\": \"52d84b11737d980aef856699f885ca86\",\n \"akamai_text\": \"1:65536;2:0;4:6291456;6:262144|15663105|0|m,a,s,p\"\n}\n\n\n```\n\n\n\nMicrosoft edge\n\n```\n{\n \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0\",\n \"ja3_hash\": \"f2c97279a85d68a652296450ecdb203d\",\n \"ja3_text\": \"771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,13-35-0-45-65037-18-11-10-51-65281-27-43-17513-5-16-23,29-23-24,0\",\n \"ja3n_hash\": \"473f0e7c0b6a0f7b049072f4e683068b\",\n \"ja3n_text\": \"771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-5-10-11-13-16-18-23-27-35-43-45-51-17513-65037-65281,29-23-24,0\",\n \"akamai_hash\": \"52d84b11737d980aef856699f885ca86\",\n \"akamai_text\": \"1:65536;2:0;4:6291456;6:262144|15663105|0|m,a,s,p\"\n}\n\n```\n\n\n\n\n目前主流的云服务商均支持基于 TLS 指纹的 WAF，比如：[阿里云](https://playground.z.wiki/search/page?keyword=%E9%98%BF%E9%87%8C%E4%BA%91)、Akamai。\n\n\n可以通过以下工具查看当前客户端的 TLS 指纹\n1. https://tls.browserleaks.com/json\n2. https://browserleaks.com/tls\n3. https://www.ssllabs.com/ssltest/viewMyClient.html\n4. Wireshark（获取特征值，需要自己去计算 TLS 指纹）\n\nPS：不同网站服务端获取到的密码套件（Cipher Suites）不同，因此可能看到不同网站给出了不同的 TSL 指纹。\n\n<ImgView title=\"TSL指纹\" url=\"https://z.wiki/autoupload/20240113/fFbL.128X433-image.png\" />\n\n
tech/tls
path is https://playground.z.wiki/comment/list?path=/tech/css-to-jss.html
CSS 转 JSS\n\n\n<css-to-jss />\n
tech/css-to-jss
path is https://playground.z.wiki/comment/list?path=/tech/index.html
技术文章\n\n<LastPost :random=\"true\" prefix=\"/tech\" :number=\"10\"/>: \"👍\",
tech/index
path is https://playground.z.wiki/comment/list?path=/tech/chkconfig.html
chkconfig\n\n腾讯云上的服务器总有需要重启的时候，每次重启都会需要手动开启一堆服务和应用，\n如`nginx`、聊天室、博客对应的后台`Java`服务、`node`服务等等，\n针对这种情况，之前的文章中介绍过如何通过`crontab`、`pm2`去解决\n（[crontab](https://z.wiki/tech/crontab.html#%E7%94%A8%E6%88%B7%E4%BB%BB%E5%8A%A1)），\n这次介绍下`chkconfig`。\n\n### chkconfig 是什么\n\n`chkconfig`是用来管理系统初始化期间启动服务的程序\n\n通过`man`手册可以更具体的了解`chkconfig`\n\n```text\nCHKCONFIG(8) System Manager's Manual CHKCONFIG(8)\n\nNAME\n chkconfig - updates and queries runlevel information for system ser‐\n vices\n\nSYNOPSIS\n chkconfig [--list] [--type type] [name]\n chkconfig --add name\n chkconfig --del name\n chkconfig --override name\n chkconfig [--level levels] [--type type] [--no-redirect] name\n <on|off|reset|resetpriorities>\n chkconfig [--level levels] [--type type] [--no-redirect] name\n\nDESCRIPTION\n chkconfig provides a simple command-line tool for maintaining the\n /etc/rc0.d /etc/rc1.d /etc/rc2.d /etc/rc3.d /etc/rc4.d /etc/rc5.d /etc/rc6.d directory hierarchy by relieving system administrators\n of the task of directly manipulating the numerous symbolic links in\n those directories.\n```\n\n### 启动基础知识\n\n当`Linux`机器启动时，出现的第一个程序时`init`，再由`init`执行\n`/etc/inittab`下的任务。\n\n\n未完待续...: \"烂尾+1\",
tech/chkconfig
path is https://playground.z.wiki/comment/list?path=/tech/docker-tech.html
---\nmeta:\n - name: description\n content: docker 技术 详解\n - name: keywords\n content: docker 技术 详解\n---\n\n# docker 技术\n\n前文[docker](https://z.wiki/tech/docker.html#docker)中简单介绍过`docker`的用法，这里来深入了解讲述下`docker`的技术内幕\n\n\n<ImgView width=\"200px\" title=\"docker\" url=\"https://z.wiki/autoupload/20230501/VkEH.2160X3840-image.png\" />\n\n### 容器生态系统\n\n一谈到容器，大家往往有一个错误理解，`docker`就是容器、容器就是`docker`。\n然而非也非也，`docker`确实几乎已经成了容器的代名词了，不过`docker`其实只是容器的一种（当然了，最重要的那一种）。\n是`docker`将容器技术发扬光大的。\n\n容器生态系统大致来看的话有三部分：\n\n\n容器核心技术、容器平台技术、容器支持技术。\n\n<ImgView title=\"docker\" url=\"https://5.z.wiki/autoupload/20230803/8EJ6.664X1334-image.png\" />\n\n\n### 容器核心技术\n\n容器核心技术指的是让`Container`在宿主机上运行所必须得技术，主要包括如下技术：\n\n1. 容器规范\n2. 容器运行时（`runtime`）\n3. 容器管理工具\n4. 容器定义工具\n5. 容器`Registry`\n6. 容器 `OS`\n\n#### 容器规范\n\n前面说了，容器≠`docker`，还有很多其他容器，比如：`CoreOS`的`rkt`，为了统一容器标准、\n保证容器的健康可持续发展，由`Docker`、`CoreOS`、`Google`等诸多公司成立了`OCI`组织，\n其目的是指定开放的容器规范。\n\n\n> `OCI` 全称 `Open Container Initiative`\n>\n> `OCI` 官网：[OCI](https://opencontainers.org/)\n\n目前`OCI`已经发布了两个规范：`runtime spec`与`image format spec`，基于这两个规范，不同容器开发商\n开发的容器能够在不同的`runtime`上进行运行与部署，保证了容器的可移植性、兼容性。\n\n\n\n\n#### 容器运行时（`runtime`）\n\n`runtime`是`Container`运行所需要的全部资源，`runtime`就是`Container`运行的环境。\n\n举个栗子：\n\n<ImgView title=\"docker\" url=\"https://6.z.wiki/autoupload/20230803/xBo8.188X185-image.png\" />\n\n\n如果把`java`程序开做`Container`的话，`JVM`就是该`java`程序的`runtime`。\n\n目前主要的容器`runtime`有：`lxc`、`runc`、`rkt`三种。\n\n> `lxc`是老牌的容器`runtime`，`runc`是`docker`自行研发的符合`OCI`规范的容器`runtime`,\n> `rkt`是`CoreOS`开发的`runtime`。\n\n\n\n#### 容器管理工具\n\n\n#### 容器定义工具\n\n\n#### 容器`Registry`\n\n\n#### 容器 `OS`\n\n\n\n\n### 容器平台技术\n\n\n\n\n\n\n\n\n### 容器支持技术\n\n
tech/docker-tech
path is https://playground.z.wiki/comment/list?path=/tech/neovim.html
---\nmeta:\n - name: description\n content: neovim 配置 vim 开发 程序员 开发神器\n - name: keywords\n content: neovim 配置 vim 开发 程序员 开发神器\ntags: [\"vim\", \"neovim\", \"上古编辑器\"]\n---\n\n# neovim 配置体验\n\n### 背景\n\n使用`vim`（`neovim`）也有三四年了，在此记录下常用的一些插件\n\n顺便将相关配置同步到 `github `上，方便后续换电脑的时候进行配置同步\n\n### neovim 简介\n\n截止目前（2022-02-03），`neovim `在 `github `上已经有了 50K 的 `star `，而 `vim `具有 26K`star` \n\n<ImgView title=\"neovim\" url=\"https://2.z.wiki/images/20220203/933d2b5126eb4e888ffbd54a4b937797.png\" />\n\n<ImgView title=\"neovim\" url=\"https://2.z.wiki/images/20220203/6c435b23da3747e19681934ebdbe562e.png\" />\n\n`Neovim `是 `Vim `的一个雄心勃勃的重构。主要目标是：\n\n1. 重构代码以改善维护\n2. 实施新的高级功能\n3. 展示一个更好、更强大的插件系统\n4. 开放的开发模式，随时接受贡献，接受的标准也很明确。\n\n具有以下特性\n\n1. 现代图形用户界面\n2. 从任何语言访问`API`，包括C/C++, C#, `Clojure`, `D`, ` Elixir`, ` Go`, ` Haskell`, ` Java`, ` JavaScript`/`Node.js`, ` Julia`, ` Lisp`, `Lua`, `Perl`, ` Python`, ` Racket`, ` Ruby`, `Rust` \n3. 嵌入式、可编写脚本的终端仿真器\n4. 异步作业控制\n5. 多个编辑器实例之间的共享数据（`shada`）。\n6. 支持`XDG`基础目录\n7. 与大多数`Vim`插件兼容，包括`Ruby`和`Python`插件\n\n[neovim 官网](https://neovim.io/)\n\n### 安装\n\n\n`neovim` 支持多种安装方式，如：直接下载、包管理器安装、源码安装等诸多方式\n\n本人所用系统为`CentOS 8`，选择通过`yum`安装\n\n安装命令如下\n\n```shell\nyum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\nyum install -y neovim python3-neovim\n```\n\n<ImgView title=\"neovim\" url=\"https://2.z.wiki/images/20220203/50a8b21c9aed4349af93e5a52a8cb6b2.gif\" />\n\n<ImgView title=\"neovim\" url=\"https://4.z.wiki/images/20220203/f8c164e653644520a180a475421236d4.gif\" />\n\n\n此时，已经`nvim`使用`neovim`了，为方便期间，设置别名，操作如下：\n\n```shell\necho \"alias vim=\\"nvim\\"\" >> ~/.bashrc\n```\n\n到此，通过执行`type vim`能看到 `vim`已经被映射到了`nvim`，方便后续使用`nvim`\n\n### 包管理器\n\n#### vim-plug\n\nvim-plug简单理解就是一个容器，里面可以配置很多插件，然后使用命令让它自己去下载，然后配置到neovim中去\n\n官网地址：[github vim-plug](https://github.com/junegunn/vim-plug)\n\n使用方式如下：进入命令模式，执行 PlugInstall 即可安装所配置的插件\n![](https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif)\n\n### 常用插件\n\n单有`neovim`还不够，其强大的生态更是不可获取的，下面是我常用的插件以及配置\n\n#### FZF (fuzzy finder)\n\n`FZF `是一款使用 `GO `语言编写的交互式的 `Unix `命令行工具。可以用来查找任何 列表 内容，文件、`Git `分支、进程等。所有的命令行工具可以生成列表输出的都可以再通过管道 `pipe` 到 `fzf `上进行搜索和查找\n\n优点如下：\n1. GO 语言编写，编译完生成可执行文件没有任何依赖\n2. 搜索/查找速度飞快\n3. 功能全面/可视化界面体验很棒\n4. 周边插件丰富 (vim, tmux, fuzzy auto-completion)\n\n链接：[fzf github](https://github.com/junegunn/fzf)\n\n##### 安装 fzf\n\n在`centos 8`下只能通过源码安装\n\n```shell\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n~/.fzf/install\n```\n\n无奈，国内的机器没法访问`github`，只能曲线下载了，从`gitee`找到对应的项目 [gitee fzf](https://gitee.com/yzymickey/fzf?_from=gitee_search)\n\n<ImgView title=\"neovim\" url=\"https://2.z.wiki/images/20220203/ac739d17ec2f4797ac5badbcbae8251b.png\" />\n\n<ImgView title=\"neovim\" url=\"https://2.z.wiki/images/20220203/892222cc5823444ebf5f0409ccb3a174.png\" />\n\n\n\n```shell\ngit clone --depth 1 https://gitee.com/yzymickey/fzf.git ~/.fzf\n~/.fzf/install\n```\n\n\n安装后需重启终端或重新加载`bashrc`文件，重启后即可输入`fzf`进行文件查找了\n\n\n```shell\n# 重新加载 bashrc\nsource ~/.bashrc\n```\n\nFZF 命令行使用效果如下：\n\n<ImgView title=\"neovim\" url=\"https://5.z.wiki/images/20220203/a6a3e01357eb4752aa76d1c5f7265cf0.gif\" />\n\n截至目前我们已经安装了了`fzf`，但是尚未和`nvim`建立任何整合，整合则需要借助 `fzf.vim` 插件\n\n\n##### 安装 fzf.vim\n\n[github fzf.vim](https://github.com/junegunn/fzf.vim)\n\n通过 `vim-plug` 插件管理器进行安装\n\n在 `init.vim` 文件中增加插件\n\n```shell\nPlug 'junegunn/fzf', { 'do': { -> fzf#install() } }\nPlug 'junegunn/fzf.vim'\n```\n\n运行效果如下呐\n\n1. 文件搜索\n\n<ImgView title=\"neovim 文件搜索\" url=\"https://4.z.wiki/images/20220203/b25e996392df47369cc92dbbab85fc7f.gif\" />\n\n此外，通过设置`iTerms`的按键映射，当按下`Ctrl+P`的时候自动触发`:Files`命令，实现文件查找的快捷键\n\n其他配置：\n\n推荐使用 [fd](https://github.com/sharkdp/fd) 替换默认的查找命令，可以在`bashrc`中增加如下配置\n```shell\nexport FZF_DEFAULT_COMMAND=\"fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules} --hidden --type f\"\n```\n\n\n2. 内容搜索\n\n`fzf.vim` 提供了 `:Ag` 命令，可以进行文件内容搜索，但是在此之前需要安装[ag](https://github.com/ggreer/the_silver_searcher)\n\n运行效果如下：\n\n<ImgView title=\"neovim 文件内容搜索\" url=\"https://7.z.wiki/images/20220203/fbc3b5b87e5b467392d4942ccc48c154.gif\" />\n\n\n通过 `iTerms` 设置快捷键 `Command+Shift+F`进行全局搜索，效果杠杆的~\n\n\n#### nerd-tree\n\n`nerd-tree` 是`vim`中的文件管理插件\n\n<ImgView title=\"neovim nerd-tree\" url=\"https://4.z.wiki/images/20220203/76de3d0cf73649a496d708f801353b6c.png\" />\n\n安装：\n```shell\nPlug 'preservim/nerdtree'\n```\n\n在`init.vim`中可以设置键映射，通过 `F2`即可打开 `NerdTree`\n\n```shell\nmap <F2> :NERDTreeToggle<CR>\n```\n\n\n### 键盘映射\n\n该配置写在`init.vim`中\n\n```shell\n\" 窗口切换快捷键\"\nmap <Leader>wc <C-w><C-c><Esc>\nmap <Leader>ws <C-w><C-s><Esc>\nmap <Leader>wv <C-w><C-v><Esc>\nmap <Leader>ww <C-w><C-w><Esc>\nmap <Leader>wh <C-w><C-h><Esc>\n\n\" 保存快捷键\nmap <Leader>s :w<CR>\n\n```\n\n\n`init.vim` 配置连接 [github](https://github.com/yihuaxiang/neovim-config/blob/main/neovim_init.vim)\n\n\n### 参考链接\n\n[neovim](https://neovim.io/)\n\n[vim-plug](https://vimawesome.com/plugin/vim-plug-already-like-death)\n\n[Vim 到底可以配置得多漂亮?](https://www.zhihu.com/question/26248191/answer/2987005687)\n: \"回复:\"vim 很难用好。不入用idea\n\"\n\n------------\n\n不如\",\n: \"vim 很难用好。不入用idea\n\",
tech/neovim
path is https://playground.z.wiki/comment/list?path=/tech/crontab.html
---\nmeta:\n - name: description\n content: linux crontab 定时任务 pm2 任务管理 守护进程 任务调度\n - name: keywords\n content: linux crontab 定时任务 pm2 任务管理 守护进程 任务调度\ntags: [\"crontab\", \"定时任务\", \"任务调度\"]\n---\n\n# crontab\n\n> 原文连接：[snippets crontab](https://snippets.z.wiki/#!./snippets/shell/crontab/)\n\n`centos 8`默认已安装`crontab`，通过`crontab`可以设置周期性调度任务、启动时任务。\n\n`crontab`中的任务分为用户任务，系统级任务。\n\n### 用户任务\n\n查看用户任务\n```shell\ncrontab -l\n```\n\n编辑用户任务\n```shell\ncrontab -e\n```\n\n清空任务\n```shell\ncrontab -r\n```\n\n注：用户任务配置在目录`/var/spool/cron`下\n\n\n### 系统级任务\n系统级任务配置在`/etc/crontab`中，可配置定时任务，也可配置系统启动时需要执行的任务\n\n> 某些任务需要`root`账号启动，可配置在系统级任务中\n> 如：`nginx`默认占用`80`、`443`等特殊端口，而`centos`中，`1000`以内的端口需要`root`账号才能使用\n\n```shell\nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=root\n\n# For details see man 4 crontabs\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# | .------------- hour (0 - 23)\n# | | .---------- day of month (1 - 31)\n# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...\n# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# | | | | |\n# change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work user-name command to be executed\n\n@reboot root /home/path/start.sh # 系统启动时执行的任务\n```\n\n### 查看日志\n\n`crontab` 日志目录为 `/var/log/cron`\n\n\n### 其他类似方案\n\n#### pm2\n\n`pm2`是基于`nodejs`的进程管理工具，可以配合`shell`执行周期性任务，\n也可以用来管理开机自启任务（通过保存进程状态，在开机时恢复进程状态，这一点上比`crontab`好用）。\n\n##### 自动部署服务\n\n编写`shell`脚本，从`github`拉去代码、编译构建、部署到`nginx`中\n```shell\ncd path-of-project\ngit pull\n\nnpm i\nnpm run build\n\nmv -f dist/* path-of-nginx\n\nsleep 60 # 这里 sleep 一分钟是为了避免 pm2 过于频繁的执行该脚本\n```\n\n通过`pm2`持续性的运行该脚本\n```shell\npm2 start shell-path -- -option value\n\n# 或不带参数\n\npm2 start shell-path\n```\n\n如果需要开机自动启动该脚本，可以通过`pm2 save`保存进程状态，开机便会自动运行。\n\n\n> 注：在使用 `pm2 save`之前需要确保`pm2`本身能够开机启动，执行以下命令并根据提示设置自启动`pm2 startup`\n\n##### 监控\n\n1. 终端监控\n\n```shell\npm2 monit\n```\n\n通过执行`pm2 monit`可直接在终端打开监控。\n\n<ImgView title=\"pm2 终端监控\" url=\"https://2.z.wiki/autoupload/2022-07-28/e31fbb29ab28463f8417d03e3c2f0b72.image.png\" />\n\n2. 在线地址\n\n```shell\npm2 plus\n```\n\n通过执行`pm2 plus`可开启在线监控，但该服务为收费服务，默认提供`14`天体验时间。\n\n<ImgView title=\"pm2 在线监控\" url=\"https://2.z.wiki/autoupload/2022-07-28/d4b8b27aba294846b94bf2c8af4b9de4.image.png\" />\n\n\n#### chkconfig\n\n\n参考文档： [chkconfig](https://www.linuxjournal.com/article/4445)\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/angry.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/fan.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/fan.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/fan.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/fan.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/awkward.png\" /> \",
tech/crontab
path is https://playground.z.wiki/comment/list?path=/tech/360zz.html
360 站长\n\n### 地址\n\n<ImgView title=\"360 站长\" url=\"https://zhanzhang.so.com/sitetool/site_manage\" />\n\n### 管理网站\n\n进入后\"添加网站\"，添加后需要进行验证\n\n常见的有3中验证方式\n\n1. 代码验证\n\n在首页中增加`meta`标签\n\n<ImgView title=\"360站长\" url=\"https://1.z.wiki/images/20211115/e44c9d978fb94b9f82587039ec0ef2a0.png\" />\n\n\n3. 文件验证\n\n上传特定的文件到服务器中\n\n<ImgView title=\"360站长\" url=\"https://1.z.wiki/images/20211115/c9436da822714b76aaa478d6c47a8a9f.png\" />\n\n\n\n4. CNAME验证\n\n添加`CNAME`记录\n\n<ImgView title=\"360站长\" url=\"https://1.z.wiki/images/20211115/5ec5ed73ce6a42b7b6f0813c6b15c1bc.png\" />\n\n\n### 自动收录\n\n360 站长也提供了多种收录方式\n\n1. 手动提交\n手动提交：即手动通过表单逐个提交，适用于网址较少的情况\n2. \n<ImgView title=\"360站长\" url=\"https://4.z.wiki/images/20211115/3d6820d3d9624c4f85602b6411279fa0.png\" />\n\n2. `sitemap`提交\n\n`sitemap` 适用于网址较多的情况，可以将网址统一到同一个文件中批量提交\n\n<ImgView title=\"360站长\" url=\"https://1.z.wiki/images/20211115/7450d4fdc50346d2bcc6b977ae88bd7b.png\" />\n\n\n4. 自动提交\n\n360 站长并没有像百度站长那样提供`API`，而是提供了前端脚本，每次页面被浏览的时候自动进行提交，优势是：无服务器依赖，缺点是：网站更新后只有访问到了才能更新，各有利弊\n\n<ImgView title=\"360站长\" url=\"https://1.z.wiki/images/20211115/c000da1d55a44826ae9a01c0c6e16da2.png\" />: \"写的挺详细的\n\",\n: \"写的挺详细的\",
tech/360zz
path is https://playground.z.wiki/comment/list?path=/tech/git.html
---\nmeta:\n - name: description\n content: git 版本控制 别名 配置 安装器\n - name: keywords\n content: git 版本控制 别名 配置 安装器\n---\n# git 配置\n\n> `git` 配置文件为：`~/.gitconfig`，下文涉及到的配置便在该文件中\n\n### git alias 配置\n\n有一个小技巧可以使你的 `Git `体验更简单、容易、熟悉：别名。 \n\n`Git `并不会在你输入部分命令时自动推断出你想要的命令。 如果不想每次都输入完整的 `Git `命令，可以通过 `git config` 文件来轻松地为每一个命令设置一个别名。 这里有一些例子你可以试试：\n\n```shell\nbr = branch\ncm = commit\nck = checkout\n```\n\n这意味着，当要输入 `git commit` 时，只需要输入 `git cm` 随着你继续不断地使用 Git，可能也会经常使用其他命令，所以创建别名时不要犹豫。\n\n可以看出，`Git` 只是简单地将别名替换为对应的命令。 然而，你可能想要执行外部命令，而不是一个 `Git `子命令。 如果是那样的话，可以在命令前面加入 ! 符号。 如果你自己要写一些与 `Git `仓库协作的工具的话，那会很有用。 我们现在演示将 `git alias` 定义为 `git 查看别名`的 的别名：\n\n```shell\nalias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /\n```\n\n我的完整别名配置如下\n\n```shell\n# 通过更友好的界面来查看日志\nlg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\n\n# 简化 git status 的长度\nst = status\n\n# 使用 vimdiff 进行代码对比\ndft = difftool -t vimdiff\n\n# 简化 git 子命令 长度\nbr = branch\ncm = commit\nck = checkout\ncp = cherry-pick\ncr = cherry -v\npom = pull origin master\n\n# 于创建了查看别名的子命令，通过调用 git config 实现\nalias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /\n\n```\n\n<ImgView title=\"git alias 配置\" url=\"https://z.wiki/images/20220204/da2b9ec480b74e9e95ecfd5d59572d7a.png\" />\n\n\n### git 其他配置\n\n另外，相较`git`内置对比工具，`vimdiff`更为强大、便利，一下配置是将对比工具进行了替换\n\n```shell\n[merge]\n tool = vimdiff\n[diff]\n tool = vimdiff\n```\n\n<ImgView title=\"git 其他配置\" url=\"https://z.wiki/images/20220204/17be65c295f44100bb7802a6f43d8ec0.png\" />\n\n\n\n### git 配置安装器\n\n如果想使用我以上的配置，可以直接想配置复制到`.gitconfig`文件中\n\n另外，我也提供了安装工具，通过运行安装工具可以快速配置好以上功能\n\n#### 安装 git-config-installer\n\n安装器（git-config-installer）只负责提供一个可执行程序，安装后还需手动执行该可执行程序（`git_config_install` 命令）\n\n```shell\nnpm install -g git-config-installer\n```\n\n#### 安装 git 配置\n\n运行 `git_config_install` 命令\n\n````shell\ngit_config_install\n````\n\n\n<ImgView title=\"安装 git 配置\" url=\"https://4.z.wiki/images/20220204/0639584cfc374fcfb613b042f6363780.gif\" />\n\n到此，`.gitconfig` 文件中已添加好上文提到的别名，可以欢乐的使用别名啦~~~\n\n<ImgView title=\"git\" url=\"https://z.wiki/images/20220204/10d124cd03274d1c894dee857e5203c0.png\" />\n\n\n\n<ImgView title=\"安装 git 配置\" url=\"https://z.wiki/images/20220204/26dc7d023d384894827a35c6be8a1e85.gif\" />\n
tech/git
path is https://playground.z.wiki/comment/list?path=/tech/baota.html
宝塔 linux 面板\n\n宝塔`linux`面板是个好东西，在`docker`里面体验了下，方便很多。\n\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://2.z.wiki/autoupload/20230131/LH4e.168X286-image.png\" />\n\n不过，已部署项目的系统中无法使用。\n\n```bash\n为了您的正常使用，请确保使用全新或纯净的系统安装宝塔面板，不支持已部署项目/环境的系统安装\n```\n\n\n### 一键安装环境\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://1.z.wiki/autoupload/20230131/57eO.988X1332-image.png\" />\n\n### 系统监控\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://2.z.wiki/autoupload/20230131/j2Kd.1312X2298-image.png\" />\n\n### 安全防护\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://3.z.wiki/autoupload/20230131/4WDl.954X2298-image.png\" />\n\n### 文件管理\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://4.z.wiki/autoupload/20230131/Ovsy.654X2304-image.png\" />\n\n\n### 软件商店\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://5.z.wiki/autoupload/20230131/vwJL.1418X2282-image.png\" />\n\n### 站点管理\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://6.z.wiki/autoupload/20230131/hcsP.1062X2292-image.png\" />\n\n### 数据库管理\n\n<ImgView title=\"宝塔 linux 面板\" url=\"https://7.z.wiki/autoupload/20230131/koxM.692X2506-image.png\" />
tech/baota
path is https://playground.z.wiki/comment/list?path=/tech/glm-130b.html
GLM-130B\n\nhuggingface 体验地址: [huggingface](https://huggingface.co/spaces/THUDM/GLM-130B)\n\n### 摘要：何为 GLM-130B？\n\n`GLM-130B` 是一个开源开放的双语（中文和英文）双向稠密模型，拥有 `1300` 亿个参数，模型架构采用通用语言模型（`GLM`）。\n它旨在支持在**一台 A100（40G change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 8）** 或 **V100（32G change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 8）服务器**上对千亿规模的参数进行推理。\n截至 2022 年 7 月 3 日，`GLM-130B` 已经对超过 4000 亿个文本标识符（中文和英文各 2000 亿）进行了训练，它有以下独特优势：\n\n* **双语**：同时支持中文和英文。 notfound.md **任务表现（英文）**： 在 `LAMBADA` 上优于 GPT-3 175B（+4.0%）、OPT-175B（+5.5%）和 BLOOM-176B（+13.0%），在 MMLU 上略优于GPT-3 175B（+0.9%）。\n* **任务表现（中文）**：在 7 个零样本 CLUE 数据集（+24.26%）和 5 个零样本 FewCLUE 数据集（+12.75%）上明显优于 ERNIE TITAN 3.0 260B。\n* **快速推理**：支持用一台 A100 服务器使用 [SAT](https://github.com/THUDM/SwissArmyTransformer) 和 [FasterTransformer](https://github.com/NVIDIA/FasterTransformer) 进行快速推理（速度最高可达2.5倍）。\n* **可复现性**：所有的结果（超过30个任务）都可以用我们开源的代码和模型参数轻松复现。\n* **多平台**：支持在 NVIDIA、Hygon DCU、Ascend 910 和 Sunway 处理器上进行训练与推理（代码即将开源）。\n\n由于工作需要，尝试进行部署`GLM-130B`模型，官网：[GLM-130B](https://github.com/THUDM/GLM-130B)\n\n\n### 申请机器\n\n支持在一台 `A100`（`40G change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 8`） 或 `V100`（`32G change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 8`）服务器上对千亿规模的参数进行推理\n\n\n`A100` 机器，`250`元每小时，一个月约：`18W`,\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/Mo3u.170X1774-image.png\" />\n\n`V100` 机器，`157`元每小时，一个月大约：`11W`\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/VMp1.170X1770-image.png\" />\n\n预算有限，就选`V100`机器吧\n\n`1.5T` 的硬盘（模型大小`260G`，需要分包下载，下载后将模型聚合成一个压缩文件，再进行解压，\n所以模型需要 `260 change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 3 G`的空间）\n\n\n### 登录机器\n\n`8`个显卡\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/xnpS.1674X1314-image.png\" />\n\n`96`核`CPU`, `724G`内存，这么牛逼的机器，我还是第一次体验\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/QJlJ.966X2066-image.png\" />\n\n操作系统：`centos 7.9`\n\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/BThh.195X258-image.png\" />\n\n\n### 安装必要依赖\n\n```shell\nyum update -y\nyum install dnf -y\ndnf groupinstall \"Development Tools\" -y\ndnf install zlib-devel -y\nyum install libffi-devel -y\nyum install bzip2-devel -y\nyum install openssl-devel -y\nyum install libX11 -y\nyum install libXext -y\nyum install sqlite-devel -y\nyum install libsqlite3-dev -y\nyum install axel -y\nyum install epel-release -y\nyum install aria2 -y\n```\n\n此外，`GLM-130B`运行需要如下环境：\n\n`Python 3.9+` / `PyTorch 1.10+` / `DeepSpeed 0.6+` / `Apex`（需要安装包含 `CUDA` 和 `C++` 扩展的版本，参考资料）\n\n由于`centos 7.9` 默认自带 `python 2.7` `python3.6`所以需要更新`python`版本，这里我选择使用`miniconda`进行环境管理。\n\n\n[`miniconda` 官网](https://docs.conda.io/en/latest/miniconda.html)\n\n\n\n\n安装流程：\n\n```shell\nwget https://z.wiki/autoupload/20230606/gI1w.Miniconda3-latest-Linux-x86_64.sh\nsh gI1w.Miniconda3-latest-Linux-x86_64.sh\nconda -V\n```\n\n\n\n\n### 创建 python3.9 运行环境\n\n\n```shell\nconda create -n py39 python=3.9\n```\n\n查看环境\n\n```shell\nconda env list\n```\n\n切换环境\n\n```shell\nconda activate py39\n```\n\n### 安装 apex\n\n```shell\ncd ~\ngit clone https://github.com/NVIDIA/apex\ncd apex\npip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./\n```\n\n😅报错了。。。。\n\n\n```shell\n RuntimeError: Cuda extensions are being compiled with a version of Cuda that does not match the version used to compile Pytorch binaries. Pytorch binaries were compiled with Cuda 11.7.\n In some cases, a minor-version mismatch will not cause later errors: https://github.com/NVIDIA/apex/pull/323#discussion_r287021798. You can try commenting out this check (at your own risk).\n error: subprocess-exited-with-error\n\n × Running setup.py install for apex did not run successfully.\n │ exit code: 1\n ╰─> See above for output.\n```\n\n从提示中可以看出`Pytorch`中要求`Cuda 11.7`，那机器上的`Cuda`是什么版本呢？,执行`nvcc -V`：\n\n\n\n```shell\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2021 NVIDIA Corporation\nBuilt on Wed_Jul_14_19:41:19_PDT_2021\nCuda compilation tools, release 11.4, V11.4.100\nBuild cuda_11.4.r11.4/compiler.30188945_0\n```\n\n果然，二者不匹配了。那就安装`Cuda 11.7`吧，从英伟达官网就能找到安装脚本：\n\n<ImgView title=\"130b\" url=\"https://z.wiki/autoupload/20230606/f9jw.2496X2822-image.png\" />\n\n\n\n```shell\nwget https://developer.download.nvidia.com/compute/cuda/11.7.0/local_installers/cuda-repo-rhel7-11-7-local-11.7.0_515.43.04-1.x86_64.rpm\nrpm -i cuda-repo-rhel7-11-7-local-11.7.0_515.43.04-1.x86_64.rpm\nyum clean all\nyum -y install nvidia-driver-latest-dkms cuda\nyum -y install cuda-drivers\n```\n\n到此，`Cuda 11.7`已安装完成，安装路径：`/usr/local/cuda-11.7`,通过设置`CUDA_HOME`这个环境变量后继续安装依赖：\n\n\n\n```shell\nexport CUDA_HOME=/usr/local/cuda-11.7/\npip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./\n```\n\n😅+1，还得升级`g++`，搞起！！别的本事没有，搞这些还是有点经验的！\n\n```shell\n raise RuntimeError(\n RuntimeError: The current installed version of g++ (4.8.5) is less than the minimum required version by CUDA 11.7 (6.0.0). Please make sure to use an adequate version of g++ (>=6.0.0, <12.0).\n error: subprocess-exited-with-error\n```\n\n#### 升级GCC\n\n```shell\nyum install centos-release-scl\nsudo yum install devtoolset-8-gcc*\nscl enable devtoolset-8 bash\ngcc -v\n\n# 注意：以上操作只对本次会话有效，重启会话后还是会变回原来的GCC版本\n```\n\n\n参考文档：[简书](https://www.jianshu.com/p/5bbd5219e79d)\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/HXSS.1578X1978-image.png\" />\n\n到此，继续安装`apex`未搞定的步骤即可安装成功。\n\n```shell\npip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./\n```\n\n\n\n### 下载GLM-130B源码\n\n```shell\ngit clone https://github.com/THUDM/GLM-130B.git\n```\n\n安装依赖\n\n```shell\ncd GLM-130B\npip install -r requirements.txt\n```\n\n<ImgView title=\"GLM-130B\" url=\"https://1.z.wiki/autoupload/20230606/G0XY.1396X2072-image.png\" />\n\nps:百兆带宽，下载速度真快！！\n\n<ImgView title=\"百兆带宽，下载速度真快！！\" url=\"https://z.wiki/autoupload/20230606/09H1.191X174-image.png\" />\n\n如果下载过程慢的话也可以尝试切换到国内其他源\n\n```shell\n# 豆瓣源\npip install -r requirements.txt -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n\n# 阿里云源\npip install -r requirements.txt -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com\n```\n\n\n\n### 下载模型\n\n申请下载 `GLM-130B` 的模型`checkpoint`，目前需要申请才能下载，[申请地址](https://models.aminer.cn/glm/zh-CN/download/GLM-130B)\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/9DVX.1320X1846-image.png\" />\n\n\n申请后很快便会收到邮件，按邮件里的流程下载即可\n\n注：模型较大，下载比较费时间。\n\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/zOg4.1036X2796-image.png\" />\n\n\n```shell\nmkdir ~/130b\ncd ~/130b\nwget https://z.wiki/autoupload/20230606/Okx1.urls.txt\naria2c -x 16 -s 16 -j 4 --continue=true -i Okx1.urls.txt\n```\n\n下载过程中可以通过`ifstat`来查看网络状况\n\n```shell\nwatch -n 1 -c -d ifstat\n```\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/01TY.372X1142-image.png\" />\n\n\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n12M 的下载速度，60 个文件总共 260G 大小的资源，\n按这速度得下载 6 个小时 😭\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/iJzL.174X174-image.png\" />\n\n\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/dH5T.746X1494-image.png\" />\n\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n\n到下载完、合并成一个文件、解压完，整整 9 个小时，天啦噜\n\n按照官网要求修改配置：\n\n\n将 `configs/model_glm_130b_v100.sh` 中的 `CHECKPOINT_PATH` 设置为解压文件夹的路径\n将 `scripts/generate.sh` 中的 `model_glm_130b.sh` 改成 `model_glm_130b_v100.sh`,\n\n#### 开始运行\n\n```shell\nbash scripts/generate.sh --input-source interactive\n```\n\n一切顺利哈哈哈\n\n<ImgView title=\"GLM-130B\" url=\"https://5.z.wiki/autoupload/20230606/yNlv.2340X2054-image.png\" />\n\n然而，现实从来不像童话故事里那么完美，回答一个简单的“你好，你是谁？”居然要 200+ 秒\n\n<ImgView title=\"GLM-130B\" url=\"https://8.z.wiki/autoupload/20230607/ggTO.1290X2222-image.png\" />\n\n<ImgView title=\"GLM-130B\" url=\"https://8.z.wiki/autoupload/20230607/vQsX.328X500-image.png\" />\n\n<ImgView title=\"GLM-130B\" url=\"https://8.z.wiki/autoupload/20230607/OKAj.498X2206-image.png\" />\n\n> 这 AI 是记性不太好？三亚出现了两次。。。\n\n就酱吧，碎啦。。。\n\n<ImgView title=\"GLM-130B\" url=\"https://8.z.wiki/autoupload/20230607/UL69.174X174-image.png\" />\n\n\n### 其他报错排查与修复\n\n\n#### nvidia-smi 报错\n\n执行`nvidia-smi`的时候报错`Failed to initialize NVML: Driver/library version mismatch`，\n这是因为系统中安装的`NVIDIA`驱动程序版本与应用程序使用的`NVML`库版本不兼容。\n`NVML`是一个允许程序访问`NVIDIA GPU`监视和管理功能的库。\n\n解决方案一：\n\n[重新安装 NVIDIA 驱动](https://www.cyberciti.biz/faq/how-to-install-nvidia-driver-on-centos-7-linux/?__cf_chl_rt_tk=XtRGeteJHXCD0wUMOxZbiUq_1UZDoySBDKHgG49qJDk-1686036569-0-gaNycGzNDuU)\n\n解决方案二：\n\n[重新安装 NVIDIA 驱动](https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html#centos7)\n\n#### GLIBCXX not found\n\n[GLIBCXX not found](https://www.cnblogs.com/juedingsheng/p/15643394.html)\n\n#### 内存不足，设置交换区\n\n[设置交换区](https://z.wiki/tech/centos-set-swap.html#centos%E8%AE%BE%E7%BD%AE%E7%BC%93%E5%AD%98%E5%8C%BA)\n\n\n### 相关项目\n\n* [GLM-130B](https://github.com/THUDM/GLM-130B/)\n* [chatglm-web](https://github.com/NCZkevin/chatglm-web)\n* [ChatGLM-6B](https://github.com/THUDM/ChatGLM-6B)
tech/glm-130b
path is https://playground.z.wiki/comment/list?path=/tech/coordinate-system.html
---\nmeta:\n - name: description\n content: GPS 坐标系简介 WGS84 GCJ02 BD09 火星坐标系\n - name: keywords\n content: GPS 坐标系简介 WGS84 GCJ02 BD09 火星坐标系\ntags: [\"GPS\", \"坐标系\", \"WGS84\", \"GCJ02\", \"BD09\", \"火星坐标系\"]\n---\n\n# 坐标系\n\n<ImgView title=\"坐标系\" width=\"200px\" url=\"https://6.z.wiki/autoupload/2022-09-16/504ca78002d343bd89e6364a97916299.image.png\" />\n\n摘要：国际通用`WGS84`坐标系，高德使用在此基础上加密的火星坐标系（国内通用），百度又是在火星坐标系上加密的\n\n\n### WGS84坐标系\n\n即地球坐标系，国际上通用的坐标系。\n\n\n### GCJ02坐标系\n\n即火星坐标系，`WGS84`坐标系经加密后的坐标系。\n出于国家安全考虑，国内所有导航电子地图必须使用国家测绘局制定的加密坐标系统，即将一个真实的经纬度坐标加密成一个不正确的经纬度坐标。\n\n\n\n### BD09坐标系\n\n即百度坐标系，`GCJ02`坐标系经加密后的坐标系\n\n
tech/coordinate-system
path is https://playground.z.wiki/comment/list?path=/tech/free-domain.html
免费域名\n\n申请了几个免费的`eu.org`域名，等几天看看。\n\n另外，[https://nic.eu.org/](https://nic.eu.org/) 这是我见过最简洁的网站了。\n\n<img src=\"https://z.wiki/autoupload/20230206/Gntt.600X600-image.png\" width=\"80\" />\n\n\n### 简洁如下\n\n<ImgView title=\"eu.org 免费域名\" url=\"https://1.z.wiki/autoupload/20230206/Ka88.1374X2500-image.png\" />\n\n<ImgView title=\"eu.org 免费域名\" url=\"https://2.z.wiki/autoupload/20230206/DMUX.564X1660-image.png\" />\n\n\n### 申请结果\n\n没想到申请到这么多域名😂\n\n<ImgView title=\"免费域名 eu.org\" url=\"https://3.z.wiki/autoupload/20230322/joXS.804X1340-image.png\" />: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bad-laugh.png\" /> \",
tech/free-domain
path is https://playground.z.wiki/comment/list?path=/tech/mfe.html
---\ntags: [\"前端\", \"微前端\", \"巨石应用\"]\n---\n\n# 微前端在美团外卖的实践\n\n原链接：https://tech.meituan.com/2020/02/27/meituan-waimai-micro-frontends-practice.html\n\n### 背景\n微前端是一种利用微件拆分来达到工程拆分治理的方案，可以解决工程膨胀、开发维护困难等问题。随着前端业务场景越来越复杂，微前端这个概念最近被提起得越来越多，业界也有很多团队开始探索实践并在业务中进行了落地。可以看到，很多团队也遇到了各种各样的问题，但各自也都有着不同的处理方案。诚然，任何技术的实现都要依托业务场景才会变得有意义，所以在阐述美团外卖广告团队的微前端实践之前，我们先来简单介绍一下外卖商家广告端的业务形态。目前，我们开发和维护的系统主要包括三端：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967403559-2b9dd2e8-3894-46cb-880c-a27fd4a2d67c.png#clientId=ua231b72a-ea5e-4&from=paste&id=u10738c62&margin=%5Bobject%20Object%5D&name=image.png&originHeight=339&originWidth=1409&originalType=url&ratio=1&size=40548&status=done&style=none&taskId=udd665150-2069-4415-a810-053b2bd8c46)\n\n- PC系统：单门店投放系统PC端\n- H5系统：单门店投放系统H5端\n- KA系统：多门店投放系统PC端\n\n如上图所示，原始解决方案的三端由各自独立开发和维护，各自包含所有的业务线，而我们的业务开发情况是：\n\n- PC端和H5端相同业务线的**基本业务逻辑一致**，UI差异大。\n- PC端和KA端相同业务线的**部分业务逻辑一致**，UI差异小。\n\n在这种特殊的业务场景下，就会出现一个有关开发效率的抉择问题。即我们希望能复用的部分只开发一次，而不是三次。那么接下来，就有两个问题摆在我们面前：\n\n- 如何进行**物理层面的复用**（不同端的代码在不同地址的Git仓库）。\n- 如何进行**逻辑层面的复用**（不同端的相同逻辑如何使用一份代码进行抽象）。\n\n我们这里重点看一下物理层面的复用，即：如何在物理空间上使得各自独立的三端系统（不同仓库）引入我们的复用层？我们尝试了NPM包、Git subtree等类“共享文件”的方式后发现，最有效率的复用方式是把三个系统放在一个仓库里，去消除物理空间上的隔离，而不是去连接不同的物理空间。当然，我们三端系统的技术栈是一致的，所以就进行了如下图的改造：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967403583-ae8c2c3e-6069-4f16-9cda-12367dad83b6.png#clientId=ua231b72a-ea5e-4&from=paste&id=u01cf51e6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=412&originWidth=1410&originalType=url&ratio=1&size=48403&status=done&style=none&taskId=u8f603399-9da1-4702-9629-7b54de2031b)\n可以看到，当我们把三端系统放在一个仓库中时，通过common文件夹提供了物理层面可复用的土壤，不再需要“共享文件”式地进行频繁地拉取操作，直接引用复用即可。不过，在带来物理层面复用效率提升的同时，也加速了整个工程出现了爆炸式发展的问题，随着产品线从最初的几个发展到现在的几十个之多，工程管理成本也在迅速增长。具体来说，包括如下四个方面：\n\n- 新业务线产品急速增加，同时为了保证三端系统复用效率的最大化，把文件放入同一仓库管理，导致文件数量增长极快，管理及协同开发难度也在不断加大。\n- 文件越来越多，文件结构越不受控制，业务开发寻址变得越来越困难。\n- 文件越来越多，开发、构建、部署速度变得越来越慢，开发体验在持续下降。\n- 不同业务线间没有物理隔离，出现了跨业务线互相引用混乱，例如A业务线出现了B业务线名字的组件。\n\n如下图所示，具体地说明了原有架构存在的问题。为了要解决这些问题，我们意识到需要拆分这些应用，即进行工程优化的常规手段进行“分治”。那么要怎么拆呢？自然而然地我们就想到了微前端的概念。也从这个概念出发，我们参考业界优秀方案，同时也深度结合了广告端实际业务的开发情况，对现有工程进行了微前端的实践与落地。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967403647-52e7fa4a-7e0e-49bd-bb41-5e9e39da2d81.png#clientId=ua231b72a-ea5e-4&from=paste&id=ua8b38318&margin=%5Bobject%20Object%5D&name=image.png&originHeight=662&originWidth=1232&originalType=url&ratio=1&size=100993&status=done&style=none&taskId=u40c70a8e-fc2a-4c59-af10-1d8bb357669)\n#### 需求分析\n结合现有工程的状况，我们进行了深度的分析。不过，在进行微前端方案确定前，我们先确定了需求点及期望收益，如下表所示：\n\n| **需求点** | **收益与要求** |\n| --- | --- |\n| **拆分解耦** | （1）按业务领域拆分成不同的仓库进行维护，不同业务线的开发者更加独立，不同业务线之间互不影响。（2）物理层面拆分，加速寻址，新增功能修改Bug更加迅速。（3）逻辑层面拆分，杜绝引用混乱，不会出现A业务线引用B业务线组件的情况。 |\n| **加速体验** | （1）开发环境急速启动，提高开发体验。（2）业务线按需打包，急速部署上线。 |\n| **侵入性低** | 微前端方案改动原有代码的侵入性降到最小，无需大规模改造，减少甚至消除回归测试的成本。 |\n| **学习成本低** | 开发人员无需感知拆分的存在，保持单页应用的开发体验，不需要学习额外的规则。 |\n| **统一技术栈** | 为了统一共建与技术沉淀，团队内工程已经统一到了React技术栈，禁止使用不同的技术栈进行开发。 |\n\n#### 方案选择\n经过以上的需求分析，我们调研了业界及公司周边的微前端方案，并总结了以下几种方案以及它们各自主要的特点：\n\n- **NPM式**：子工程以NPM包的形式发布源码；打包构建发布还是由基座工程管理，打包时集成。\n- **iframe式**：子工程可以使用不同技术栈；子工程之间完全独立，无任何依赖；基座工程和子工程需要建立通信机制；无单页应用体验；路由地址管理困难。\n- **通用中心路由基座式**：子工程可以使用不同技术栈；子工程之间完全独立，无任何依赖；统一由基座工程进行管理，按照DOM节点的注册、挂载、卸载来完成。\n- **特定中心路由基座式**：子业务线之间使用相同技术栈；基座工程和子工程可以单独开发单独部署；子工程有能力复用基座工程的公共基建。\n\n通过对各个方案特点进行分析，我们将重点关注项进行了对比，如下表所示：\n\n| **方案** | **技术栈是否能统一** | **单独打包** | **单独部署** | **打包部署速度** | **单页应用体验** | **子工程切换速度** | **工程间通信难度** | **现有工程侵入性** | **学习成本** |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| **NPM式** | 是（不强制） | 否 | 否 | 慢 | 是 | 快 | 正常 | 高 | 高 |\n| **iframe式** | 是（不强制） | 是 | 是 | 正常 | 否 | 慢 | 高 | 高 | 低 |\n| **通用中心路由基座式** | 是（不强制） | 是 | 是 | 正常 | 是 | 慢 | 高 | 高 | 高 |\n| **特定中心路由基座式** | 是（强制） | 是 | 是 | 快 | 是 | 快 | 正常 | 低 | 低 |\n\n经过上面的调研对比之后，我们确定采用了特定中心路由基座式的开发方案，并命名为：**基于React的中心路由基座式微前端**。这种方案的优点包括以下几个方面：\n\n- 保证技术栈统一在React。\n- 子工程之间开发互相独立，互不影响。\n- 子工程可单独打包、单独部署上线。\n- 子工程有能力复用基座工程的公共基建。\n- 保持单页应用的体验，子工程之间切换不刷新。\n- 改造成本低，对现有工程侵入度较低，业务线迁移成本也较低。\n- 开发子工程和原有开发模式基本没有不同，开发人员学习成本较低。\n### 微前端实践概览\n通过对方案的分析及技术方向上的梳理，我们确定了微前端的整体方案，如下图所示：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967403737-4d0b02bb-96ad-4ae7-afe0-ecf6c99340d7.png#clientId=ua231b72a-ea5e-4&from=paste&id=uf7f3d949&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1756&originWidth=1712&originalType=url&ratio=1&size=246755&status=done&style=none&taskId=u370569ba-92af-4fd8-b2e4-61f1b18d242)\n可以看到，整个方案非常简单明确，即按照业务线进行了**路由级别的拆分**。整个系统可分为两个部分：\n\n- 基座工程：用于管理子工程的路由切换、注册子工程的路由和全局Store层、提供全局库和复用层。\n- 子工程：用于开发子业务线业务代码，一个子工程对应一个子业务线，并且包含三端代码和复用层代码。\n\n基座工程和子工程联系起来的桥梁则是**子工程的入口文件地址和路由地址的映射信息**。这些映射信息可以让基座工程准确地发现子工程资源的路径从而进行加载。\n#### 微前端架构下的业务变化\n经过微前端实践的改造，我们的业务在结构上发生了如下的变化：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967403754-44c7f193-f97b-4e36-b2dd-5b1386c00806.png#clientId=ua231b72a-ea5e-4&from=paste&id=uc590e49b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=850&originWidth=1708&originalType=url&ratio=1&size=200226&status=done&style=none&taskId=ub528b820-cd43-4367-ae74-744c007692c)\n如上图所示，我们进行了微前端式的业务线拆分：\n\n- 原有的PC系统、H5系统、KA系统分别改造成了PC基座系统、H5基座系统和KA基座系统。\n- 原有的子业务线被拆分成了单独的子仓库，成为了业务线子工程（上图中6个黑框竖列）。\n- 业务线子工程分别包含PC端、H5端、KA端以及该业务线复用层的代码（上图中3个纯色背景横列）。\n\n新的拆分使得子工程能够按照业务线进行划分，独立维护。在解决复用层的同时保证了子工程大小可控，即子工程只有单个业务线的代码。而单个业务线的复杂度并不高，也降低了工程维护的复杂度。\n采用微前端拆分的方案，使得我们的业务不仅**在纵向上保有了复用的能力**，更重要的是**拥有了横向扩展的能力**，无论产品业务线如何膨胀，我们都可以更轻松地应对。那么为了实现以上的能力，我们做了哪些工作呢？下文我们会详细进行说明。\n### 基于React技术栈的中心路由基座式微前端\n微前端拆分的方案，我们命名为：基于React技术栈的中心路由基座式微前端。在具体实现上，我们会分为动态化方案、路由配置信息设计、子工程接口设计、复用方案设计和流程方案设计等几个模块来逐一进行说明。\n#### 动态化方案\n首先，我们需要**路由的管理方案**，使得子工程之间有能力互通切换。其次，我们需要**Store层的方案**，让子工程有能力使用全局Store。并且，我们还需要**CSS的加载方案**，来加载子工程的样式布局。下面来详细说明这三个方案。\n**动态路由**\n动态路由方案是想要进行路由级别的拆分，首先我们要确定用什么来管理路由？很多实现方案倾向于使用特制路由来管理模块。例如开源框架Single-Spa，实现了自己的一套路由监听来切换子工程，并且需要子工程实现特定的注册、挂载、卸载等接口来完成子工程和基座工程的动态对接，还需要特定的模块管理系统，例如systemjs来辅助完成这一过程。毋庸置疑，这对我们原有工程的改造成本很大，还需要添加额外库，进而造成包体积大小上的开销。并且子工程的开发者需要熟悉这些特定的接口，学习成本也比较高。显然，这对于我们的业务场景和需求来说很不划算。\n那么，我们选择什么来做路由管理呢？最终我们使用了React-Router，这样能够保持我们原来的技术栈不变，同时对于工程的侵入也是最低，几乎可以忽略不计。此外，React-Router能完全可以满足我们的需求，而且自动会帮助我们管理页面的加载与卸载，而不是每次切换路由都重新初始化整个子应用，所以在加载速度体验上也是最优的，跟单页应用体验一致。\n实现上也很简单，如下图：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967404369-11239540-e26b-45f1-b812-bec942a9b712.png#clientId=ua231b72a-ea5e-4&from=paste&id=u167d3028&margin=%5Bobject%20Object%5D&name=image.png&originHeight=698&originWidth=1548&originalType=url&ratio=1&size=112657&status=done&style=none&taskId=u5c4d0bc4-3dea-4d0c-82dc-a3c202e3738)\n上面这个流程图，展示了我们在基座工程中切换到子工程路由时，加载子工程并进行展示的过程。这里的重点步骤是加载子工程入口文件，并动态注册子工程路由的过程。由于我们使用的是React-Router，显然要使用其提供的动态能力来完成。这一过程也非常轻量，由于React-Router从版本4开始有了“破坏级”的升级，于是我们就调研了两种方式进行动态加载路由（目前我们使用的是React-Router版本5），如下表所示：\n\n| **React-Router 版本** | **动态加载方式** |\n| --- | --- |\n| 3 | 利用Route的getChildRoutes的API异步加载路由。 |\n| 4及以上 | 版本4及以上，React-Router在实现思路上有了非常大的变动，即不再以提前注册路由的集中式路由为设计理念，转变成路由即组件的思路。对于动态加载路由来说，就是动态加载组件，使得我们的动态加载更加容易实现，无须依赖任何API，只需写一个异步组件即可。 |\n\nReact-Router版本3中，实现的基本代码思路如下：\n_// react-router V3 用于接收子工程的路由_ **export** **default** () => ( <**Route** path=\"/subapp\" getChildRoutes={(location: any, cb: any) => { const { pathname } = location.location; // 取路径中标识子工程前缀的部分, 例如 '/subapp/xxx/index' 其中xxx即路由唯一前缀 const id = pathname.split('/')[2]; const subappModule = (subAppMapInfo as any)[id]; if (subappModule) { if (subappRoutes[id]) { // 如果已经加载过该子工程的模块，则不再加载，直接取缓存的routes cb(null, [subappRoutes[id]]); return; } // 如果能匹配上前缀则加载相应子工程模块 currentPrefix = id; loadAsyncSubapp(subappModule.js) .then(() => { // 加载子工程完成 cb(null, [subappRoutes[id]]); }) .catch(() => { // 如果加载失败 console.log('loading failed'); }); } else { // 可以重定向到首页去 goBackToIndex(); } }} /> );\n而在React-Router版本4中，实现的基本代码思路如下：\n**export** **const** AyncComponent: React.FC<{ hotReload?: number; } & RouteComponentProps> = ({ location, hotReload }) => { _// 子工程资源是否加载完成_ **const** [ayncLoaded, setAyncLoaded] = useState(false); _// 子工程url配置信息是否加载完成_ **const** [subAppMapInfoLoaded, setSubAppMapInfoLoaded] = useState(false); **const** [ayncComponent, setAyncComponent] = useState(null); **const** { pathname } = location; _// 取路径中标识子工程前缀的部分, 例如 '/subapp/xxx/index' 其中xxx即路由唯一前缀_ **const** id = pathname.split('/')[2]; useEffect(() => { _// 如果没有子工程配置信息, 则请求_ life (!subAppMapInfoLoaded) { fetchSubappUrlPath(id).then((data) => { subAppMapInfo = data; setSubAppMapInfoLoaded(true); }).catch((url: any) => { _// 失败处理_ goBackToIndex(); }); **return**; } **const** subappModule = (subAppMapInfo **as** any)[id]; life (subappModule) { life (subappRoutes[id]) { _// 如果已经加载过该子工程的模块，则不再加载，直接取缓存的routes_ setAyncLoaded(true); setAyncComponent(subappRoutes[id]); **return**; } _// 如果能匹配上前缀则加载相应子工程模块_ _// 如果请求成功，则触发JSONP钩子window.wmadSubapp_ currentPrefix = id; setAyncLoaded(false); **const** jsUrl = subappModule.js; loadAsyncSubapp(jsUrl) .then(() => { _// 加载子工程完成_ setAyncComponent(subappRoutes[id]); setAyncLoaded(true); }) .catch((urlList) => { _// 如果加载失败_ setAyncLoaded(false); console.log('loading failed...'); }); } **else** { _// 可以重定向到首页去_ goBackToIndex(); } }, [id, subAppMapInfoLoaded, hotReload]); **return** ayncLoaded ? ayncComponent : null; };\n可以看到，这种方式实现起来非常简单，不需要额外依赖，同时满足了我们“拆分”的诉求。\n**动态Store**\n对于Store层，我们原工程使用的是Redux，子工程通过路由动态注册进来天然就可以访问到全局Store，所以对于Store的访问能够自动支持。那么，如果子工程想要注册自己的全局Store该怎么办呢？而且我们还用了redux-saga来作为异步处理方案。redux-saga如何动态注册呢？还是利用它们各自的API就可以达到我们的目的？从下图中可以看到，支持动态Store也是花费很小的改造成本就可以完成。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967404684-368895dc-a8f7-4747-b27b-f4fcd27d6f4e.png#clientId=ua231b72a-ea5e-4&from=paste&id=u40cb014a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=839&originWidth=1269&originalType=url&ratio=1&size=189756&status=done&style=none&taskId=u3d1537f1-1d4f-4e77-af2d-6968b60875c)\n**动态CSS**\n同样的对应子工程的样式布局，我们也需要通过某种途径加载到基座工程中来。这个很自然地用异步加载CSS文件通过style标签注入来完成，不过这里需要注意两个问题：\n一个问题是，加载子工程的JS入口文件和CSS文件可以同时发起请求，但是需要保证CSS文件加载完成后再进行JS入口文件的路由注册。因为如果路由先注册了页面就会显示出来，如果这时CSS文件还没有加载完毕，就会出现页面样式闪动的问题。我们通过先加载CSS再加载JS的策略来避免这个问题的发生。\n另一个问题是，怎么保证子工程的CSS不会和其他子工程冲突。我们利用PostCSS插件在编译子工程时，按照分配给子工程的唯一业务线标识，为每一组CSS规则生成了命名空间来解决这个问题。而子业务线开发者是没有感知的，可以没有“心智负担”地书写子工程的样式。\n#### 路由配置信息方案\n在动态加载方案确定之后，基座工程怎么才能知道子工程的资源路径，进而加载对应的JS和CSS资源呢？我们需要一组映射信息。如下图所示，业务线唯一标识为Key，相应的静态资源地址为Value。这样的话，当基座工程切换到子工程时就可以拉取这个配置信息，在路由切换时准确地找到对应的子工程，进而进行后续的资源加载过程。这里可能会遇到的一个问题，即如果JS和CSS过大，是否能进行拆分？\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967404938-3c009481-b119-4669-991f-6de7949cf340.png#clientId=ua231b72a-ea5e-4&from=paste&id=u0dbf35fc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=545&originWidth=1209&originalType=url&ratio=1&size=115448&status=done&style=none&taskId=u216301ca-1839-41b5-badc-040df986d42)\n根据我们业务的实际情况，目前静态资源的大小是可控的，无需注册多个，单一入口地址完全能够满足我们的业务需求，并且由于我们的改造完全基于现有技术栈。如果业务很复杂，完全可以在子工程中通过webpack的动态import进行路由懒加载，也就是说，子工程完全可以按照路由再次切分成chunks来减少JS的包体积。至于CSS本身就很小，长期也不会有进行切分的需要。\n#### 子工程接口方案\n子工程需要暴露它要注册给基座工程的对象，来进行基座工程加载子工程的过程。在子工程入口文件中定义registerApp来传递注册的对象，主要代码如下：\n```vue\nimport reducers from 'common/store/labor/reducer';\nimport sagas from 'common/store/labor/saga';\nimport routes from './routes/index';\nfunction registerApp(dep: any = {}): any {\n return {\n routes, // 子工程路由组件\n reducers, // 子工程Redux的reducer\n sagas, // 子工程的Redux副作用处理saga\n };\n}\nexport default registerApp\n```\n我们这里暴露了子工程的三个对象：这里最重要的就是routes路由组件，就是在写React-Router（版本4及以上）的路由。子工程开发者只需要配置routes对象即可，没有任何学习成本，其代码如下：\n```vue\n/**\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 子工程路由注册说明\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 如注册的路由如下：\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work path: 'index'\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 路由前缀会被追加上，路由前缀规则见变量urlPrefix\n change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work 在主工程的访问路劲为：/subapp/${工程注册名称}/index\n */\nconst urlPrefix = `/subapp/${microConfig.name}/`;\nconst routes = [\n {\n path: 'index',\n component: IndexPage,\n },\n];\nconst AppRoutes = () => (\n <Switch>\n {\n routes.map(item => (\n <Route\n key={item.path}\n exact\n path={`${urlPrefix}${item.path}`}\n component={item.component}\n />\n ))\n }\n <Redirect to=\"/\" />\n </Switch>\n);\nexport default AppRoutes;\n```\n除了上方的routes对象，还剩下两个接口对象是：reducers和sagas，用于动态注册全局Store相关的数据和副作用处理。这两个接口我们在子工程中暂时没有开放，因为按照业务线拆分过后，由于业务线间独立性很强，全局Store的意义就不大了。我们希望子工程可以自行处理自己的Store，即每个业务线维护自己的Store，这里就不再展开进行说明了。\n#### 复用方案\n基座工程除了路由管理之外，还作为共享层共享全局的基建，例如框架基本库、业务组件等。这样做的目的是，子业务线间如果有相同的依赖，切换的时候就不会出现重复加载的问题。例如下面的代码，我们把React相关库都以全局的方式导出，而子工程加载的时候就会以external的形式加载这些库，这样子工程的开发者不需要额外的第三方模块加载器，直接引用即可，和平时开发React应用一致，没有任何学习成本。而和各个业务都相关的公用组件等，我们会放到wmadMicro的全局命名空间下进行管理。主要代码如下：\n```vue\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as React from 'react';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as ReactDOM from 'react-dom';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as ReactRouterDOM from 'react-router-dom';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as Axios from 'axios';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as History from 'history';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as ReactRedux from 'react-redux';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as Immutable from 'immutable';\nimport change_index change_index.sh change_playground_index life misc notfound.md README.md resource snippets tech tmp.file work as ReduxSagaEffects from 'redux-saga/effects';\nimport Echarts from 'echarts';\nimport ReactSlick from 'react-slick';\n​\nfunction registerGlobal(root: any, deps: any) {\n Object.keys(deps).forEach((key) => {\n root[key] = deps[key];\n });\n}\nregisterGlobal(window, {\n // 在这里注册暴露给子工程的全局变量\n React,\n ReactDOM,\n ReactRouterDOM,\n Axios,\n History,\n ReactRedux,\n Immutable,\n ReduxSagaEffects,\n Echarts,\n ReactSlick,\n});\nexport default registerGlobal;\n```\n#### 流程方案\n在确定了程序拆分运行的整体衔接之后，我们还要确定开发方案、部署方案以及回滚方案。我们如何开始开发一个子工程？以及我们如何部署我们的子工程？\n**开发流程**\n有两种开发方案可以满足独立开发的目的：第一种是提供一个基座工程的Dev环境，子工程在本地启动后在Dev环境进行开发，这种开发方式要求有一套基座工程的更新机制，例如基座工程更新后要同步部署到Dev环境。第二种是子工程开发者拉取基座工程到本地并启动本地开发环境，然后拉取子工程到本地，再启动子工程本地开发环境进行开发，这种开发方式是目前我们使用的方式。如下图所示，我们提供了子工程脚手架来快速创建子工程，开发者无需做任何配置和额外学习成本，就可以像开发React应用一样进行开发。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967405232-7bc6e768-3307-493d-a8b2-c1dd0b68dbbe.png#clientId=ua231b72a-ea5e-4&from=paste&id=u27368156&margin=%5Bobject%20Object%5D&name=image.png&originHeight=840&originWidth=1410&originalType=url&ratio=1&size=150120&status=done&style=none&taskId=uf86828a6-75c8-475c-a351-761a1c7b9b9)\n**热更新**\n在开发过程中，我们希望我们的开发体验和开发单页应用的体验一致，也要支持热更新。由于我们的拆分，实际上有两个服务，即基座和子工程，所以我们以上图的方式完成了热更新的支持：在子工程的module.hot中通过再次触发基座工程中的JSONP钩子来通知基座工程，来再次触发renderApp达到子工程更新代码则页面热刷新的目的。主要代码如下：\n_// 在子工程入口文件_ **import** routes **from** './routes/index'; **function** **registerApp**(dep: any = {}): **any** { **return** { routes, }; } life ((module **as** any).hot) { (module **as** any).hot.accept('./routes/index', (): any => { window.wmadSubapp(registerApp, true); _// 支持子工程热加载的信息传递_ }); } **export** **default** registerApp\n**Mock数据**\n子工程目前Mock数据的方式有三种：一是在基座本地Mock，这种Mock方式天然支持，因为基座工程基于外卖工程化Nine脚手架进行开发，本身支持本地Mock。二是支持子工程本地Mock。三是使用公共Mock服务YAPI。目前子工程开发的Mock功能结合第一种方式和第三种方式进行。\n#### 部署方案\n最后是部署方案，我们达成了独立部署上线的目的，即子工程发布不需要基座工程的参与。之前所有子业务线都在一个工程中，打包速度随着业务线的膨胀越来越慢，而如下的方案使得子工程的开发和部署完全独立，单个业务线的打包速度会非常快，从之前的分钟级别降到了秒级别。如下图所示，可以看到，子工程部署只需要把子工程打包，并在上传CDN之后，把配置信息更新即可，因为配置信息中有子工程新的资源地址，这样就达到了发布上线的目的。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967405223-21cefae3-01c4-4a45-a778-e3f5c42f5735.png#clientId=ua231b72a-ea5e-4&from=paste&id=u09a70422&margin=%5Bobject%20Object%5D&name=image.png&originHeight=716&originWidth=1190&originalType=url&ratio=1&size=87333&status=done&style=none&taskId=u51cf930a-e3c5-4253-b3c9-b0dabb39c9c)\n整个部署过程我们是托管到Talos（美团内部自研的部署工具）上的，配置信息我们是托管到Portm（美团内部自研的文件存储）上的（通过我们开发的Talos的插件UpdatePubInfo-To-Portm来更新我们的配置信息）。在静态资源上传到CDN之后，就可以更新配置信息，供主工程调用，也就完成了子工程上线的过程。利用美团现有服务，我们很迅速地完成了子工程单独部署上线的整个流程。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967405348-287c0bb1-116c-4b05-bfc2-72012eef1438.png#clientId=ua231b72a-ea5e-4&from=paste&id=u6740d7b1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=184&originWidth=1920&originalType=url&ratio=1&size=64535&status=done&style=none&taskId=u9dd947c3-10ca-4667-b28d-c42830a233f)\n#### 回滚方案\n在部署方案中，我们通过Talos进行部署，它本身就带有回滚功能。得益于子工程的发布和普通工程的发布并没什么本质不同，都是将静态资源放置到CDN上，通过静态资源的的contenthash值来区分不同版本，所以回滚的时候，Talos取到上个版本（或者某个前版本）的静态资源，再通过Portm更新我们的配置信息即可完成。整个过程和普通工程没有区别，发版人员只需简单地点下回滚按钮即可。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967406021-7cc46b12-52b4-411e-bb6a-198ba0b220cd.png#clientId=ua231b72a-ea5e-4&from=paste&id=uf79da91b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=348&originWidth=1920&originalType=url&ratio=1&size=69191&status=done&style=none&taskId=u07cb5342-6a9c-48ee-bcc4-0e20fe45d4e)\n#### 监控方案\n改变了原有的开发模式后，我们还对几个关键节点进行了监控报警的埋点。利用美团CAT（已经在GitHub上开源）和天网（美团内部的监控系统），我们分别在子工程的配置信息、静态资源加载等节点上进行了埋点上报，统计子工程加载成功率，及时发现可能出现的子工程切换问题。具体情况如下图所示：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/100706/1633967406150-5d5cb71e-62a6-42a0-82fd-d6e7e6010ce0.png#clientId=ua231b72a-ea5e-4&from=paste&id=ufa3072b8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=469&originWidth=1920&originalType=url&ratio=1&size=141987&status=done&style=none&taskId=ud6ea54ec-ea0c-470b-a56b-84729cca3dd)\n上方左图是按照端维度进行统计的示例，上方右图是PC端按照产品线统计加载成功数的示例。默认都是统计当天的数据，显示‘-’的表明当前没有数据。对资源加载的监控目前有三种类型：JSON、JS和CSS，资源加载失败的统计也包含这三种类型。天网的监控按照分钟级进行，每分钟内如果有加载失败就会发出报警，偶尔的报警可能是用户网络的问题，如果出现大批量的报警就要引起重视了。\n### 总结\n以上就是微前端在外卖商家广告端的实践过程。总的来说，我们完成了以下的目标：\n\n- 按照领域（业务线）拆分工程，工程的可维护性得到提高，相关领域进行了内聚，无关领域进行了解耦。\n- 子工程提供了PC、H5、KA三端的物理复用土壤，消除了工程膨胀问题，工程大小也变得可控。\n- 子工程打包速度从分钟级降为秒级，提高了开发体验，加快了上线的速度。\n- 子工程开发支持热更新，开发体验不降级。\n- 子工程能够单独开发、单独部署、单独上线，业务线间互不影响。\n- 整体工程改造成本低，插拔式开发，无侵入式代码，在正常业务开发的同时短期内就可以完成上线。\n- 开发者学习成本低，完整地保留了单页应用开发的开发体验，开发者可快速上手。\n- 目前在美团广告端，以微前端模式上线的子业务线已经有很多个。另外还有多个正在开发的微前端子工程，剩余在主工程中的子业务线后续也可以无痛迁移出来成为子工程。我们内部也在此过程中搜集了不少意见反馈，未来继续在实践中进行思考和完善。在此过程中，我们深知还有很多做得不够完善甚至存在问题的地方，欢迎大家跟我们进行交流，帮我们提出宝贵意见或者给予指导。当然也欢迎大家加入我们团队，一起共建。\n### 作者简介\n张啸、魏潇、天尧，均为美团外卖前端团队研发工程师。\n### 招聘信息\n美团外卖广告前端团队诚招高级前端开发、前端开发专家。我们为商家提供变现服务平台，为用户提供优质广告体验，是外卖商业变现中的重要环节。欢迎各位小伙伴的加入，共同打造极致广告产品。感兴趣的同学可投递简历至：tech@meituan.com（邮件标题注明：美团外卖广告前端团队）: \"<p>招前段？</p>\n\",\n: \"<p>博主可以多分享一些文章吗</p>\n\",\n: \"<p>哦哦</p>\n\",
tech/mfe
path is https://playground.z.wiki/comment/list?path=/tech/reversal.html
---\nmeta:\n - name: description\n content: 反转棋 小游戏\n - name: keywords\n content: 反转棋 小游戏\n---\n# 做了一个反转棋\n\n最近在小学生圈里比较流程反转棋，为了更好的融入进去，我抄了一个反转棋😜\n\n地址：[https://playground.z.wiki/reversal/index.html](https://playground.z.wiki/reversal/index.html)\n\n\n<ImgView title=\"反转棋\" url=\"https://1.z.wiki/autoupload/20240108/Jncq.2160X1016-image.png\" />: \"有点意思，很久之前的黑白手机上有这类游戏。\",
tech/reversal
path is https://playground.z.wiki/comment/list?path=/tech/google-console-insight.html
Google 搜索影响力\n\n\n<ImgView title=\"Google 搜索影响力\" url=\"https://6.z.wiki/autoupload/20240211/dxbm.1918X1302-image.png\" />\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/lovely.png\" /> 博主很厉害啊\",\n: \"👍\",
tech/google-console-insight
path is https://playground.z.wiki/comment/list?path=/tech/ai-text-split.html
---\nmeta:\n - name: description\n content: AI 大模型 文本切割\n - name: keywords\n content: AI 大模型 文本切割\n---\n# 文本切割\n\n文本切分的时候如何保证数据不丢失？如何切分更合理？🤔️\n\n<ImgView title=\"文本切割\" url=\"https://3.z.wiki/autoupload/20230522/P2lu.1560X2382-image.png\" />\n\n
tech/ai-text-split
path is https://playground.z.wiki/comment/list?path=/tech/http.html
---\nmeta:\n - name: description\n content: http 协议发展史，http 协议介绍，http 解析\n - name: keywords\n content: http 网络协议 解析 介绍 前端\ntags: [\"http\", \"网络协议\", \"解析\", \"介绍\", \"前端\", \"http 协议介绍\"]\n---\n\n# 浅谈 HTTP 协议\n\n<ImgView title=\"http 协议\" url=\"https://2.z.wiki/autoupload/20230221/DJ83.408X581-image.png\" />\n\n### 介绍\n\n\n`HTTP`（`Hypertext Transfer Protocol`）是一种用于分布式、协作式和超媒体信息系统的应用层协议。\n它是万维网（`World Wide Web`）的基础协议，所有的网页浏览和数据交互都依赖于它。\n\n`HTTP` 的主要目的是通过互联网将超媒体文档（如 `HTML` 文件）从服务器传送到客户端，\n同时客户端也可以通过 `HTTP` 向服务器发送请求，以获取需要的资源（如图片、音频文件等）。\n\n`HTTP` 协议是基于请求/响应模型的，客户端向服务器发送请求，服务器接收请求并进行处理，\n最后向客户端返回响应。`HTTP` 协议使用简单的文本格式，并通过状态码、方法和头字段来管理请求/响应的过程。\n\n### 历史\n\n`HTTP` 协议的历史可以追溯到 `1989` 年，当时 Tim Berners-Lee 发明了万维网，\n并创建了 `HTTP` 协议作为万维网的核心协议。`HTTP` `0.9` 版本在 `1991` 年发布，\n提供了简单的请求/响应模型，允许客户端请求 `HTML` 文件。随着万维网的发展，\n`HTTP` 协议经历了多次版本的更新，从 `1.0` 到 `1.1`，其中包含了许多重要的改进，如支持更多的方法、状态码和头字段等。\n\n目前，`HTTP` 协议已经成为网络应用开发的标准协议，广泛应用于各种网络应用，\n如网页浏览、电子邮件、文件传输等。`HTTP` `2.0` 版本在 `2015` 年发布，与之前的版本相比，\n`HTTP` `2.0` 提供了更快的数据传输速度和更高的效率，成为现代网络应用的主要协议之一。\n\n<ImgView title=\"http 协议发展历史\" url=\"https://2.z.wiki/autoupload/20230212/bfkU.878X2212-image.png\" />\n\n\n### 请求/响应模型\n\n`HTTP` 请求/响应模型是 `HTTP` 协议的基础。它描述了客户端和服务器之间的通信过程。\n\n在 `HTTP` 协议中，客户端是请求方，服务器是响应方。请求的过程是：客户端发送请求到服务器，服务器接收请求并做出响应。\n\n<ImgView title=\"http 请求/响应模型\" url=\"https://2.z.wiki/autoupload/20230212/b5we.227X717-image.png\" />\n\n### 报文格式\n\n`HTTP` 报文是通过 `HTTP` 协议进行请求和响应的主要内容。`HTTP` 报文由请求报文和响应报文两种形式组成。\n\n请求报文通常由以下组成部分组成：\n\n请求行：包含了请求方法（例如 `GET`、`POST`）、请求的 URL 和使用的 `HTTP` 版本。\n请求头：包含了有关请求的附加信息，例如请求的内容长度、请求的来源和请求的 `Acceptable` 内容类型。\n<空行>\n请求主体：请求的正文，仅在请求方法为 `POST` 时出现。\n\n```\n请求方法 URL HTTP/版本\n请求头\n<空行>\n请求主体\n```\n\n响应报文通常由以下组成部分组成：\n\n状态行：包含了 `HTTP` 版本、响应状态代码和状态代码的文本描述。\n响应头：包含了有关响应的附加信息，例如内容长度、内容类型和服务器的类型。\n<空行>\n响应主体：响应的正文，包含了响应的结果。\n\n```\nHTTP/版本 状态码 状态码描述\n响应头\n<空行>\n响应主体\n```\n\n总的来说，HTTP 报文是通过首部字段、空行和正文组成的。首部字段包含了有关请求或响应的附加信息，而正文则包含了请求或响应的主要内容。\n\n例如当你访问[z.wiki](http://z.wiki)时：\n\n请求如下\n```\nGET / HTTP/1.1\nHost: z.wiki\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nCookie: io=MK50jBsxjF5t6aEsAAOG\n```\n\n响应如下\n```\nHTTP/1.1 301 Moved Permanently\nServer: Tengine\nDate: Sun, 12 Feb 2023 13:24:58 GMT\nContent-Type: text/html\nContent-Length: 262\nLocation: https://z.wiki/\nVia: kunlun6.cn5186[,0]\nTiming-Allow-Origin: *\nEagleId: 7cec6e1016762082989013691e\nProxy-Connection: Keep-alive\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head><title>301 Moved Permanently</title></head>\n<body>\n<h1>301 Moved Permanently</h1>\n<p>The requested resource has been assigned a new permanent URI.</p>\n<hr/>Powered by Tengine</body>\n</html>\n\n```\n\n以上请求、响应可通过[Charles](https://www.charlesproxy.com/)查看\n\n<ImgView title=\"http请求\" url=\"https://5.z.wiki/autoupload/20230212/UIZu.2112X2366-image.png\" />\n\n\n### 方法\n\n`HTTP`协议支持多种请求方法，常见的方法包括：\n\n`GET`：请求获取某一资源的数据，该方法是最常用的请求方法，一般用于请求静态数据。\n\n`POST`：请求向服务器提交数据，常用于请求动态数据，例如提交表单数据。\n\n`PUT`：请求更新某一资源，例如更新文件。\n\n`DELETE`：请求删除某一资源。\n\n`HEAD`：请求获取某一资源的响应头数据，而不请求整个资源内容。\n\n`OPTIONS`：请求查询服务器的性能，例如支持的请求方法等。\n\n`CONNECT`：请求将请求连接转换为隧道模式。\n\n`TRACE`：请求服务器回显请求信息，用于调试。\n\n`PATCH`：对资源进行部分修改。\n\n以上只是 `HTTP` 协议支持的常见请求方法，不同的服务器实现可能支持不同的请求方法。当服务器不支持某种方法时通常会返回`405 Method Not Allowed`状态码。\n\n例如；`TRACE`方法，由于可能导致安全漏洞，很多服务器（`Apache 2.0`、`Nginx 1.13.9`、`Microsoft IIS 6.0`）默认是将其禁用的。\n\n<ImgView title=\"http method\" url=\"https://5.z.wiki/autoupload/20230221/ZdZz.175X211-doutub_gif.gif\" />\n\n### 状态码\n\n<ImgView title=\"状态码\" url=\"https://5.z.wiki/autoupload/20230212/jlwI.500X720-image.png\" />\n\n`HTTP` 协议的状态码是服务器向客户端返回的状态码，它表示请求的处理结果。状态码由三位数字组成，第一个数字定义了状态码的类别，如下所示：\n\n`1xx`：消息，表示请求已被接受，需要继续处理。\n\n`2xx`：成功，表示请求已被成功处理。\n\n`3xx`：重定向，表示需要进一步的操作以完成请求。\n\n`4xx`：客户端错误，表示请求中有语法错误或请求无法实现。\n\n`5xx`：服务器错误，表示服务器在处理请求时发生内部错误。\n\n#### 常见状态码\n\n以下是一些常见的状态码：\n\n`200 OK`：表示请求已被成功处理。\n\n`201 Created`：表示请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 `URI` 已经随 `Location` 头信息返回。\n\n`204 No Content`：表示请求已经被处理，但是没有返回任何内容。\n\n`301 Moved Permanently`：表示请求的资源已永久移动到新位置。\n\n`302 Found`：表示请求的资源临时从不同的 URI 响应请求。\n\n`400 Bad Request`：表示请求中存在语法错误。\n\n`401 Unauthorized`：表示请求未经授权。\n\n`403 Forbidden`：表示禁止访问。\n\n`404 Not Found`：表示请求的资源不存在。\n\n`500 Internal Server Error`：表示系统内部错误。\n\n`501 Not Implemented`：服务器不支持当前请求所需要的某个功能。\n\n`502 Bad Gateway`：网关错误，表示服务器作为网关或代理服务器，从上游服务器接收到了无效的响应。\n\n`503 Service Unavailable`：服务不可用，表示服务器暂时处于超负载或正在停机维护状态。\n\n`504 Gateway Timeout`：网关超时，表示服务器作为网关或代理服务器，在尝试从上游服务器接收请求时超时。\n\n#### 不常见状态码\n\n以下是一些不常见的状态码：\n\n`102 Processing`：服务器正在处理请求，需要更长的时间。\n\n`103 Checkpoint`：服务器已接收部分请求并在继续处理它。\n\n`205 Reset Content`：服务器已处理请求，但不会返回任何内容。\n\n`226 IM Used`：服务器已经执行了某些请求，并已产生一些内容，但是客户端已经发出了一个期望其完成的请求。\n\n`308 Permanent Redirect`：服务器返回该代码，表示请求的资源已永久删除，且将永远不可用。\n\n这些状态码在日常开发和使用中并不常用，但了解其含义还是有必要的。\n\n<ImgView title=\"不常见状态码\" url=\"https://5.z.wiki/autoupload/20230212/gqfx.736X641-状态码.png\" />\n\n\n### 常用头字段\n\n`HTTP` 协议中常用的请求/响应头字段包括：\n\n`Accept`: 表示客户端能够处理的内容类型，比如 \"`Accept: text/plain`\" 表示客户端只接受纯文本格式的内容。\n\n`Content-Type`: 表示请求体的内容类型，比如 \"`Content-Type: application/json`\" 表示请求体是 JSON 格式的数据。\n\n`User-Agent`: 表示客户端软件的信息，比如 \"`Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36`\"\n表示客户端是使用 `Google Chrome` 浏览器。\n\n`Accept-Encoding`: 表示客户端能够接受的内容编码格式，比如 \"`Accept-Encoding: gzip`\" 表示客户端接受 `GZIP` 压缩格式的内容。\n\n`Authorization`: 表示客户端的认证信息，比如 \"`Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=`\" 表示客户端使用基本认证方式，并传递了用户名和密码的信息。\n\n`Cache-Control`: 表示客户端缓存策略，比如 \"`Cache-Control: no-cache`\" 表示客户端不使用缓存。\n\n`text/event-stream`: `Server-Send Events`协议的`MIME`类型，详见[SSE](https://z.wiki/tech/sse.html)\n\n<ImgView title=\"常用头字段\" url=\"https://7.z.wiki/autoupload/20230212/eB8s.262X728-image.png\" />\n\n以上这些仅仅是一些常见的 `HTTP` 响应头，\n实际上还有很多其他类型的 `HTTP` 响应头。\n更多 `HTTP` 响应头可以查看[MDN](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)文档。\n\n### 缓存\n\n`HTTP` 缓存是利用缓存机制在客户端和服务器间减少传输次数或传输数据量以提高响应速度和降低服务器的负载的一种技术。\n\n`HTTP` 缓存通常可以分为两种：强缓存和协商缓存。\n\n#### 强缓存\n\n强缓存是指在客户端缓存请求的结果，以便在下次请求该资源时可以在不向服务器发送请求的情况下直接从缓存中返回数据。\n强缓存通过 `HTTP` 响应头中的两个字段控制：`Expires` 和 `Cache-Control`。`Expires` 字段指定缓存的截止日期，\n`Cache-Control` 字段提供了更加灵活的缓存策略。\n\n高德交通分析报告官网中的强缓存：\n<ImgView title=\"强缓存\" url=\"https://7.z.wiki/autoupload/20230212/7znL.800X3046-image.png\" />\n\n#### 协商缓存\n\n协商缓存是指在客户端和服务器之间协商缓存策略。协商缓存在缓存过期或者服务器端资源有更新时启动，\n客户端在收到服务器端的响应后，会对比缓存中的内容和服务器端返回的内容，\n判断是否需要更新缓存。协商缓存通过 `HTTP` 响应头中的 `Last-Modified` 和 `ETag` 字段实现。\n\n高德开放平台中的协商缓存：\n<ImgView title=\"协商缓存\" url=\"https://7.z.wiki/autoupload/20230212/uoFF.140X2962-image.png\" />\n\n正确使用 HTTP 缓存机制，可以显著提高网站的加载速度和用户体验。\n\n### 安全性\n\n`HTTP`协议本身是一种明文协议，因此有很多安全性问题需要考虑。\n\n加密：为了防止数据在传输过程中被窃取，通常使用 SSL/TLS 协议加密 `HTTP` 通信。加密后的通信称为 `HTTPS`。\n\n认证：为了防止未经授权的用户访问敏感信息，通常使用用户名密码或数字证书等方式进行认证。\n\n除此之外，还有其他安全问题，如：`XSS`、`CSRF`、`SSRF`等，需要采取相应措施保护。\n\n<ImgView title=\"安全性\" url=\"https://7.z.wiki/autoupload/20230212/DpLC.878X1228-web安全.png\" />\n\n### 总结\n\n通过这篇文章对 `HTTP` 协议做了一个简单的整理：\n从它的历史和发展到请求/响应模型，以及报文格式、请求方法、常用的请求/响应头字段、状态码、缓存以及安全性问题等，\n至此大家应该对`HTTP`协议有了一个较为全面的认识。\n\n\n<TheEnd />\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/haha.png\" /> \",\n: \"很全面 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/good.png\" /> \",
tech/http
path is https://playground.z.wiki/comment/list?path=/tech/request-merge.html
高性能实践：请求合并\n\n在高并发场景下，来自下游服务的请求往往会引起大量的网络`IO`和服务端处理负载。有一种巧妙的方式可以减缓这些压力——请求合并。\n其原理就是将一堆零散的请求拼凑成一个批量请求，如此便可以大幅降低上游服务器的压力。\n\n本文将探讨一种高效的单机模式下的请求合并策略。\n\n<ImgView title=\"合并请求\" url=\"https://z.wiki/placeholder/740x120?text=实现思路&color=black&pinyin=true\" />\n\n\n核心实现思路：将请求先发送到队列中，然后使用工作线程进行消费处理，工作线程会不断地从队列中取出请求进行批量处理。\n\n<ImgView title=\"请求合并\" url=\"https://3.z.wiki/autoupload/20240213/4dcJ.931X1383-%E8%AF%B7%E6%B1%82%E5%90%88%E5%B9%B6.drawio.png\" />\n\n\n\n<ImgView title=\"合并请求\" url=\"https://z.wiki/placeholder/740x120?text=技术手段&color=black&pinyin=true\" />\n\n\n技术手段主要为：\n\n1. `LinkedBlockingQueue` 线程安全阻塞队列\n2. `ExecutorService` `ScheduledExecutorService` 线程池\n3. `CompleteableFuture` Java 8 引入的 API，位于 `java.util.concurrent` 包中。它提供了一种异步编程的方式，允许以声明性的方式编写异步代码。\n\n\n\n<ImgView title=\"合并请求\" url=\"https://z.wiki/placeholder/740x120?text=代码&color=black&pinyin=true\" />\n\n\n源码地址：[https://github.com/yihuaxiang/spring-merge-request-demo](https://github.com/yihuaxiang/spring-merge-request-demo)\n\n\n```java\n@Service\npublic class UserService implements IUserService{\n // 阻塞队列，保存所有需要进行查询的信息\n private final Queue<UserQuery> queue = new LinkedBlockingQueue();\n\n // http client\n private final RestTemplate restTemplate;\n\n public UserService(RestTemplate restTemplate) {\n this.restTemplate = restTemplate;\n }\n\n\n // 对外暴露的单个查询接口\n @SneakyThrows\n @Override\n public Map<String, Object> queryUser(Long id) {\n UserQuery userQuery = new UserQuery();\n userQuery.setId(id);\n\n CompletableFuture<Map<String, Object>> future = new CompletableFuture<>();\n userQuery.setCompletableFuture(future);\n\n // 将请求信息放置到队列中，由专门的工作线程进行批量请求\n queue.add(userQuery);\n\n return future.get();\n }\n\n private List<Map<String, Object>> batchQueryUser(List<Long> ids) {\n return restTemplate.getForEntity(\"https://playground.z.wiki/test/getUserInfo?ids=\" + Joiner.on(\",\").join(ids), List.class).getBody();\n }\n\n @PostConstruct\n public void init() {\n ExecutorService executorService = Executors.newFixedThreadPool(100);\n ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(10);\n scheduledExecutorService.scheduleAtFixedRate(() -> {\n // 这里利用单独的线程池处理，是因为通过 scheduleAtFixedRate 运行的任务会收到前一个任务的影响，只有前一个任务执行完毕后一个才会开始\n executorService.execute(() -> {\n int queueSize = this.queue.size();\n if (queueSize == 0) {\n return ;\n }\n\n // 每次最多请求10个\n final int maxBatchSize = 10;\n List<UserQuery> userQueryList = new ArrayList<>(maxBatchSize);\n\n for (int i = 0;i<maxBatchSize;i++) {\n if (queue.isEmpty()) {\n break;\n }\n\n userQueryList.add(queue.poll());\n }\n\n // 内部进行批量请求\n List<Map<String, Object>> userList = this.batchQueryUser(userQueryList.stream().map(item -> item.getId()).collect(Collectors.toList()));\n\n userQueryList.forEach(query -> {\n Integer id = query.getId().intValue();\n Optional<Map<String, Object>> info = userList.stream().filter(item -> id.equals(((Integer)item.get(\"id\")))).findAny();\n if (info.isPresent()) {\n query.getCompletableFuture().complete(info.get());\n } else {\n query.getCompletableFuture().complete(null);\n }\n });\n\n });\n }, 100, 10, TimeUnit.MILLISECONDS);\n }\n}\n\n```\n\n在这段代码中，我们首先定义了一个线程安全的阻塞队列以保存所有待查询信息，然后通过工作线程来执行批量查询操作。\n\n\n<ImgView title=\"合并请求\" url=\"https://z.wiki/placeholder/740x120?text=测试&color=black&pinyin=true\" />\n\n\n1. 测试工具：[siege](https://z.wiki/misc/cmd-recommend.html#siege)\n2. 测试脚本：`siege \"http://localhost:8080/test/getUserInfo?id=9\" --time=20s --concurrent=100`\n\n这里模拟 100 个并发，持续 20s 的压测\n\n```\nTransactions: 886 hits\nAvailability: 100.00 %\nElapsed time: 19.24 secs\nData transferred: 0.11 MB\nResponse time: 2.12 secs\nTransaction rate: 46.05 trans/sec\nThroughput: 0.01 MB/sec\nConcurrency: 97.60\nSuccessful transactions: 886\nFailed transactions: 0\nLongest transaction: 10.42\nShortest transaction: 1.40\n```\n\n<ImgView title=\"合并请求\" url=\"https://5.z.wiki/autoupload/20240213/L76A.458X1176-image.png\" />\n\n从日志中可以看出来短时间内的多次请求被合并到了一起。\n\n\n<ImgView title=\"合并请求\" url=\"https://z.wiki/placeholder/740x120?text=注意&color=black&pinyin=true\" />\n\n\n注意，***没有银弹***，只有高并发且批量请求有助于减轻下游负载的情况下才需要进行请求合并。\n\n代码粗糙，但是意思应该表达出来了，另外以上只是为了演示效果而编写的代码，实际应用中建议直接 `Hystrix` 提供的请求合并能力。\n\n<ImgView title=\"合并请求\" url=\"https://2.z.wiki/autoupload/20240212/IXyf.360X314-image.png\" />\n: \"很厉害的样子 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/pick-nose.png\" /> \",\n: \"新年快乐 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/dog.png\" /> \",\n: \"👌\",
tech/request-merge
path is https://playground.z.wiki/comment/list?path=/tech/springboot-circular-dependencies.html
spring 循环依赖\n\n### 何为循环依赖？\n\n<ImgView title=\"springboot 循环依赖\" url=\"https://2.z.wiki/images/20220522/2ab6af04a2d240b58088d08e1a0553d8.png\" />\n\n如上图，某应用中的依赖关系\n\n1. ServiceA -> ServiceC -> ServiceB\n2. ServiceB -> serviceD -> serviceC\n\n其中，`ServiceC`和`ServiceB`形成了循环依赖。\n\n在`spring`中，`bean`的创建顺序是从依赖到被依赖方，例如：\n\n`BeanA` -> `BeanB` -> `BeanC`\n\n则`spring`会一次创建`BeanC`、`BeanB`、`BeanA`。\n一旦形成循环依赖，则`spring`无法判断出该按何种顺序创建`bean`，并抛出`BeanCurrentlyInCreationException`异常。\n\n<ImgView title=\"springboot 循环依赖\" url=\"https://2.z.wiki/images/20220522/89b35126a0cb449890c5c87b791d1917.png\" />\n\n### 案例实战\n\n```java\n@Service\npublic class ServiceA {\n\n private ServiceB serviceB;\n\n @Autowired\n public ServiceA(ServiceB serviceB) {\n this.serviceB = serviceB;\n }\n}\n```\n\n```java\n@Service\npublic class ServiceB {\n\n private ServiceA serviceA;\n\n @Autowired\n public ServiceB(ServiceA serviceA) {\n this.serviceA = serviceA;\n }\n}\n```\n\n当项目中存在以上两个`service`时，服务启动便会报错：\n\n\n```text\nBeanCurrentlyInCreationException: Error creating bean with name 'serviceA':\nRequested bean is currently in creation: Is there an unresolvable circular reference?\n```\n\n### 解决方案\n\n#### 重构循环依赖\n\n循环依赖往往使我们设计上有问题，公共能力需要提取到单独的`Service`中，但是由于时间、人力成本、历史等多种原因，重构往往不是最佳选择方案。\n\n#### 使用`setter`、`field`注入\n\n\n```java\n@Service\n@Data\npublic class ServiceA {\n\n @Autowired\n private ServiceB serviceB;\n\n}\n```\n\n通过`setter`、`field`注入，被依赖的`bean`会在需要的时候再注入进去。\n\n#### @Lazy\n\n```java\n@Service\npublic class ServiceA {\n\n private ServiceB serviceB;\n\n @Autowired\n public ServiceA(@Lazy ServiceB serviceB) {\n this.serviceB = serviceB;\n }\n}\n```\n\n通过`@Lazy`实现懒注入，在创建`ServiceA`时首先会注入一个代理对象，真正的`ServiceB`会在需要用到的时候才创建。\n\n#### @PostConstruct\n\n通过`@PostConstruct`手动在创建好`Bean`的时候进行注入，避免形成相互依赖。\n\n\n```java\n@Service\npublic class ServiceA {\n\n private ServiceB serviceB;\n\n @Autowired\n public ServiceA(ServiceB serviceB) {\n this.serviceB = serviceB;\n }\n\n @PostConstruct\n public void init() {\n serviceB.setServiceA(this);\n }\n}\n```\n\n```java\n@Service\n@Data\npublic class ServiceB {\n\n private ServiceA serviceA;\n\n}\n```\n\n#### ApplicationContextAware 与 InitializingBean\n\n\n```java\n@Service\npublic class ServiceA implements ApplicationContextAware, InitializingBean {\n private ApplicationContext context;\n private ServiceB serviceB;\n\n @Override\n public void afterPropertiesSet() throws Exception {\n serviceB = context.getBean(ServiceB.class);\n }\n\n @Override\n public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n context = ctx;\n }\n}\n```\n\n```java\n@Service\npublic class ServiceB {\n\n private ServiceA serviceA;\n\n @Autowired\n public ServiceB(ServiceA serviceA) {\n this.serviceA = serviceA;\n }\n}\n```\n\n### 总结\n\n在`spring`中有很多种解决循环依赖的方案，但是如果可能的话，尽量避免循环依赖。\n\n<TheEnd />
tech/springboot-circular-dependencies
path is https://playground.z.wiki/comment/list?path=/tech/koa-vs-egg.html
---\nmeta:\n - name: description\n content: 前端框架对比 express koa egg.js midway.js\n - name: keywords\n content: 前端框架对比 express koa egg.js midway.js\ntags: [\"前端\", \"框架对比\", \"express\", \"egg.js\", \"midway.js\", \"koa\"]\n---\n\n# 从 express 到 midway\n\n### express\n\n是 Node.JS 诞生之初，最早出现的一款框架，现在仍然很流行，\n但随着`ECMAScript`的发展（`generator yield`、异步、回调地狱等原因）`express`的创作者开始推荐了`Koa`了。\n\n<ImgView title=\"前端框架, koa express egg midway.js\" url=\"https://9.z.wiki/images/20220327/e2442616a29b4fe8a5d3a9ecdf338a35.png\" />\n\n\n### Koa\n\n> `Koa` 由 `Express` 幕后的原班人马打造， 致力于成为 `web` 应用和 `API` 开发领域中的一个更小、更富有表现力、更健壮的基石。\n\nKoa 是一个非常优秀的框架，但同时它也还是一个较为基础的框架，\n只提供了核心`web`功能，写`hello world`很检点，但是`web`开发中的`session`、视图模板、路由、请求解析、日志管理等这些基础能力`Koa`都不提供，\n需要自行去官方的 [middleware](https://github.com/koajs/koa/wiki#middleware) 中查找，例如：\n\n1. `koajs/ejs` `alexmingoia/koa-router` 实现 `mvc`\n2. `koajs/bodyparser` 用来处理 `post`请求体中的数据\n3. `expressjs/cookie-parser`用来解析`cookie`\n4. `koajs/session` 基于`cookie`的`session`解决方案\n5. `Automattic/mongoose`数据库连接中间件\n\n然而，一百个开发者可能会有一百种不同的配置、整合。\n\n<ImgView title=\"前端框架, koa express egg midway.js\" url=\"https://5.z.wiki/images/20220327/3c027342d0e14401b7bae07b181a45f7.png\" />\n\n\n\n### Egg.js\n\n`Egg.js` 继承于 `Koa`，在`Koa`的基础上进行了扩展，并解决了上述问题：将一套最佳实践整合进了`Koa`并重命名为`Egg.js`，\n此外还解决了多线程启动、热更新等问题，对开发者友好、开箱即用。\n并具备如下特性：\n\n1. 约定优先配置，`Egg`默认将常用的配置都已集成，并提供约定好的使用规范。\n2. egg.js 底层基于 koa2，中间件机制和 koa 一致，实现通过 config 文件配置\n3. 插件:`Egg` 提供了一个更加强大的插件机制，让这些独立领域的功能模块可以更加容易编写\n4. 扩展:在基于 `Egg` 的框架或者应用中，我们可以通过定义 \n`app/extend/{application}.js` , `app/extend/{context}.js` , `app/extend/{request}.js` , `app/extend/{response}.js` 来扩展 Koa 中对应的四个对象的原型，通过这个功能，我们可以快速的增加更多的辅助方法。\n\n<ImgView title=\"前端框架, koa express egg midway.js\" url=\"https://7.z.wiki/images/20220327/eba932cbdfcf4017995ec40742d8fff8.png\" />\n\n### midway.js\n\n随着 `ts` 的流行，在`Egg.js`的基础上又发展出了`midway.js`，\n由于`ts`的支持，`midway.js`扩展了`IoC`、修饰器等诸多新特性\n\n示例如下：\n```TypeScript\nimport { provide, controller, inject, get } from 'midway';\n\n@provide()\n@controller('/user')\nexport class UserController {\n\n @inject('userService')\n service: IUserService;\n\n @get('/:id')\n async getUser(ctx): Promise<void> {\n const id: number = ctx.params.id;\n const user: IUserResult = await this.service.getUser({id});\n ctx.body = {success: true, message: 'OK', data: user};\n }\n}\n```\n\n此外，`midway.js`还支持一体化应用、`serverless`、函数式编程等诸多场景。\n\n<ImgView title=\"前端框架, koa express egg midway.js\" url=\"https://4.z.wiki/images/20220327/5ae1c57f624f4f14ab1e76c5134a66a8.png\" />\n: \"有点意思。\",
tech/koa-vs-egg
path is https://playground.z.wiki/comment/list?path=/tech/placeholder.html
占位图服务\n\n一个简单的占位符服务，服务地址：[占位符服务](https://z.wiki/placeholder)\n\n### 使用方法\n\n1. 普通占位符图片\n\n```html\n<img src=\"https://z.wiki/placeholder/512x128\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x128\" />\n\n\n\n```html\n<img src=\"https://z.wiki/placeholder/512x256\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x256\" />\n\n\n2. 图片加边框\n\n```html\n<img src=\"https://z.wiki/placeholder/512x256+border\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x256+border\" />\n\n\n3. 图片加叉号\n\n```html\n<img src=\"https://z.wiki/placeholder/512x256+cross\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x256+cross\" />\n\n4. 图片加叉号加边框\n\n```html\n<img src=\"https://z.wiki/placeholder/512x256+border+cross\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x256+border+cross\" />\n\n5. 设置个性化文案\n\n```html\n<img src=\"https://z.wiki/placeholder/512x256+border+cross?text=z.wiki\" />\n```\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x256+border+cross?text=z.wiki\" />\n\n6. 自定义样式\n\n```html\n<img src=\"https://z.wiki/placeholder/512x128+cross+border?text=1234&color=red&bgColor=rgba(0,255,0,0.3)&borderColor=blue&crossColor=orange\" />\n```\n\n样式支持的参数如下：\n\n* `color` 中间文字颜色\n* `bgColor` 背景色\n* `borderColor` 边框颜色\n* `crossColor` 叉号线颜色\n\n<ImgView title=\"占位符\" url=\"https://z.wiki/placeholder/512x128+cross+border?text=1234&color=red&bgColor=rgba(0,255,0,0.3)&borderColor=blue&crossColor=orange\" />\n: \"很有用,为楼主点赞 <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bad-laugh.png\" /> \",
tech/placeholder
path is https://playground.z.wiki/comment/list?path=/tech/mysql-login.html
---\nmeta:\n - name: description\n content: mysql 非交互式密码输入\n - name: keywords\n content: mysql,密码输入,非交互式,数据库,登录\n---\n# mysql 非交互式密码输入\n\n以往在登陆`mysql`服务的时候都会交互式输入密码，\n一旦密码复杂的话每次都重复性输入，\n或需要通过程序老师行定时任务，\n交互式密码输入是在让人头大。\n\n<ImgView title=\"mysql\" url=\"https://2.z.wiki/autoupload/2022-11-21/c0fc5435dc9942e4afbd8d611fcadc25.38E97C3A-0CDE-467B-9493-FB7B823C98B9.png\" width=\"150px\" />\n\n下面介绍一种非交互式密码输入的方式\n\n### 配置文件\n\n在`~`(即`home`)目录下创建`.my.cnf`文件，并写入如下内容：\n\n```\n[mysql]\nuser = user\npassword = password\n\n[mysqldump]\nuser = user\npassword = password\n```\n\n> 注：用户名密码结合实际来修改\n\n### 使用\n\n写入如上文件后只需要登录时执行`mysql -h host -u user`即可登录\n\n\n### 参考\n\n[tecadmin.net](https://tecadmin.net/mysql-commands-without-password-prompt/#:~:text=First%20commands%20will%20allow%20you%20login%20to%20mysql,any%20shell%20script%20or%20schedule%20crontab%20for%20backup.)
tech/mysql-login
path is https://playground.z.wiki/comment/list?path=/tech/nginx-cache.html
---\nmeta:\n - name: description\n content: nginx 缓存 http 协议 301 302 程序员 开发 后端 前端\n - name: keywords\n content: nginx 缓存 http 协议 301 302 程序员 开发 后端 前端\n---\n# nginx 缓存设置\n\n<ImgView title=\"nginx 缓存设置\" url=\"https://1.z.wiki/images/20220430/541461df6dca45498a9960f79f9a7de8.png\" />\n\n### nginx 是什么\n\n`Nginx`是异步非阻塞框架的`web`服务器，可以用作反向代理、负载平衡器、缓存服务器。\n该软件由俄罗斯程序员伊戈尔·赛索耶夫开发并于`2004`年首次公开发布。`2011`年成立同名公司以提供支持服务。\n\n### 什么是`http`缓存\n\n<ImgView title=\"什么是 http 缓存\" url=\"https://2.z.wiki/images/20220430/f06eae6fce9949b19768de6295e4b423.png\" />\n\n\n在`web`开发中，`http`缓存是指充分利用浏览器（和`CDN`）的特性对于已下载的资源进行复用（从内存、磁盘中直接读取，而非重新发送网络请求），从而显著的提升网络加载速度。\n\n\n浏览器都具有缓存能力，尤其对于静态资源文件，在刷新页面的时候都会优先从缓存中读取。如下图，浏览器控制台，使用本地缓存的请求往往都能在数毫秒内完成，从而在提升网站加载速度的同时减轻服务器的负载。\n\n<ImgView title=\"什么是 http 缓存\" url=\"https://5.z.wiki/images/20220430/1a1d9c7d78f44f758798d0dcfa0236b1.png\" />\n\n生产开发中，客户端缓存（浏览器）仅是我们要面对的缓存之一，另外一种就是`CDN`缓存，`CDN`是利用全国（全球）大量节点提供快速、稳定、安全的内容分发加速服务，\n通过提前缓存资源，利用用户最近节点提供下载服务，从而加速客户访问速度（顺便降低服务器压力）。\n\n`Cache-Control` 是一个`http`响应头字段，\n通过该响应头可以告诉浏览器、`CDN`指定的资源是否可以缓存、缓存多久。\n\n### 如何在 NGINX 中使用缓存控制\n\n`Cache-Control`的可选值\n\n1. `public` 公开信息，可以被浏览器+`CDN`进行缓存，适用于大部分静态资源\n2. `private` 包含`CDN`不应该缓存的信息，但是浏览器可以缓存，一般为和用户相关的数据\n3. `no-cache` 名称具有一定的误导性，`no-cache`并不表示🈲缓存，而是协商缓存，既需要和服务器进行内容校验，内容无变更的情况下加载本地缓存（对应`304`状态码）\n4. `no-store` 禁止缓存\n\n\n设置缓存的最大生命周期`max-age`，`max-age`的值通常以秒为单位的数字，如：\n\n```nginx\nadd_header Cache-Control \"public, max-age=120\"; # 设置 120 秒的缓存\n```\n\n但是如下值有特殊含义\n\n1. -1 或`off`: 关闭缓存\n2. `epoch`: 设置过期时间为`1 January,1970,00:00:01 GMT`（🤔设置成这个值有啥意义呢？）\n3. `max`: `the Unix Epoch`，2037 年 12 月 31 日 （[2038年问题](https://baike.baidu.com/item/2038%E5%B9%B4%E9%97%AE%E9%A2%98/10578442)）\n4. `30s`: `30`秒\n5. `1m`: `1`分钟\n6. `24h`: `24`小时\n7. `3d`: `3`天\n8. `1M`: `1`个月\n9. `2y`: `2`年\n\n此外，还可以添加`no-transform`指令来禁止可能存在的任何转换，例如，一些`CDN`服务会压缩图像以减少带宽。该指令禁用该行为。\n\n在`nginx`配置中，可以按如下方式添加`Cache-Control`头信息:\n\n```nginx\nexpires 1y; # 将 max-age 设置为 1 年\nadd_header Cache-Control \"public, no-transform\"; # 设置为公开信息，浏览器、CDN 均可缓存，并禁止 CDN 的任何转换\n```\n\n如果将以上配置放到`server`代码块中可以实现整站缓存配置，但更好的方案是通过文件后缀进行配置:\n\n```nginx\nlocation ~* .(?:css|js)$ {\n expires 1y;\n add_header Cache-Control \"public\";\n}\n```\n\n以上配置只对`css`、`js`文件设置了缓存。\n\n```nginx\nlocation /profile {\n expires 2d;\n add_header Cache-Control \"public, no-transform\";\n}\n```\n\n以上配置只对 `/profile` 以及对应子路径进行缓存配置。\n\n此外还可以使用 `=` 修饰符，只对指定的路径进行缓存配置。\n\n### Surrogate-Control\n\n上文提到的缓存配置将同时对浏览器、`CDN`生效，如果需要对`CDN`单独进行配置，则可通过`Surrogate-Control`头信息配置，\n大多数`CDN`均支持该头信息。\n\n配置如下：\n\n```nginx\nadd_header Surrogate-Control \"public, max-age=86400\";\nadd_header Cache-Control \"public, max-age=120\";\n```\n\n### 服务端缓存\n\n`nginx`不仅仅可以通过 `http` 协议来实现客户端缓存，还可以利用 `proxy_cache` 来实现服务端缓存，避免频繁从上游拉取资源。\n\n\n```nginx\n# 定义缓存文件路径 和 缓存名称、大小、失效规则\nproxy_cache_path ./cache-file-of-nginx levels=1:2 keys_zone=MYAPP:100m inactive=60m;\n# 定义缓存的key\nproxy_cache_key \"$scheme$request_method$host$request_uri\";\n\nserver {\n ...\n\n location / {\n proxy_pass http://backend;\n # 使用缓存\n proxy_cache MYAPP;\n proxy_cache_valid 200 302 1m;\n proxy_cache_valid 404 1m;\n }\n}\n```\n\n\n### 参考文档\n\n1. [http 缓存](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching)\n2. [nginx 添加 header](https://snippets.z.wiki/#!./snippets/nginx/nginx-header/)\n: \"受益匪浅\",
tech/nginx-cache
path is https://playground.z.wiki/comment/list?path=/tech/centos-set-swap.html
---\nmeta:\n - name: description\n content: centos set swap 交换区\n - name: keywords\n content: centos set swap 交换区\ntags: [\"centos\", \"swap\", \"交换区\", \"linux\", \"性能\"]\n---\n# centos设置缓存区\n\n### 起源\n\n曾经，体验过手机通过`ssh`登录服务器，使用`vim`进行开发，如果是前端的东西或写博客还好（[手机-ssh-vim](https://z.wiki/misc/phone-blog.html)），但如果是`Java`开发的话`vim`还真有点吃力。\n\n今天，我突发奇想，给服务器装了`gnome`桌面，通过`vnc`链接上去。安装`idea`也能顺利打开。\n\n> [How To Install and Configure VNC Remote Access for the GNOME Desktop on CentOS 7](https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-remote-access-for-the-gnome-desktop-on-centos-7)\n\n事情讲到这儿，形式似乎一篇大好，似乎如同灰姑娘和王子过上了幸福的生活，但现实不是童话\n\n当我一旦用`idea`得开某个项目的时候整个系统会进去假死状态😳\n\n<ImgView title=\"gnome\" url=\"https://1.z.wiki/autoupload/20221129/pQy8.1792X2176-image.png\" />\n\n<ImgView title=\"idea\" url=\"https://1.z.wiki/autoupload/20221129/duWx.1792X2176-image.png\" />\n\n一旦进去假死状态，整个服务器便无任何反应（`ssh`无法登陆、`telnet`无法连接、`uptime`监控报`502`）\n\n<ImgView title=\"系统假死\" url=\"https://1.z.wiki/autoupload/20221129/fHkd.1060X1898-image.png\" />\n\n<ImgView title=\"监控 502\" url=\"https://1.z.wiki/autoupload/20221129/TeGc.1326X1338-image.png\" />\n\n由于腾讯云无法收集到假死期间的任何日志、监控，想借助监控来排查的方案看来是走不通了😌\n\n### 排查\n\n排查思路有两个方向：\n\n1. `CPU`资源不足\n2. 内存不足\n\n机器配置是`4C4G`，配置也还行，这配置原价购买的话一年得一千多，作为个人博客使用绰绰有余。\n\n通过`brew`安装`htop`看看系统运行情况：\n\n```shell\nbrew install htop\n```\n\n<ImgView title=\"htop 查看监控\" url=\"https://2.z.wiki/autoupload/20221129/vu7o.1990X2484-image.png\" />\n\n赫然发现，`swap` 0️⃣😲，`4G`内存本身并不少，但是运行`idea`这样重量级的软件还是有点捉襟见肘，同时没有设置任何交换区\n导致运行既卡死。\n\n### 设置交换区\n\n系统在物理内存不够时可以通过设置交换区将内存中部分资源放置到交换区中，从而突破物理上的内存限制。\n\n交互区对`linux`系统的性能至关重要。\n\n#### 查看交换区设置\n\n首先确定下，设置交换区必须是`root`账号或有`sudo`权限的账号。\n\n```shell\nsudo swapon --show\n```\n\n通过`swapon`可以查看已设置的交换区\n\n<ImgView title=\"查看交换区\" url=\"https://2.z.wiki/autoupload/20221129/Gmv4.630X1280-image.png\" />\n\n\n如上图，我已经给服务器设置了三块交互区，共计`6.5G`空间\n\n#### 创建`swap`文件\n\n```shell\nsudo dd if=/dev/zero of=/swapfile bs=1024 count=1024k\n```\n\n通过`dd`命令创建一个大小`1G`的交换区文件\n\n#### 设置权限\n\n```shell\nsudo chmod 600 /swapfile\n```\n\n通过修改权限，使得该文件仅`root`账号可读写\n\n#### 激活交换区\n\n```shell\nsudo mkswap /swapfile\nsudo swapon /swapfile\n```\n\n此时，交换区文件已激活，程序可用的内存已经不再受限于物理内存\n\n通过`swapon`可以查看当前已设置的交换区\n\n```shell\nsudo swapon --show\n```\n\n#### 持久化交换区\n\n以上交换区已设置好，但一旦系统重启交换区配置会丢失，为此可以通过一下命令持久化交换区配置。\n\n```shell\nsudo echo \"/swapfile swap swap defaults 0 0\" >> /etc/fstab\n```\n\n支持，交换区已设置好\n\n至此，使用`idea`打开任何项目都没问题啦~\n\n<ImgView title=\"运行 idea\" url=\"https://2.z.wiki/autoupload/20221129/hlwX.1792X2176-image.png\" />\n\n同时，由于交换区的存在，系统平均内存使用量也有大幅度的下降。\n\n<ImgView title=\"内存监控 大幅下降\" url=\"https://2.z.wiki/autoupload/20221129/vlDo.1076X2134-image.png\" />\n\n### 交换区大小\n\n那具体到每个人，交换区应该设置多大比较合适呢？\n\n交换区大小没有绝对正确的设置，\n不过根据[红帽](https://www.redhat.com/en/blog/do-we-really-need-swap-modern-systems)建议：系统内存的`20%`大小。\n[centos](https://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-swapspace.html)则建议：内存小于`2G`则交换区设置为内存的两倍，\n内存大于`2G`则交换区为内存+`2G`\n\n### 其他\n\n删除交换区\n\n```shell\nsudo swapoff -v /swapfile\nsudo rm /swapfile\n```\n\n\n`gnome`： [gnome.org](https://www.gnome.org/)\n
tech/centos-set-swap
path is https://playground.z.wiki/comment/list?path=/tech/bdzz.html
---\ntags: [\"站长\", \"百度站长\", \"爬虫\"]\n---\n\n# 百度站长自动推送配置\n\n### 注册百度站长\n\n// TODO\n\n### 新增站点\n\n// TODO\n\n### 普通收录\n\n// TODO\n\n#### API 提交\n\n在`github`的`workflow`中配置推送流程，在代码部署的时候自动推送到百度\n\n> 注：API 提交有次数限制\n\n推送流程分三步\n\n1. `workflow`中调用推送流程\n2. 根据文件生成所有连接地址\n3. 调用百度`API`进行推送\n\n#### sitemap\n\n<ImgView title=\"百度站长\" url=\"https://1.z.wiki/images/20211116/18569d6f80584844b9559e7e77837359.png\" />\n\n\n文件地址格式为txt或xml，每个地址文件最多包含50,000个网址且需小于10MB。\nsitemap提交工具仅对已验证站点开放使用，开发者无法提交同一主域下其他未验证站点的数据。详细说明\n请勿提交索引型sitemap，索引型不予处理，且若存在索引型sitemap，将不允许提交新文件；请删除索引型sitemap后再尝试提交数据。\n填写站点的主体备案号，可以提高每日提交上限。去填写\n\n#### 手动提交\n\n<ImgView title=\"百度站长\" url=\"https://2.z.wiki/images/20211116/bd1dffd023374fba99140cc062a19796.png\" />\n\n\n请在输入框中填写当前选择站点的链接；如需提交其他验证站点链接，请选择对应的站点\n您每次最多可提交20条链接，每行一条\n仅支持页面对应链接的提交，不支持sitemap形式的文件提交\n如果需要提交非验证本站链接，请点击提交非验证站点链接\n\n\n### 百度爬虫抓取\n\n连续4天了，每天都在给百度推送链接，终于等来了百度爬虫的一次爬去，开心哭了😂\n\n不过百度也真够慢的，`Google`、`bing`早就天天开始爬取我的网站了，百度一直没反应，主动推送链接也反应极慢\n\n<ImgView title=\"百度站长\" url=\"https://3.z.wiki/images/20211118/b043058121da4d27940e4ec992d52360.png\" />: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/yawn.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/yawn.png\" /> \",\n: \"赶紧写吧\",\n: \"赶紧写吧\n\",\n: \"赶紧写吧\",\n: \"还没写完呢？\",
tech/bdzz
path is https://playground.z.wiki/comment/list?path=/tech/vim-macro.html
vim macro 从入门到精通\n\n<ImgView title=\"vim\" url=\"https://5.z.wiki/autoupload/20230712/7VXh.225X224-image.png\" />\n\n### 什么是`Vim`宏\n\n#### 宏的定义和作用\n\n<TextTitle text=\"定义\" title=\"宏的定义和作用\" />\n\n对于文本编辑器来说，“宏”是一个由用户定义的命令序列，可以在编辑器中多次执行这个序列。\n\n`Vim`宏是一种可以录制、回放和重复执行一系列操作的功能。\n宏的目的是为了减少在编辑大批量文本时的手动操作，提高编辑效率。\n`Vim`宏可以用于处理大量文本，例如代码缩进、文本替换、注释添加等。\n\n### 如何录制`Vim`宏\n\n<TextTitle text=\"录制\" title=\"如何录制\" />\n\n#### 开始和停止录制宏\n\n`Vim`宏的录制需要使用`q<letter><commands>q`等一系列命令。\n\n开始录制宏时，需要按下`q<letter>`命令来启动录制，表示开始录制一个名为`<letter>`的宏，`<letter>`可以是任意英文字母。\n接着执行一系列操作，例如在文本中进行的查找、替换、删除等操作。\n完成录制后，需要按下`q`命令来停止录制。\n\n\n#### 如何执行录制好的宏\n\n录制完成后，可以通过`@<letter>`命令来重复执行这个宏，其中`<letter>`是宏的名称，可以是任意英文字母。\n\n#### 读取和修改宏\n\n\n通过命令`:reg <letter>`查看名称为`<letter>`的宏（即寄存器`<letter>`中保存的内容）。\n\n通过命令`:let @<letter>=\"<Ctrl-R><Ctrl-r><letter>\"`命令可以对寄存器的内容进行二次修改。\n\n\n### `Vim`宏的进阶使用\n\n<TextTitle text=\"进阶\" title=\"进阶\" />\n\n#### 强制执行宏\n\n`Vim`宏的执行可能因为某些原因而遇到错误，例如替换时找不到匹配项等。\n虽然这些错误会中断宏的执行，但可以通过强制执行宏来忽略这些错误，让宏继续执行。\n使用`q<letter>!`命令可以强制执行宏，即使它遇到错误也不会中断执行。\n\n#### 如何在`Vim`中设置宏的快捷键\n\n`Vim`宏可以通过映射来自定义快捷键，并将其与宏关联起来。\n使用`:nnoremap`命令可以创建一个新的映射，让快捷键与宏关联。\n```\nnnoremap ,<letter1> @<letter2>\n```\n\n> 注：配置中的`<letter1> <letter1>`需要根据实际需要替换。\n在使用映射时，只需要按下对应的快捷键，即可自动执行宏。\n\n### 实例应用\n\n<TextTitle text=\"实战\" title=\"实战\" />\n\n#### 通过宏快速添加后缀\n\n<VideoPlayer src=\"https://fudongdong-statics.oss-cn-beijing.aliyuncs.com/autoupload/20230712/a09D.我的影片_13.mp4\" />\n: \"其实我一直想写一个 vim 的教程，奈何没有足够的时间和精力。\",
tech/vim-macro
path is https://playground.z.wiki/comment/list?path=/tech/uuid.html
---\nmeta:\n - name: description\n content: uuid 是什么？有哪些版本？该如何进行选择呢？\n - name: keywords\n content: uuid,guid,唯一ID,全局ID,id 版本\ntags: [\"uuid\", \"唯一ID\", \"全局ID\", \"guid\", \"版本\"]\n---\n\n# UUID版本指南\n\n<ImgView title=\"uuid\" url=\"https://1.z.wiki/autoupload/2022-05-02/6da7a9010ba747ba9fdf0678e55b1643.uuid.drawio.svg\" />\n\n这篇文章将介绍`UUID`从`V1`到`V5`的差异以及该如何选择正确的版本。\n\n### UUID 是什么\n\n通用唯一识别码（全称：`Universally Unique Identifier`，简称：`UUID`）是用来在系统中唯一标识某条信息的`128`位标识码。\n\n根据标准（[RFC 4122](https://www.ietf.org/rfc/rfc4122.txt)）,`UUID`的生成不依赖外部服务，\n且具有唯一性（注：重复概率几乎为零）。\n\n`UUID`有`16`进制的`32`个数字组成，故理论上总量为`16<sup>32</sup>`,即使每纳秒生成一万亿个，也好耗尽壹佰亿年才能强所有`UUID`用完。\n\n\n### UUID 的结构\n\n<ImgView title=\"uuid\" url=\"https://2.z.wiki/autoupload/2022-05-02/6da7a9010ba747ba9fdf0678e55b1643.uuid.drawio.svg\" />\n\n`UUID`包含`32`个`16`进制数字，分为`5`段，`5`段长度分别为`8`、`4`、`4`、`4`、`12`，中间使用连字符连接。\n\n例如：`xxxxxxxx-xxxx-Mxxx-xxxx-xxxxxxxxxxxx`\n\n其中`M`表示 `UUID`的版本,从 [uuid生成](https://devtool.tech/uuid) 可以看出，`M`位置的值和版本是一致的。\n\n各段含义如下：\n\n| 名称 | 长度 （字节） | 长度（16进制数字码长） | 说明 |\n|------------------------------------------|---------|--------------|---------------------------------------|\n| time\_low | 4 | 8 | 整数：低位 32 bits 时间 |\n| time\_mid | 2 | 4 | 整数：中间位 16 bits 时间 |\n| time\_hi\_and\_version | 2 | 4 | 最高有效位中的 4 bits“版本”，后面是高 12 bits 的时间 |\n| clock\_seq\_hi\_and\_res clock\_seq\_low | 2 | 4 | 最高有效位为 1-3 bits“变体”，后跟13-15 bits 时钟序列 |\n| node | 6 | 12 | 48 bits 节点 ID |\n\n\n\n### V1\n\n`UUID-V1` 是通过使用主机 `MAC` 地址和当前日期和时间的组合生成的。除此之外，它还引入了另一个随机组件，以确保其唯一性。\n但是如果使用同一台机器、同时时间生成`UUID`，会有很小的几率重复。\n\n<ImgView title=\"uuid\" url=\"https://3.z.wiki/autoupload/2022-05-02/5e3cd31cab884203a2b317f8e92ad146.uuid-v1.drawio.svg\" />\n\n`UUID-v1`存在的问题是：\n\n1. 存在重复几率\n2. 根据`ID`能推算出创建时的相对时间\n3. 根据`ID`能推算出创建的机器唯一标识\n\n\n### V2\n\n`UUID-v2`和`V1`很类似，是根据标识符（通常是组或用户`ID`）、时间和节点`ID`生成，不过区别在于`V2`将`V1`中的部分时间信息换成了主机名，\n故应用具有局限性（有隐私风险），未大规模使用。\n\n### V3\n\n`UUID-v3` 通过散列（`MD5`）名字空间（`namespace`）标识符和名称生成。和`V1`、`V2`不同，`V3`不依赖与机器信息和时间信息，\n但是`V3`要求输入命名空间+名称，命名空间本身也是一个`UUID`，用来标识应用环境，名称通常是用户账号、用户名之类的内容，通过命名空间+名称+三列算法算出`UUID`。\n\n<ImgView title=\"uuid\" url=\"https://5.z.wiki/autoupload/2022-05-02/e0763e1ca4db43ac90b868a76076e37b.uuid-v3.drawio.svg\" />\n\n### V4\n\n`UUID-v4` 组成 `UUID v4` 的位是随机生成的，没有固有逻辑（除了第三段首个数字，该数字标识版本号），不包含命名空间、设备信息、时间信息。\n故，`UUID-v4`最容易理解、应用也最为广泛。\n\n<ImgView title=\"uuid\" url=\"https://4.z.wiki/autoupload/2022-05-02/fefb73e8621d455aa20930dcbb7c3a4b.uuid-v4.drawio.svg\" />\n\n`java` 生成 `UUID-V4`\n```java\n String uuid = UUID.randomUUID();\n```\n`js` 生成 `UUID-v4` 参考[https://www.npmjs.com/package/uuidv4](https://www.npmjs.com/package/uuidv4)\n\n### V5\n\n`UUID-v5` 和`V3`类似，区别在于散列算法，使用了`sha1`散列算法。\n\n<ImgView title=\"uuid\" url=\"https://6.z.wiki/autoupload/2022-05-02/eb11afcbca884332aa8196f92a563c72.uuid-v5.drawio.svg\" />\n\n> 注：相同的命名空间、名称，将映射到同一`UUID`，且推荐使用`V5`而非`V3`\n\n具体实现可参考 [UUID5](https://github.com/rootsdev/polygenea/blob/master/java/src/org/rootsdev/polygenea/UUID5.java)\n\n### 如何选择\n\n`V4`是随机`ID`，其他都不是，故：正常情况下直接选择`UUID-V4`就可以了，如果需要根据`ID`给出创建时间、机器信息等内容的话，\n选择`V1`比较合适，如果还有特殊情况，需要根据已有信息衍生出新的`ID`，可以使用`V5`。\n: \"简洁但并不简单。\",
tech/uuid
path is https://playground.z.wiki/comment/list?path=/tech/lsof.html
lsof\n\n`lsof` 含义为：`list of open file`\n\n<ImgView title=\"lsof\" url=\"https://3.z.wiki/autoupload/20230708/BlFy.450X800-image.png\" />\n\n\n`lsof` 是一个列出所有打开文件的工具，可以用来检查打开的文件、网络连接、进程等信息。下面是 `lsof` 常用的功能和用途：\n\n1. 查看文件\n\n`lsof` 可以查看系统中打开的所有文件，包括文本文件、二进制文件、设备文件、目录等。可以使用 `lsof filename` 命令来查看某个文件被哪些进程打开。\n\n2. 查看网络连接\n\n`lsof` 可以查看系统中所有打开的网络连接，包括 TCP、UDP、Unix 域套接字、网络文件系统等。可以使用 `lsof -i` 或 `lsof -i tcp:8080` 或 `lsof -i:8080` 等命令来查看某些指定端口的网络连接。\n\n3. 查看进程\n\n`lsof` 可以查看系统中所有运行的进程信息，包括进程 ID、进程所占用的端口号、进程运行的程序、进程打开的文件等。可以使用 `lsof -p PID` 命令来查看某个指定进程的信息。\n\n4. 查看登录的用户\n\n`lsof` 可以查看登录到系统中的所有用户信息，包括用户 ID、用户所在的组、用户登录的终端等。可以使用 `lsof -u username` 命令来查看某个指定用户的信息。\n\n5. 查看设备文件\n\n`lsof` 可以查看系统中所有打开的设备文件，包括磁盘、光驱、串口、USB 等。可以使用 `lsof /dev/disk1` 命令来查看某个指定设备的信息。\n\n更多脚本可访问[敖武的代码片段](https://snippets.z.wiki/#!./snippets/shell/lsof/): \"挺详细的\",
tech/lsof
path is https://playground.z.wiki/comment/list?path=/tech/aspx.html
aspx\n\n<ImgView title=\"aspx\" url=\"https://8.z.wiki/autoupload/20230123/6Byh.270X838-image.png\" />\n\n京东还有服务用了`asp.net`技术，那服务器想必也是`Windows`系统了。\n\n[京东](https://www.jd.com/allSort.aspx): \"回复:&quot; &lt;img src=&quot;https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bomb.png&quot; /&gt; &lt;img src=&quot;https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bomb.png&quot; /&gt; &quot;\n\n------------\n\n <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/hum.png\" /> \",\n: \" <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bomb.png\" /> <img src=\"https://z.wiki/autoupload/20240216/etef.emoji.zip/emoji/bomb.png\" /> \",
tech/aspx
path is https://playground.z.wiki/comment/list?path=/tech/google-seo.html
---\nmeta:\n - name: description\n content: seo 优化 网站 排名 搜索\n - name: keywords\n content: seo 优化 网站 排名 搜索\n---\n# SEO 优化\n\n我们都知道 html 中的 description keyword 等 [meta](https://www.w3schools.com/tags/tag_meta.asp) 信息对 [SEO](https://zh.wikipedia.org/zh-hans/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96) 至关重要。\n\n<ImgView title=\"SEO 优化\" url=\"https://3.z.wiki/autoupload/20240125/TOYj.159X318-image.png\" />\n\n今天我们就做一个实验，来看下 meta 标签对排名的影响，以我的站点为例：\n\n### 关键词：nginx 缓存\n\n点击链接 [nginx 缓存](https://www.google.com/search?q=nginx+%E7%BC%93%E5%AD%98&oq=nginx+%E7%BC%93%E5%AD%98&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQRRg8MgYIAhBFGDwyBggDEEUYPdIBBzIwM2owajGoAgCwAgA&sourceid=chrome&ie=UTF-8)\n即可打开 Google 的搜索结果，如下图 排名第四。\n\n<ImgView title=\"SEO 优化\" url=\"https://1.z.wiki/autoupload/20240124/vnUE.1546X2096-Pasted_Graphic_1.png\" />\n\n这时候还没修改页面中的 description keyword 等 meta 标签呢，现在已修改并发布到线上，等几天再更新看下效果。\n\n<ImgView title=\"SEO 优化\" url=\"https://4.z.wiki/autoupload/20240125/3lAI.2346X3712-image.png\" />\n\n\n### 关键词：绩效自评\n\n\n点击链接 [绩效自评](https://www.google.com/search?q=%E7%BB%A9%E6%95%88%E8%87%AA%E8%AF%84&oq=%E7%BB%A9%E6%95%88%E8%87%AA%E8%AF%84&gs_lcrp=EgZjaHJvbWUqBggAEEUYOzIGCAAQRRg7MgYIARBFGDsyBggCEEUYPTIGCAMQRRg8MgYIBBBFGDzSAQgzODMzajBqMagCALACAA&sourceid=chrome&ie=UTF-8)\n即可打开 Google 的搜索结果，如下图 排名第五。情况同上。\n\n<ImgView title=\"SEO 优化\" url=\"https://7.z.wiki/autoupload/20240124/IIRL.2144X2200-Pasted_Graphic_2.png\" />\n\n\n\n### 未完待续\n\n<ImgView title=\"SEO 优化\" url=\"https://7.z.wiki/autoupload/20240124/Mt5R.224X224-image.png\" />\n: \"回复:\"感觉要烂尾了\"\n\n------------\n\n其实烂尾是常态\",\n: \"感觉要烂尾了\",\n: \"有结论了吗？\",
tech/google-seo
path is https://playground.z.wiki/comment/list?path=/tech/secure-gallery.html
---\nmeta:\n - name: description\n content: web 安全 常见漏洞 XSS sql注入 跨权 CSRF\n - name: keywords\n content: web 安全 常见漏洞 XSS sql注入 跨权 CSRF\n---\n# web 安全知多少\n\nWIP: \"回复:&quot;还没开始？&quot;\n\n------------\n\nOn the way!\",\n: \"还没开始？\",
tech/secure-gallery
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
Invalid argument(s)
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
update index for playground.z.wiki
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
